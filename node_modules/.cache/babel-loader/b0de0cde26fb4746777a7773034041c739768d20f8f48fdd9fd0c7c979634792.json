{"ast":null,"code":"import { Action, InputType } from '../core-actions/Action';\nimport * as _ from 'lodash';\nexport class State {\n  constructor(options) {\n    this.actions = [];\n    this.keys = [];\n    this.childStates = [];\n    this.options = options;\n  }\n  setEngine(engine) {\n    this.engine = engine;\n  }\n  getOptions() {\n    return this.options;\n  }\n  eject() {\n    this.engine.getStateMachine().popState();\n  }\n  transitionWithEvent(state, event) {\n    this.engine.getStateMachine().pushState(state);\n    this.engine.getActionEventBus().fireAction(event);\n  }\n  registerAction(action) {\n    this.actions.push(action);\n  }\n  tryActivateParentState(keys) {\n    if (this.keys.length > 0 && !this.isKeysFullfilled(keys)) {\n      this.eject();\n      return true;\n    }\n    return false;\n  }\n  tryActivateChildState(keys) {\n    const state = this.findStateToActivate(keys);\n    if (state) {\n      this.engine.getStateMachine().pushState(state);\n      return true;\n    }\n    return false;\n  }\n  findStateToActivate(keys) {\n    for (let child of this.childStates) {\n      if (child.isKeysFullfilled(keys)) {\n        return child;\n      }\n    }\n    return null;\n  }\n  isKeysFullfilled(keys) {\n    return _.intersection(this.keys, keys).length === this.keys.length;\n  }\n  activated(previous) {\n    const keys = this.engine.getActionEventBus().getKeys();\n    if (this.tryActivateParentState(keys) || this.tryActivateChildState(keys)) {\n      return;\n    }\n    // perhaps we need to pop again?\n    this.handler1 = this.engine.getActionEventBus().registerAction(new Action({\n      type: InputType.KEY_DOWN,\n      fire: () => {\n        this.tryActivateChildState(this.engine.getActionEventBus().getKeys());\n      }\n    }));\n    this.handler2 = this.engine.getActionEventBus().registerAction(new Action({\n      type: InputType.KEY_UP,\n      fire: () => {\n        this.tryActivateParentState(this.engine.getActionEventBus().getKeys());\n      }\n    }));\n    for (let action of this.actions) {\n      this.engine.getActionEventBus().registerAction(action);\n    }\n  }\n  deactivated(next) {\n    if (this.handler1) {\n      this.handler1();\n    }\n    if (this.handler2) {\n      this.handler2();\n    }\n    // if this happens, we are going into heirachial state machine mode\n    for (let action of this.actions) {\n      this.engine.getActionEventBus().deregisterAction(action);\n    }\n  }\n}","map":{"version":3,"names":["Action","InputType","_","State","constructor","options","actions","keys","childStates","setEngine","engine","getOptions","eject","getStateMachine","popState","transitionWithEvent","state","event","pushState","getActionEventBus","fireAction","registerAction","action","push","tryActivateParentState","length","isKeysFullfilled","tryActivateChildState","findStateToActivate","child","intersection","activated","previous","getKeys","handler1","type","KEY_DOWN","fire","handler2","KEY_UP","deactivated","next","deregisterAction"],"sources":["C:\\Users\\samir\\Diagram gen\\diagram-sami\\node_modules\\@projectstorm\\react-canvas-core\\src\\core-state\\State.ts"],"sourcesContent":["import { CanvasEngine } from '../CanvasEngine';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { SyntheticEvent } from 'react';\nimport * as _ from 'lodash';\n\nexport interface StateOptions {\n\tname: string;\n}\n\nexport abstract class State<E extends CanvasEngine = CanvasEngine> {\n\tprotected engine: E;\n\tprotected actions: Action[];\n\tprotected keys: string[];\n\tprotected options: StateOptions;\n\tprotected childStates: State[];\n\n\tprivate handler1;\n\tprivate handler2;\n\n\tconstructor(options: StateOptions) {\n\t\tthis.actions = [];\n\t\tthis.keys = [];\n\t\tthis.childStates = [];\n\t\tthis.options = options;\n\t}\n\n\tsetEngine(engine: E) {\n\t\tthis.engine = engine;\n\t}\n\n\tgetOptions() {\n\t\treturn this.options;\n\t}\n\n\teject() {\n\t\tthis.engine.getStateMachine().popState();\n\t}\n\n\ttransitionWithEvent(state: State, event: ActionEvent<SyntheticEvent>) {\n\t\tthis.engine.getStateMachine().pushState(state);\n\t\tthis.engine.getActionEventBus().fireAction(event);\n\t}\n\n\tregisterAction(action: Action) {\n\t\tthis.actions.push(action);\n\t}\n\n\ttryActivateParentState(keys: string[]) {\n\t\tif (this.keys.length > 0 && !this.isKeysFullfilled(keys)) {\n\t\t\tthis.eject();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\ttryActivateChildState(keys: string[]) {\n\t\tconst state = this.findStateToActivate(keys);\n\t\tif (state) {\n\t\t\tthis.engine.getStateMachine().pushState(state);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfindStateToActivate(keys: string[]) {\n\t\tfor (let child of this.childStates) {\n\t\t\tif (child.isKeysFullfilled(keys)) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tisKeysFullfilled(keys: string[]) {\n\t\treturn _.intersection(this.keys, keys).length === this.keys.length;\n\t}\n\n\tactivated(previous: State) {\n\t\tconst keys = this.engine.getActionEventBus().getKeys();\n\n\t\tif (this.tryActivateParentState(keys) || this.tryActivateChildState(keys)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// perhaps we need to pop again?\n\t\tthis.handler1 = this.engine.getActionEventBus().registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.KEY_DOWN,\n\t\t\t\tfire: () => {\n\t\t\t\t\tthis.tryActivateChildState(this.engine.getActionEventBus().getKeys());\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tthis.handler2 = this.engine.getActionEventBus().registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.KEY_UP,\n\t\t\t\tfire: () => {\n\t\t\t\t\tthis.tryActivateParentState(this.engine.getActionEventBus().getKeys());\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tfor (let action of this.actions) {\n\t\t\tthis.engine.getActionEventBus().registerAction(action);\n\t\t}\n\t}\n\n\tdeactivated(next: State) {\n\t\tif (this.handler1) {\n\t\t\tthis.handler1();\n\t\t}\n\t\tif (this.handler2) {\n\t\t\tthis.handler2();\n\t\t}\n\t\t// if this happens, we are going into heirachial state machine mode\n\t\tfor (let action of this.actions) {\n\t\t\tthis.engine.getActionEventBus().deregisterAction(action);\n\t\t}\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}