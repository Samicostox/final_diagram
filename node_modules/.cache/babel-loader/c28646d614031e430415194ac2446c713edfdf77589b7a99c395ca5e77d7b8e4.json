{"ast":null,"code":"import { Toolkit } from '../Toolkit';\nexport var InputType;\n(function (InputType) {\n  InputType[\"MOUSE_DOWN\"] = \"mouse-down\";\n  InputType[\"MOUSE_UP\"] = \"mouse-up\";\n  InputType[\"MOUSE_MOVE\"] = \"mouse-move\";\n  InputType[\"MOUSE_WHEEL\"] = \"mouse-wheel\";\n  InputType[\"KEY_DOWN\"] = \"key-down\";\n  InputType[\"KEY_UP\"] = \"key-up\";\n  InputType[\"TOUCH_START\"] = \"touch-start\";\n  InputType[\"TOUCH_END\"] = \"touch-end\";\n  InputType[\"TOUCH_MOVE\"] = \"touch-move\";\n})(InputType || (InputType = {}));\nexport class Action {\n  constructor(options) {\n    this.options = options;\n    this.id = Toolkit.UID();\n  }\n  setEngine(engine) {\n    this.engine = engine;\n  }\n}","map":{"version":3,"names":["Toolkit","InputType","Action","constructor","options","id","UID","setEngine","engine"],"sources":["C:\\Users\\samir\\Diagram gen\\diagram-sami\\node_modules\\@projectstorm\\react-canvas-core\\src\\core-actions\\Action.ts"],"sourcesContent":["import { MouseEvent, KeyboardEvent, WheelEvent, TouchEvent, SyntheticEvent } from 'react';\nimport { Toolkit } from '../Toolkit';\nimport { CanvasEngine } from '../CanvasEngine';\nimport { BaseModel } from '../core-models/BaseModel';\n\nexport enum InputType {\n\tMOUSE_DOWN = 'mouse-down',\n\tMOUSE_UP = 'mouse-up',\n\tMOUSE_MOVE = 'mouse-move',\n\tMOUSE_WHEEL = 'mouse-wheel',\n\tKEY_DOWN = 'key-down',\n\tKEY_UP = 'key-up',\n\tTOUCH_START = 'touch-start',\n\tTOUCH_END = 'touch-end',\n\tTOUCH_MOVE = 'touch-move'\n}\n\nexport interface Mapping {\n\t[InputType.MOUSE_DOWN]: MouseEvent;\n\t[InputType.MOUSE_UP]: MouseEvent;\n\t[InputType.MOUSE_MOVE]: MouseEvent;\n\t[InputType.MOUSE_WHEEL]: WheelEvent;\n\t[InputType.KEY_DOWN]: KeyboardEvent;\n\t[InputType.KEY_UP]: KeyboardEvent;\n\t[InputType.TOUCH_START]: TouchEvent;\n\t[InputType.TOUCH_END]: TouchEvent;\n\t[InputType.TOUCH_MOVE]: TouchEvent;\n}\n\nexport interface ActionEvent<Event extends SyntheticEvent = SyntheticEvent, Model extends BaseModel = BaseModel> {\n\tevent: Event;\n\tmodel?: Model;\n}\n\nexport interface ActionOptions {\n\ttype: InputType;\n\tfire: (event: ActionEvent<Mapping[this['type']]>) => void;\n}\n\nexport class Action<T extends CanvasEngine = CanvasEngine> {\n\toptions: ActionOptions;\n\tid: string;\n\tengine: T;\n\n\tconstructor(options: ActionOptions) {\n\t\tthis.options = options;\n\t\tthis.id = Toolkit.UID();\n\t}\n\n\tsetEngine(engine: T) {\n\t\tthis.engine = engine;\n\t}\n}\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,YAAY;AAIpC,WAAYC,SAUX;AAVD,WAAYA,SAAS;EACpBA,SAAA,6BAAyB;EACzBA,SAAA,yBAAqB;EACrBA,SAAA,6BAAyB;EACzBA,SAAA,+BAA2B;EAC3BA,SAAA,yBAAqB;EACrBA,SAAA,qBAAiB;EACjBA,SAAA,+BAA2B;EAC3BA,SAAA,2BAAuB;EACvBA,SAAA,6BAAyB;AAC1B,CAAC,EAVWA,SAAS,KAATA,SAAS;AAkCrB,OAAM,MAAOC,MAAM;EAKlBC,YAAYC,OAAsB;IACjC,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,EAAE,GAAGL,OAAO,CAACM,GAAG,EAAE;EACxB;EAEAC,SAASA,CAACC,MAAS;IAClB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}