{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samir\\\\Diagram gen\\\\diagram-sami\\\\src\\\\datamodeldiagram.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport 'reactflow/dist/style.css';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport Sidebar from './sidebar';\nimport ReactFlow, { MiniMap, Controls, Background, useNodesState, useEdgesState, addEdge } from 'reactflow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RectangleNode = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 10,\n      border: '1px solid black',\n      backgroundColor: 'white'\n    },\n    children: data.label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n};\n_c = RectangleNode;\nconst CircleNode = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 10,\n      borderRadius: '50%',\n      border: '1px solid black',\n      backgroundColor: 'white'\n    },\n    children: data.label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n_c2 = CircleNode;\nconst TriangleNode = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 0,\n      height: 0,\n      borderLeft: '50px solid transparent',\n      borderRight: '50px solid transparent',\n      borderBottom: '100px solid black'\n    },\n    children: data.label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n_c3 = TriangleNode;\nconst nodeTypes = {\n  rectangle: RectangleNode,\n  circle: CircleNode,\n  triangle: TriangleNode\n};\nconst initialNodes = [{\n  id: '1',\n  position: {\n    x: 250,\n    y: 0\n  },\n  data: {\n    label: 'Auth System'\n  }\n}, {\n  id: '2',\n  position: {\n    x: 100,\n    y: 150\n  },\n  data: {\n    label: 'Profile Page'\n  }\n}, {\n  id: '3',\n  position: {\n    x: 250,\n    y: 150\n  },\n  data: {\n    label: 'History Page'\n  }\n}, {\n  id: '4',\n  position: {\n    x: 400,\n    y: 150\n  },\n  data: {\n    label: 'Bet Page'\n  }\n}];\nconst initialEdges = [{\n  id: 'e1-2',\n  source: '1',\n  target: '2'\n}, {\n  id: 'e1-3',\n  source: '1',\n  target: '3'\n}, {\n  id: 'e1-4',\n  source: '1',\n  target: '4'\n}];\nconst defaultColors = ['#FF5733', '#33FF57', '#3357FF', '#FFFF33', '#FF33FF', '#33FFFF'];\nexport default function DataModelDiagram() {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [nodeName, setNodeName] = useState('');\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const [colorPickerPosition, setColorPickerPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [usedColors, setUsedColors] = useState(new Set());\n  const [customColor, setCustomColor] = useState('#000000');\n  const reactFlowWrapper = useRef(null);\n  let id = 0;\n  const getId = () => `dndnode_${id++}`;\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData('application/reactflow');\n\n    // check if the dropped element is valid\n    if (typeof type === 'undefined' || !type) {\n      return;\n    }\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const newNode = {\n      id: getId(),\n      type,\n      position,\n      data: {\n        label: `${type} node`\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n  }, [reactFlowInstance]);\n  const exportDiagramAsPdf = async () => {\n    const flowContainer = document.querySelector('.react-flow__container');\n    if (flowContainer) {\n      const canvas = await html2canvas(flowContainer);\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF({\n        orientation: 'landscape',\n        unit: 'px',\n        format: [canvas.width, canvas.height]\n      });\n      pdf.addImage(imgData, 'PNG', 0, 0);\n      pdf.save('diagram.pdf');\n    }\n  };\n  const onDragStart = useCallback((event, nodeType) => {\n    event.dataTransfer.setData('application/reactflow', nodeType);\n    event.dataTransfer.effectAllowed = 'move';\n  }, []);\n  useEffect(() => {\n    const colorsInUse = new Set(nodes.map(node => {\n      var _node$style;\n      return (_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.backgroundColor;\n    }).filter(Boolean));\n    setUsedColors(colorsInUse);\n  }, [nodes]);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node);\n    setNodeName(node.data.label);\n    setShowColorPicker(true);\n    setColorPickerPosition({\n      x: event.clientX,\n      y: event.clientY\n    });\n  }, []);\n  const changeNodeColor = useCallback(color => {\n    setNodes(nds => nds.map(n => {\n      if (n.id === selectedNode.id) {\n        return {\n          ...n,\n          style: {\n            ...n.style,\n            backgroundColor: color\n          }\n        };\n      }\n      return n;\n    }));\n    setShowColorPicker(false);\n  }, [selectedNode, setNodes]);\n  const onCustomColorChange = useCallback(e => {\n    setCustomColor(e.target.value);\n  }, []);\n  const onCustomColorKeyDown = useCallback(e => {\n    if (e.key === 'Enter') {\n      changeNodeColor(customColor);\n    }\n  }, [customColor, changeNodeColor]);\n  const onCustomColorBlur = useCallback(() => {\n    changeNodeColor(customColor);\n  }, [customColor, changeNodeColor]);\n  const updateNodeName = useCallback(() => {\n    setNodes(nds => nds.map(n => {\n      if (n.id === selectedNode.id) {\n        return {\n          ...n,\n          data: {\n            ...n.data,\n            label: nodeName\n          }\n        };\n      }\n      return n;\n    }));\n    setSelectedNode(null);\n    setNodeName('');\n  }, [nodeName, selectedNode, setNodes]);\n  const addNewNode = useCallback(() => {\n    const newNodeId = `node_${nodes.length + 1}`;\n    const newNode = {\n      id: newNodeId,\n      data: {\n        label: `Node ${nodes.length + 1}`\n      },\n      position: {\n        x: window.innerWidth / 2 - 100,\n        y: window.innerHeight / 2 - 50\n      } // Adjust for node size\n    };\n    setNodes(nds => nds.concat(newNode));\n    setSelectedNode(newNode);\n    setNodeName(newNode.data.label);\n  }, [nodes, setNodes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100vw',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onDragStart: onDragStart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: [showColorPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          left: colorPickerPosition.x,\n          top: colorPickerPosition.y,\n          zIndex: 5,\n          padding: '10px',\n          backgroundColor: '#fff',\n          boxShadow: '0 0 10px rgba(0,0,0,0.2)'\n        },\n        children: [([...usedColors].length ? [...usedColors] : defaultColors).map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: color,\n            width: '25px',\n            height: '25px',\n            display: 'inline-block',\n            cursor: 'pointer',\n            margin: '5px'\n          },\n          onClick: () => changeNodeColor(color)\n        }, color, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 3\n        }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: customColor,\n          onChange: onCustomColorChange,\n          onKeyDown: onCustomColorKeyDown,\n          onBlur: onCustomColorBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          zIndex: 4,\n          left: 10,\n          top: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: nodeName,\n          onChange: e => setNodeName(e.target.value),\n          onBlur: updateNodeName,\n          style: {\n            padding: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportDiagramAsPdf,\n        style: {\n          position: 'absolute',\n          right: 20,\n          top: 20,\n          zIndex: 4\n        },\n        children: \"Export as PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewNode,\n        style: {\n          position: 'absolute',\n          left: 20,\n          bottom: 20,\n          zIndex: 4,\n          padding: '10px'\n        },\n        children: \"Add Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        onInit: setReactFlowInstance,\n        onDrop: onDrop,\n        onDragOver: onDragOver,\n        fitView: true,\n        nodeTypes: nodeTypes,\n        children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Background, {\n          variant: \"dots\",\n          gap: 12,\n          size: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 9\n  }, this);\n}\n_s(DataModelDiagram, \"RrKHCfTaSyyKs6rlwwepAbHDj0Q=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c4 = DataModelDiagram;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"RectangleNode\");\n$RefreshReg$(_c2, \"CircleNode\");\n$RefreshReg$(_c3, \"TriangleNode\");\n$RefreshReg$(_c4, \"DataModelDiagram\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","useRef","html2canvas","jsPDF","Sidebar","ReactFlow","MiniMap","Controls","Background","useNodesState","useEdgesState","addEdge","jsxDEV","_jsxDEV","RectangleNode","data","style","padding","border","backgroundColor","children","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","CircleNode","borderRadius","_c2","TriangleNode","width","height","borderLeft","borderRight","borderBottom","_c3","nodeTypes","rectangle","circle","triangle","initialNodes","id","position","x","y","initialEdges","source","target","defaultColors","DataModelDiagram","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","selectedNode","setSelectedNode","nodeName","setNodeName","showColorPicker","setShowColorPicker","colorPickerPosition","setColorPickerPosition","usedColors","setUsedColors","Set","customColor","setCustomColor","reactFlowWrapper","getId","onDrop","event","preventDefault","reactFlowBounds","current","getBoundingClientRect","type","dataTransfer","getData","reactFlowInstance","project","clientX","left","clientY","top","newNode","nds","concat","exportDiagramAsPdf","flowContainer","document","querySelector","canvas","imgData","toDataURL","pdf","orientation","unit","format","addImage","save","onDragStart","nodeType","setData","effectAllowed","colorsInUse","map","node","_node$style","filter","Boolean","onConnect","params","eds","onNodeClick","changeNodeColor","color","n","onCustomColorChange","e","value","onCustomColorKeyDown","key","onCustomColorBlur","updateNodeName","addNewNode","newNodeId","length","window","innerWidth","innerHeight","display","flex","zIndex","boxShadow","background","cursor","margin","onClick","onChange","onKeyDown","onBlur","right","bottom","onInit","setReactFlowInstance","onDragOver","fitView","variant","gap","size","_c4","$RefreshReg$"],"sources":["C:/Users/samir/Diagram gen/diagram-sami/src/datamodeldiagram.js"],"sourcesContent":["import React, { useCallback, useState,useEffect,useRef  } from 'react';\r\nimport 'reactflow/dist/style.css';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from 'jspdf';\r\nimport Sidebar from './sidebar';\r\nimport ReactFlow, {\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  useNodesState,\r\n  useEdgesState,\r\n  addEdge,\r\n} from 'reactflow';\r\n\r\n\r\n\r\nconst RectangleNode = ({ data }) => {\r\n  return <div style={{ padding: 10, border: '1px solid black', backgroundColor: 'white' }}>{data.label}</div>;\r\n};\r\n\r\nconst CircleNode = ({ data }) => {\r\n  return <div style={{ padding: 10, borderRadius: '50%', border: '1px solid black', backgroundColor: 'white' }}>{data.label}</div>;\r\n};\r\n\r\nconst TriangleNode = ({ data }) => {\r\n  return <div style={{ width: 0, height: 0, borderLeft: '50px solid transparent', borderRight: '50px solid transparent', borderBottom: '100px solid black' }}>{data.label}</div>;\r\n};\r\n\r\n\r\nconst nodeTypes = {\r\n    rectangle: RectangleNode,\r\n    circle: CircleNode,\r\n    triangle: TriangleNode\r\n  };\r\n\r\n\r\n\r\nconst initialNodes = [\r\n  { id: '1', position: { x: 250, y: 0 }, data: { label: 'Auth System' } },\r\n  { id: '2', position: { x: 100, y: 150 }, data: { label: 'Profile Page' } },\r\n  { id: '3', position: { x: 250, y: 150 }, data: { label: 'History Page' } },\r\n  { id: '4', position: { x: 400, y: 150 }, data: { label: 'Bet Page' } },\r\n];\r\n\r\nconst initialEdges = [\r\n  { id: 'e1-2', source: '1', target: '2' },\r\n  { id: 'e1-3', source: '1', target: '3' },\r\n  { id: 'e1-4', source: '1', target: '4' },\r\n];\r\n\r\n\r\nconst defaultColors = ['#FF5733', '#33FF57', '#3357FF', '#FFFF33', '#FF33FF', '#33FFFF'];\r\n\r\nexport default function DataModelDiagram() {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [nodeName, setNodeName] = useState('');\r\n  const [showColorPicker, setShowColorPicker] = useState(false);\r\n  const [colorPickerPosition, setColorPickerPosition] = useState({ x: 0, y: 0 });\r\n  const [usedColors, setUsedColors] = useState(new Set());\r\n  const [customColor, setCustomColor] = useState('#000000');\r\n\r\n  const reactFlowWrapper = useRef(null);\r\n  let id = 0;\r\n  const getId = () => `dndnode_${id++}`;\r\n\r\n  const onDrop = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n  \r\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n      const type = event.dataTransfer.getData('application/reactflow');\r\n  \r\n      // check if the dropped element is valid\r\n      if (typeof type === 'undefined' || !type) {\r\n        return;\r\n      }\r\n  \r\n      const position = reactFlowInstance.project({\r\n        x: event.clientX - reactFlowBounds.left,\r\n        y: event.clientY - reactFlowBounds.top,\r\n      });\r\n  \r\n      const newNode = {\r\n        id: getId(),\r\n        type,\r\n        position,\r\n        data: { label: `${type} node` },\r\n      };\r\n  \r\n      setNodes((nds) => nds.concat(newNode));\r\n    },\r\n    [reactFlowInstance]\r\n  );\r\n\r\n  const exportDiagramAsPdf = async () => {\r\n    const flowContainer = document.querySelector('.react-flow__container');\r\n    if (flowContainer) {\r\n        const canvas = await html2canvas(flowContainer);\r\n        const imgData = canvas.toDataURL('image/png');\r\n        const pdf = new jsPDF({\r\n            orientation: 'landscape',\r\n            unit: 'px',\r\n            format: [canvas.width, canvas.height]\r\n        });\r\n        pdf.addImage(imgData, 'PNG', 0, 0);\r\n        pdf.save('diagram.pdf');\r\n    }\r\n};\r\n\r\nconst onDragStart = useCallback((event, nodeType) => {\r\n    event.dataTransfer.setData('application/reactflow', nodeType);\r\n    event.dataTransfer.effectAllowed = 'move';\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const colorsInUse = new Set(nodes.map(node => node.style?.backgroundColor).filter(Boolean));\r\n    setUsedColors(colorsInUse);\r\n  }, [nodes]);\r\n\r\n\r\n    const onConnect = useCallback(\r\n      (params) => setEdges((eds) => addEdge(params, eds)),\r\n      [setEdges],\r\n    );\r\n  \r\n    const onNodeClick = useCallback((event, node) => {\r\n      setSelectedNode(node);\r\n      setNodeName(node.data.label);\r\n      setShowColorPicker(true);\r\n      setColorPickerPosition({ x: event.clientX, y: event.clientY });\r\n    }, []);\r\n\r\n    const changeNodeColor = useCallback((color) => {\r\n        setNodes((nds) =>\r\n          nds.map((n) => {\r\n            if (n.id === selectedNode.id) {\r\n              return {\r\n                ...n,\r\n                style: { ...n.style, backgroundColor: color }\r\n              };\r\n            }\r\n            return n;\r\n          })\r\n        );\r\n        setShowColorPicker(false);\r\n      }, [selectedNode, setNodes]);\r\n    \r\n      const onCustomColorChange = useCallback((e) => {\r\n        setCustomColor(e.target.value);\r\n      }, []);\r\n    \r\n      const onCustomColorKeyDown = useCallback((e) => {\r\n        if (e.key === 'Enter') {\r\n          changeNodeColor(customColor);\r\n        }\r\n      }, [customColor, changeNodeColor]);\r\n    \r\n      const onCustomColorBlur = useCallback(() => {\r\n        changeNodeColor(customColor);\r\n      }, [customColor, changeNodeColor]);\r\n  \r\n    const updateNodeName = useCallback(() => {\r\n      setNodes((nds) =>\r\n        nds.map((n) => {\r\n          if (n.id === selectedNode.id) {\r\n            return {\r\n              ...n,\r\n              data: { ...n.data, label: nodeName }\r\n            };\r\n          }\r\n          return n;\r\n        })\r\n      );\r\n      setSelectedNode(null);\r\n      setNodeName('');\r\n    }, [nodeName, selectedNode, setNodes]);\r\n  \r\n    const addNewNode = useCallback(() => {\r\n      const newNodeId = `node_${nodes.length + 1}`;\r\n      const newNode = {\r\n        id: newNodeId,\r\n        data: { label: `Node ${nodes.length + 1}` },\r\n        position: { x: window.innerWidth / 2 - 100, y: window.innerHeight / 2 - 50 } // Adjust for node size\r\n      };\r\n      setNodes((nds) => nds.concat(newNode));\r\n      setSelectedNode(newNode);\r\n      setNodeName(newNode.data.label);\r\n    }, [nodes, setNodes]);\r\n  \r\n    return (\r\n        <div style={{ display: 'flex', width: '100vw', height: '100vh' }}>\r\n      <Sidebar onDragStart={onDragStart} />\r\n      <div style={{ flex: 1 }}>\r\n          {showColorPicker && (\r\n            <div style={{ position: 'absolute', left: colorPickerPosition.x, top: colorPickerPosition.y, zIndex: 5, padding: '10px', backgroundColor: '#fff', boxShadow: '0 0 10px rgba(0,0,0,0.2)' }}>\r\n             {([...usedColors].length ? [...usedColors] : defaultColors).map(color => (\r\n  <div key={color} style={{ background: color, width: '25px', height: '25px', display: 'inline-block', cursor: 'pointer', margin: '5px' }}\r\n    onClick={() => changeNodeColor(color)} />\r\n))}\r\n              <input type=\"color\" value={customColor} onChange={onCustomColorChange} onKeyDown={onCustomColorKeyDown} onBlur={onCustomColorBlur} />\r\n            </div>\r\n          )}\r\n          {/* Node Name Input */}\r\n          {selectedNode && (\r\n            <div style={{ position: 'absolute', zIndex: 4, left: 10, top: 10 }}>\r\n              <input\r\n                value={nodeName}\r\n                onChange={(e) => setNodeName(e.target.value)}\r\n                onBlur={updateNodeName}\r\n                style={{ padding: '5px' }}\r\n              />\r\n            </div>\r\n          )}\r\n          {/* Add Node Button */}\r\n          <button\r\n          onClick={exportDiagramAsPdf}\r\n          style={{ position: 'absolute', right: 20, top: 20, zIndex: 4 }}\r\n        >\r\n          Export as PDF\r\n        </button>\r\n\r\n          <button\r\n            onClick={addNewNode}\r\n            style={{ position: 'absolute', left: 20, bottom: 20, zIndex: 4, padding: '10px' }}\r\n          >\r\n            Add Node\r\n          </button>\r\n          {/* React Flow */}\r\n          <ReactFlow\r\n  nodes={nodes}\r\n  edges={edges}\r\n  onNodesChange={onNodesChange}\r\n  onEdgesChange={onEdgesChange}\r\n  onConnect={onConnect}\r\n  onInit={setReactFlowInstance}\r\n  onDrop={onDrop}\r\n  onDragOver={onDragOver}\r\n  fitView\r\n  nodeTypes={nodeTypes}\r\n>\r\n            <Controls />\r\n            <MiniMap />\r\n            <Background variant=\"dots\" gap={12} size={1} />\r\n          </ReactFlow>\r\n        </div>\r\n        </div>\r\n      );\r\n          }"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,EAACC,SAAS,EAACC,MAAM,QAAS,OAAO;AACtE,OAAO,0BAA0B;AACjC,OAAOC,WAAW,MAAM,aAAa;AACrC,SAASC,KAAK,QAAQ,OAAO;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,IACdC,OAAO,EACPC,QAAQ,EACRC,UAAU,EACVC,aAAa,EACbC,aAAa,EACbC,OAAO,QACF,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAInB,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAClC,oBAAOF,OAAA;IAAKG,KAAK,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,MAAM,EAAE,iBAAiB;MAAEC,eAAe,EAAE;IAAQ,CAAE;IAAAC,QAAA,EAAEL,IAAI,CAACM;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC7G,CAAC;AAACC,EAAA,GAFIZ,aAAa;AAInB,MAAMa,UAAU,GAAGA,CAAC;EAAEZ;AAAK,CAAC,KAAK;EAC/B,oBAAOF,OAAA;IAAKG,KAAK,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEW,YAAY,EAAE,KAAK;MAAEV,MAAM,EAAE,iBAAiB;MAAEC,eAAe,EAAE;IAAQ,CAAE;IAAAC,QAAA,EAAEL,IAAI,CAACM;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAClI,CAAC;AAACI,GAAA,GAFIF,UAAU;AAIhB,MAAMG,YAAY,GAAGA,CAAC;EAAEf;AAAK,CAAC,KAAK;EACjC,oBAAOF,OAAA;IAAKG,KAAK,EAAE;MAAEe,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;MAAEC,UAAU,EAAE,wBAAwB;MAAEC,WAAW,EAAE,wBAAwB;MAAEC,YAAY,EAAE;IAAoB,CAAE;IAAAf,QAAA,EAAEL,IAAI,CAACM;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAChL,CAAC;AAACW,GAAA,GAFIN,YAAY;AAKlB,MAAMO,SAAS,GAAG;EACdC,SAAS,EAAExB,aAAa;EACxByB,MAAM,EAAEZ,UAAU;EAClBa,QAAQ,EAAEV;AACZ,CAAC;AAIH,MAAMW,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,GAAG;EAAEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAE,CAAC;EAAE9B,IAAI,EAAE;IAAEM,KAAK,EAAE;EAAc;AAAE,CAAC,EACvE;EAAEqB,EAAE,EAAE,GAAG;EAAEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC;EAAE9B,IAAI,EAAE;IAAEM,KAAK,EAAE;EAAe;AAAE,CAAC,EAC1E;EAAEqB,EAAE,EAAE,GAAG;EAAEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC;EAAE9B,IAAI,EAAE;IAAEM,KAAK,EAAE;EAAe;AAAE,CAAC,EAC1E;EAAEqB,EAAE,EAAE,GAAG;EAAEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC;EAAE9B,IAAI,EAAE;IAAEM,KAAK,EAAE;EAAW;AAAE,CAAC,CACvE;AAED,MAAMyB,YAAY,GAAG,CACnB;EAAEJ,EAAE,EAAE,MAAM;EAAEK,MAAM,EAAE,GAAG;EAAEC,MAAM,EAAE;AAAI,CAAC,EACxC;EAAEN,EAAE,EAAE,MAAM;EAAEK,MAAM,EAAE,GAAG;EAAEC,MAAM,EAAE;AAAI,CAAC,EACxC;EAAEN,EAAE,EAAE,MAAM;EAAEK,MAAM,EAAE,GAAG;EAAEC,MAAM,EAAE;AAAI,CAAC,CACzC;AAGD,MAAMC,aAAa,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAExF,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAG7C,aAAa,CAACgC,YAAY,CAAC;EACpE,MAAM,CAACc,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAG/C,aAAa,CAACoC,YAAY,CAAC;EACpE,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAG5D,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC6D,QAAQ,EAAEC,WAAW,CAAC,GAAG9D,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC+D,eAAe,EAAEC,kBAAkB,CAAC,GAAGhE,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACiE,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGlE,QAAQ,CAAC;IAAE6C,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAC9E,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGpE,QAAQ,CAAC,IAAIqE,GAAG,CAAC,CAAC,CAAC;EACvD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGvE,QAAQ,CAAC,SAAS,CAAC;EAEzD,MAAMwE,gBAAgB,GAAGtE,MAAM,CAAC,IAAI,CAAC;EACrC,IAAIyC,EAAE,GAAG,CAAC;EACV,MAAM8B,KAAK,GAAGA,CAAA,KAAO,WAAU9B,EAAE,EAAG,EAAC;EAErC,MAAM+B,MAAM,GAAG3E,WAAW,CACvB4E,KAAK,IAAK;IACTA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,MAAMC,eAAe,GAAGL,gBAAgB,CAACM,OAAO,CAACC,qBAAqB,CAAC,CAAC;IACxE,MAAMC,IAAI,GAAGL,KAAK,CAACM,YAAY,CAACC,OAAO,CAAC,uBAAuB,CAAC;;IAEhE;IACA,IAAI,OAAOF,IAAI,KAAK,WAAW,IAAI,CAACA,IAAI,EAAE;MACxC;IACF;IAEA,MAAMpC,QAAQ,GAAGuC,iBAAiB,CAACC,OAAO,CAAC;MACzCvC,CAAC,EAAE8B,KAAK,CAACU,OAAO,GAAGR,eAAe,CAACS,IAAI;MACvCxC,CAAC,EAAE6B,KAAK,CAACY,OAAO,GAAGV,eAAe,CAACW;IACrC,CAAC,CAAC;IAEF,MAAMC,OAAO,GAAG;MACd9C,EAAE,EAAE8B,KAAK,CAAC,CAAC;MACXO,IAAI;MACJpC,QAAQ;MACR5B,IAAI,EAAE;QAAEM,KAAK,EAAG,GAAE0D,IAAK;MAAO;IAChC,CAAC;IAED1B,QAAQ,CAAEoC,GAAG,IAAKA,GAAG,CAACC,MAAM,CAACF,OAAO,CAAC,CAAC;EACxC,CAAC,EACD,CAACN,iBAAiB,CACpB,CAAC;EAED,MAAMS,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMC,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,wBAAwB,CAAC;IACtE,IAAIF,aAAa,EAAE;MACf,MAAMG,MAAM,GAAG,MAAM7F,WAAW,CAAC0F,aAAa,CAAC;MAC/C,MAAMI,OAAO,GAAGD,MAAM,CAACE,SAAS,CAAC,WAAW,CAAC;MAC7C,MAAMC,GAAG,GAAG,IAAI/F,KAAK,CAAC;QAClBgG,WAAW,EAAE,WAAW;QACxBC,IAAI,EAAE,IAAI;QACVC,MAAM,EAAE,CAACN,MAAM,CAAChE,KAAK,EAAEgE,MAAM,CAAC/D,MAAM;MACxC,CAAC,CAAC;MACFkE,GAAG,CAACI,QAAQ,CAACN,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;MAClCE,GAAG,CAACK,IAAI,CAAC,aAAa,CAAC;IAC3B;EACJ,CAAC;EAED,MAAMC,WAAW,GAAG1G,WAAW,CAAC,CAAC4E,KAAK,EAAE+B,QAAQ,KAAK;IACjD/B,KAAK,CAACM,YAAY,CAAC0B,OAAO,CAAC,uBAAuB,EAAED,QAAQ,CAAC;IAC7D/B,KAAK,CAACM,YAAY,CAAC2B,aAAa,GAAG,MAAM;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN3G,SAAS,CAAC,MAAM;IACd,MAAM4G,WAAW,GAAG,IAAIxC,GAAG,CAAChB,KAAK,CAACyD,GAAG,CAACC,IAAI;MAAA,IAAAC,WAAA;MAAA,QAAAA,WAAA,GAAID,IAAI,CAAC9F,KAAK,cAAA+F,WAAA,uBAAVA,WAAA,CAAY5F,eAAe;IAAA,EAAC,CAAC6F,MAAM,CAACC,OAAO,CAAC,CAAC;IAC3F9C,aAAa,CAACyC,WAAW,CAAC;EAC5B,CAAC,EAAE,CAACxD,KAAK,CAAC,CAAC;EAGT,MAAM8D,SAAS,GAAGpH,WAAW,CAC1BqH,MAAM,IAAK3D,QAAQ,CAAE4D,GAAG,IAAKzG,OAAO,CAACwG,MAAM,EAAEC,GAAG,CAAC,CAAC,EACnD,CAAC5D,QAAQ,CACX,CAAC;EAED,MAAM6D,WAAW,GAAGvH,WAAW,CAAC,CAAC4E,KAAK,EAAEoC,IAAI,KAAK;IAC/CnD,eAAe,CAACmD,IAAI,CAAC;IACrBjD,WAAW,CAACiD,IAAI,CAAC/F,IAAI,CAACM,KAAK,CAAC;IAC5B0C,kBAAkB,CAAC,IAAI,CAAC;IACxBE,sBAAsB,CAAC;MAAErB,CAAC,EAAE8B,KAAK,CAACU,OAAO;MAAEvC,CAAC,EAAE6B,KAAK,CAACY;IAAQ,CAAC,CAAC;EAChE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgC,eAAe,GAAGxH,WAAW,CAAEyH,KAAK,IAAK;IAC3ClE,QAAQ,CAAEoC,GAAG,IACXA,GAAG,CAACoB,GAAG,CAAEW,CAAC,IAAK;MACb,IAAIA,CAAC,CAAC9E,EAAE,KAAKgB,YAAY,CAAChB,EAAE,EAAE;QAC5B,OAAO;UACL,GAAG8E,CAAC;UACJxG,KAAK,EAAE;YAAE,GAAGwG,CAAC,CAACxG,KAAK;YAAEG,eAAe,EAAEoG;UAAM;QAC9C,CAAC;MACH;MACA,OAAOC,CAAC;IACV,CAAC,CACH,CAAC;IACDzD,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC,EAAE,CAACL,YAAY,EAAEL,QAAQ,CAAC,CAAC;EAE5B,MAAMoE,mBAAmB,GAAG3H,WAAW,CAAE4H,CAAC,IAAK;IAC7CpD,cAAc,CAACoD,CAAC,CAAC1E,MAAM,CAAC2E,KAAK,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,oBAAoB,GAAG9H,WAAW,CAAE4H,CAAC,IAAK;IAC9C,IAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,EAAE;MACrBP,eAAe,CAACjD,WAAW,CAAC;IAC9B;EACF,CAAC,EAAE,CAACA,WAAW,EAAEiD,eAAe,CAAC,CAAC;EAElC,MAAMQ,iBAAiB,GAAGhI,WAAW,CAAC,MAAM;IAC1CwH,eAAe,CAACjD,WAAW,CAAC;EAC9B,CAAC,EAAE,CAACA,WAAW,EAAEiD,eAAe,CAAC,CAAC;EAEpC,MAAMS,cAAc,GAAGjI,WAAW,CAAC,MAAM;IACvCuD,QAAQ,CAAEoC,GAAG,IACXA,GAAG,CAACoB,GAAG,CAAEW,CAAC,IAAK;MACb,IAAIA,CAAC,CAAC9E,EAAE,KAAKgB,YAAY,CAAChB,EAAE,EAAE;QAC5B,OAAO;UACL,GAAG8E,CAAC;UACJzG,IAAI,EAAE;YAAE,GAAGyG,CAAC,CAACzG,IAAI;YAAEM,KAAK,EAAEuC;UAAS;QACrC,CAAC;MACH;MACA,OAAO4D,CAAC;IACV,CAAC,CACH,CAAC;IACD7D,eAAe,CAAC,IAAI,CAAC;IACrBE,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC,EAAE,CAACD,QAAQ,EAAEF,YAAY,EAAEL,QAAQ,CAAC,CAAC;EAEtC,MAAM2E,UAAU,GAAGlI,WAAW,CAAC,MAAM;IACnC,MAAMmI,SAAS,GAAI,QAAO7E,KAAK,CAAC8E,MAAM,GAAG,CAAE,EAAC;IAC5C,MAAM1C,OAAO,GAAG;MACd9C,EAAE,EAAEuF,SAAS;MACblH,IAAI,EAAE;QAAEM,KAAK,EAAG,QAAO+B,KAAK,CAAC8E,MAAM,GAAG,CAAE;MAAE,CAAC;MAC3CvF,QAAQ,EAAE;QAAEC,CAAC,EAAEuF,MAAM,CAACC,UAAU,GAAG,CAAC,GAAG,GAAG;QAAEvF,CAAC,EAAEsF,MAAM,CAACE,WAAW,GAAG,CAAC,GAAG;MAAG,CAAC,CAAC;IAC/E,CAAC;IACDhF,QAAQ,CAAEoC,GAAG,IAAKA,GAAG,CAACC,MAAM,CAACF,OAAO,CAAC,CAAC;IACtC7B,eAAe,CAAC6B,OAAO,CAAC;IACxB3B,WAAW,CAAC2B,OAAO,CAACzE,IAAI,CAACM,KAAK,CAAC;EACjC,CAAC,EAAE,CAAC+B,KAAK,EAAEC,QAAQ,CAAC,CAAC;EAErB,oBACIxC,OAAA;IAAKG,KAAK,EAAE;MAAEsH,OAAO,EAAE,MAAM;MAAEvG,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAZ,QAAA,gBACnEP,OAAA,CAACT,OAAO;MAACoG,WAAW,EAAEA;IAAY;MAAAlF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCZ,OAAA;MAAKG,KAAK,EAAE;QAAEuH,IAAI,EAAE;MAAE,CAAE;MAAAnH,QAAA,GACnB0C,eAAe,iBACdjD,OAAA;QAAKG,KAAK,EAAE;UAAE2B,QAAQ,EAAE,UAAU;UAAE0C,IAAI,EAAErB,mBAAmB,CAACpB,CAAC;UAAE2C,GAAG,EAAEvB,mBAAmB,CAACnB,CAAC;UAAE2F,MAAM,EAAE,CAAC;UAAEvH,OAAO,EAAE,MAAM;UAAEE,eAAe,EAAE,MAAM;UAAEsH,SAAS,EAAE;QAA2B,CAAE;QAAArH,QAAA,GACxL,CAAC,CAAC,GAAG8C,UAAU,CAAC,CAACgE,MAAM,GAAG,CAAC,GAAGhE,UAAU,CAAC,GAAGjB,aAAa,EAAE4D,GAAG,CAACU,KAAK,iBAChF1G,OAAA;UAAiBG,KAAK,EAAE;YAAE0H,UAAU,EAAEnB,KAAK;YAAExF,KAAK,EAAE,MAAM;YAAEC,MAAM,EAAE,MAAM;YAAEsG,OAAO,EAAE,cAAc;YAAEK,MAAM,EAAE,SAAS;YAAEC,MAAM,EAAE;UAAM,CAAE;UACtIC,OAAO,EAAEA,CAAA,KAAMvB,eAAe,CAACC,KAAK;QAAE,GAD9BA,KAAK;UAAAjG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC2B,CAC3C,CAAC,eACYZ,OAAA;UAAOkE,IAAI,EAAC,OAAO;UAAC4C,KAAK,EAAEtD,WAAY;UAACyE,QAAQ,EAAErB,mBAAoB;UAACsB,SAAS,EAAEnB,oBAAqB;UAACoB,MAAM,EAAElB;QAAkB;UAAAxG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClI,CACN,EAEAiC,YAAY,iBACX7C,OAAA;QAAKG,KAAK,EAAE;UAAE2B,QAAQ,EAAE,UAAU;UAAE6F,MAAM,EAAE,CAAC;UAAEnD,IAAI,EAAE,EAAE;UAAEE,GAAG,EAAE;QAAG,CAAE;QAAAnE,QAAA,eACjEP,OAAA;UACE8G,KAAK,EAAE/D,QAAS;UAChBkF,QAAQ,EAAGpB,CAAC,IAAK7D,WAAW,CAAC6D,CAAC,CAAC1E,MAAM,CAAC2E,KAAK,CAAE;UAC7CqB,MAAM,EAAEjB,cAAe;UACvB/G,KAAK,EAAE;YAAEC,OAAO,EAAE;UAAM;QAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN,eAEDZ,OAAA;QACAgI,OAAO,EAAElD,kBAAmB;QAC5B3E,KAAK,EAAE;UAAE2B,QAAQ,EAAE,UAAU;UAAEsG,KAAK,EAAE,EAAE;UAAE1D,GAAG,EAAE,EAAE;UAAEiD,MAAM,EAAE;QAAE,CAAE;QAAApH,QAAA,EAChE;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAEPZ,OAAA;QACEgI,OAAO,EAAEb,UAAW;QACpBhH,KAAK,EAAE;UAAE2B,QAAQ,EAAE,UAAU;UAAE0C,IAAI,EAAE,EAAE;UAAE6D,MAAM,EAAE,EAAE;UAAEV,MAAM,EAAE,CAAC;UAAEvH,OAAO,EAAE;QAAO,CAAE;QAAAG,QAAA,EACnF;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETZ,OAAA,CAACR,SAAS;QAClB+C,KAAK,EAAEA,KAAM;QACbG,KAAK,EAAEA,KAAM;QACbD,aAAa,EAAEA,aAAc;QAC7BG,aAAa,EAAEA,aAAc;QAC7ByD,SAAS,EAAEA,SAAU;QACrBiC,MAAM,EAAEC,oBAAqB;QAC7B3E,MAAM,EAAEA,MAAO;QACf4E,UAAU,EAAEA,UAAW;QACvBC,OAAO;QACPjH,SAAS,EAAEA,SAAU;QAAAjB,QAAA,gBAEXP,OAAA,CAACN,QAAQ;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACZZ,OAAA,CAACP,OAAO;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACXZ,OAAA,CAACL,UAAU;UAAC+I,OAAO,EAAC,MAAM;UAACC,GAAG,EAAE,EAAG;UAACC,IAAI,EAAE;QAAE;UAAAnI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEJ;AAAC0B,EAAA,CApMaD,gBAAgB;EAAA,QACGzC,aAAa,EACbC,aAAa;AAAA;AAAAgJ,GAAA,GAFhCxG,gBAAgB;AAAA,IAAAxB,EAAA,EAAAG,GAAA,EAAAO,GAAA,EAAAsH,GAAA;AAAAC,YAAA,CAAAjI,EAAA;AAAAiI,YAAA,CAAA9H,GAAA;AAAA8H,YAAA,CAAAvH,GAAA;AAAAuH,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}