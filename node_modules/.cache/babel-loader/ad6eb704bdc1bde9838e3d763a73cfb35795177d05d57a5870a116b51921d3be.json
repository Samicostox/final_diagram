{"ast":null,"code":"var BiAStarFinder = require('./BiAStarFinder');\n\n/**\r\n * Bi-direcitional Best-First-Search path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\nfunction BiBestFirstFinder(opt) {\n  BiAStarFinder.call(this, opt);\n  var orig = this.heuristic;\n  this.heuristic = function (dx, dy) {\n    return orig(dx, dy) * 1000000;\n  };\n}\nBiBestFirstFinder.prototype = new BiAStarFinder();\nBiBestFirstFinder.prototype.constructor = BiBestFirstFinder;\nmodule.exports = BiBestFirstFinder;","map":{"version":3,"names":["BiAStarFinder","require","BiBestFirstFinder","opt","call","orig","heuristic","dx","dy","prototype","constructor","module","exports"],"sources":["C:/Users/samir/Diagram gen/diagram-sami/node_modules/pathfinding/src/finders/BiBestFirstFinder.js"],"sourcesContent":["var BiAStarFinder = require('./BiAStarFinder');\r\n\r\n/**\r\n * Bi-direcitional Best-First-Search path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BiBestFirstFinder(opt) {\r\n    BiAStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBiBestFirstFinder.prototype = new BiAStarFinder();\r\nBiBestFirstFinder.prototype.constructor = BiBestFirstFinder;\r\n\r\nmodule.exports = BiBestFirstFinder;\r\n"],"mappings":"AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAiB,CAAC;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,iBAAiBA,CAACC,GAAG,EAAE;EAC5BH,aAAa,CAACI,IAAI,CAAC,IAAI,EAAED,GAAG,CAAC;EAE7B,IAAIE,IAAI,GAAG,IAAI,CAACC,SAAS;EACzB,IAAI,CAACA,SAAS,GAAG,UAASC,EAAE,EAAEC,EAAE,EAAE;IAC9B,OAAOH,IAAI,CAACE,EAAE,EAAEC,EAAE,CAAC,GAAG,OAAO;EACjC,CAAC;AACL;AAEAN,iBAAiB,CAACO,SAAS,GAAG,IAAIT,aAAa,CAAC,CAAC;AACjDE,iBAAiB,CAACO,SAAS,CAACC,WAAW,GAAGR,iBAAiB;AAE3DS,MAAM,CAACC,OAAO,GAAGV,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}