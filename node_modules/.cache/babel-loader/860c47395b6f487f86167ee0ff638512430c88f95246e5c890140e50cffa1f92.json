{"ast":null,"code":"import * as React from 'react';\nimport styled from '@emotion/styled';\nvar S;\n(function (S) {\n  S.Label = styled.div`\n\t\tdisplay: inline-block;\n\t\tposition: absolute;\n\t`;\n  S.Foreign = styled.foreignObject`\n\t\tpointer-events: none;\n\t\toverflow: visible;\n\t`;\n})(S || (S = {}));\nexport class LabelWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.findPathAndRelativePositionToRenderLabel = index => {\n      // an array to hold all path lengths, making sure we hit the DOM only once to fetch this information\n      const link = this.props.label.getParent();\n      const lengths = link.getRenderedPath().map(path => path.getTotalLength());\n      // calculate the point where we want to display the label\n      let labelPosition = lengths.reduce((previousValue, currentValue) => previousValue + currentValue, 0) * (index / (link.getLabels().length + 1));\n      // find the path where the label will be rendered and calculate the relative position\n      let pathIndex = 0;\n      while (pathIndex < link.getRenderedPath().length) {\n        if (labelPosition - lengths[pathIndex] < 0) {\n          return {\n            path: link.getRenderedPath()[pathIndex],\n            position: labelPosition\n          };\n        }\n        // keep searching\n        labelPosition -= lengths[pathIndex];\n        pathIndex++;\n      }\n    };\n    this.calculateLabelPosition = () => {\n      const found = this.findPathAndRelativePositionToRenderLabel(this.props.index + 1);\n      if (!found) {\n        return;\n      }\n      const {\n        path,\n        position\n      } = found;\n      const labelDimensions = {\n        width: this.ref.current.offsetWidth,\n        height: this.ref.current.offsetHeight\n      };\n      const pathCentre = path.getPointAtLength(position);\n      const labelCoordinates = {\n        x: pathCentre.x - labelDimensions.width / 2 + this.props.label.getOptions().offsetX,\n        y: pathCentre.y - labelDimensions.height / 2 + this.props.label.getOptions().offsetY\n      };\n      this.ref.current.style.transform = `translate(${labelCoordinates.x}px, ${labelCoordinates.y}px)`;\n    };\n    this.ref = React.createRef();\n  }\n  componentDidUpdate() {\n    window.requestAnimationFrame(this.calculateLabelPosition);\n  }\n  componentDidMount() {\n    window.requestAnimationFrame(this.calculateLabelPosition);\n  }\n  render() {\n    const canvas = this.props.engine.getCanvas();\n    return React.createElement(S.Foreign, {\n      key: this.props.label.getID(),\n      width: canvas === null || canvas === void 0 ? void 0 : canvas.offsetWidth,\n      height: canvas === null || canvas === void 0 ? void 0 : canvas.offsetHeight\n    }, React.createElement(S.Label, {\n      ref: this.ref\n    }, this.props.engine.getFactoryForLabel(this.props.label).generateReactWidget({\n      model: this.props.label\n    })));\n  }\n}","map":{"version":3,"names":["React","styled","S","Label","div","Foreign","foreignObject","LabelWidget","Component","constructor","props","findPathAndRelativePositionToRenderLabel","index","link","label","getParent","lengths","getRenderedPath","map","path","getTotalLength","labelPosition","reduce","previousValue","currentValue","getLabels","length","pathIndex","position","calculateLabelPosition","found","labelDimensions","width","ref","current","offsetWidth","height","offsetHeight","pathCentre","getPointAtLength","labelCoordinates","x","getOptions","offsetX","y","offsetY","style","transform","createRef","componentDidUpdate","window","requestAnimationFrame","componentDidMount","render","canvas","engine","getCanvas","createElement","key","getID","getFactoryForLabel","generateReactWidget","model"],"sources":["C:\\Users\\samir\\Diagram gen\\diagram-sami\\node_modules\\@projectstorm\\react-diagrams-core\\src\\entities\\label\\LabelWidget.tsx"],"sourcesContent":["import * as React from 'react';\nimport { DiagramEngine } from '../../DiagramEngine';\nimport { LabelModel } from './LabelModel';\nimport styled from '@emotion/styled';\n\nexport interface LabelWidgetProps {\n\tengine: DiagramEngine;\n\tlabel: LabelModel;\n\tindex: number;\n}\n\nnamespace S {\n\texport const Label = styled.div`\n\t\tdisplay: inline-block;\n\t\tposition: absolute;\n\t`;\n\n\texport const Foreign = styled.foreignObject`\n\t\tpointer-events: none;\n\t\toverflow: visible;\n\t`;\n}\n\nexport class LabelWidget extends React.Component<LabelWidgetProps> {\n\tref: React.RefObject<HTMLDivElement>;\n\n\tconstructor(props: LabelWidgetProps) {\n\t\tsuper(props);\n\t\tthis.ref = React.createRef();\n\t}\n\n\tcomponentDidUpdate() {\n\t\twindow.requestAnimationFrame(this.calculateLabelPosition);\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.requestAnimationFrame(this.calculateLabelPosition);\n\t}\n\n\tfindPathAndRelativePositionToRenderLabel = (index: number): { path: SVGPathElement; position: number } => {\n\t\t// an array to hold all path lengths, making sure we hit the DOM only once to fetch this information\n\t\tconst link = this.props.label.getParent();\n\t\tconst lengths = link.getRenderedPath().map((path) => path.getTotalLength());\n\n\t\t// calculate the point where we want to display the label\n\t\tlet labelPosition =\n\t\t\tlengths.reduce((previousValue, currentValue) => previousValue + currentValue, 0) *\n\t\t\t(index / (link.getLabels().length + 1));\n\n\t\t// find the path where the label will be rendered and calculate the relative position\n\t\tlet pathIndex = 0;\n\t\twhile (pathIndex < link.getRenderedPath().length) {\n\t\t\tif (labelPosition - lengths[pathIndex] < 0) {\n\t\t\t\treturn {\n\t\t\t\t\tpath: link.getRenderedPath()[pathIndex],\n\t\t\t\t\tposition: labelPosition\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// keep searching\n\t\t\tlabelPosition -= lengths[pathIndex];\n\t\t\tpathIndex++;\n\t\t}\n\t};\n\n\tcalculateLabelPosition = () => {\n\t\tconst found = this.findPathAndRelativePositionToRenderLabel(this.props.index + 1);\n\t\tif (!found) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { path, position } = found;\n\n\t\tconst labelDimensions = {\n\t\t\twidth: this.ref.current.offsetWidth,\n\t\t\theight: this.ref.current.offsetHeight\n\t\t};\n\n\t\tconst pathCentre = path.getPointAtLength(position);\n\n\t\tconst labelCoordinates = {\n\t\t\tx: pathCentre.x - labelDimensions.width / 2 + this.props.label.getOptions().offsetX,\n\t\t\ty: pathCentre.y - labelDimensions.height / 2 + this.props.label.getOptions().offsetY\n\t\t};\n\n\t\tthis.ref.current.style.transform = `translate(${labelCoordinates.x}px, ${labelCoordinates.y}px)`;\n\t};\n\n\trender() {\n\t\tconst canvas = this.props.engine.getCanvas();\n\n\t\treturn (\n\t\t\t<S.Foreign key={this.props.label.getID()} width={canvas?.offsetWidth} height={canvas?.offsetHeight}>\n\t\t\t\t<S.Label ref={this.ref}>\n\t\t\t\t\t{this.props.engine.getFactoryForLabel(this.props.label).generateReactWidget({ model: this.props.label })}\n\t\t\t\t</S.Label>\n\t\t\t</S.Foreign>\n\t\t);\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}