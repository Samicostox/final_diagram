{"ast":null,"code":"import * as _ from 'lodash';\nimport { BaseEntity } from '../../core-models/BaseEntity';\nexport class CanvasModel extends BaseEntity {\n  constructor(options = {}) {\n    super(Object.assign({\n      zoom: 100,\n      gridSize: 0,\n      offsetX: 0,\n      offsetY: 0\n    }, options));\n    this.layers = [];\n  }\n  getSelectionEntities() {\n    return _.flatMap(this.layers, layer => {\n      return layer.getSelectionEntities();\n    });\n  }\n  getSelectedEntities() {\n    return _.filter(this.getSelectionEntities(), ob => {\n      return ob.isSelected();\n    });\n  }\n  clearSelection() {\n    _.forEach(this.getSelectedEntities(), element => {\n      element.setSelected(false);\n    });\n  }\n  getModels() {\n    return _.flatMap(this.layers, layer => {\n      return _.values(layer.getModels());\n    });\n  }\n  addLayer(layer) {\n    layer.setParent(this);\n    layer.registerListener({\n      entityRemoved: event => {}\n    });\n    this.layers.push(layer);\n  }\n  removeLayer(layer) {\n    const index = this.layers.indexOf(layer);\n    if (index !== -1) {\n      this.layers.splice(index, 1);\n      return true;\n    }\n    return false;\n  }\n  getLayers() {\n    return this.layers;\n  }\n  setGridSize(size = 0) {\n    this.options.gridSize = size;\n    this.fireEvent({\n      size: size\n    }, 'gridUpdated');\n  }\n  getGridPosition(pos) {\n    if (this.options.gridSize === 0) {\n      return pos;\n    }\n    return this.options.gridSize * Math.floor((pos + this.options.gridSize / 2) / this.options.gridSize);\n  }\n  deserializeModel(data, engine) {\n    const models = {};\n    const promises = {};\n    const resolvers = {};\n    const event = {\n      data: data,\n      engine: engine,\n      registerModel: model => {\n        models[model.getID()] = model;\n        if (resolvers[model.getID()]) {\n          resolvers[model.getID()](model);\n        }\n      },\n      getModel(id) {\n        if (models[id]) {\n          return Promise.resolve(models[id]);\n        }\n        if (!promises[id]) {\n          promises[id] = new Promise(resolve => {\n            resolvers[id] = resolve;\n          });\n        }\n        return promises[id];\n      }\n    };\n    this.deserialize(event);\n  }\n  deserialize(event) {\n    super.deserialize(event);\n    this.options.offsetX = event.data.offsetX;\n    this.options.offsetY = event.data.offsetY;\n    this.options.zoom = event.data.zoom;\n    this.options.gridSize = event.data.gridSize;\n    _.forEach(event.data.layers, layer => {\n      const layerOb = event.engine.getFactoryForLayer(layer.type).generateModel({\n        initialConfig: layer\n      });\n      layerOb.deserialize(Object.assign(Object.assign({}, event), {\n        data: layer\n      }));\n      this.addLayer(layerOb);\n    });\n  }\n  serialize() {\n    return Object.assign(Object.assign({}, super.serialize()), {\n      offsetX: this.options.offsetX,\n      offsetY: this.options.offsetY,\n      zoom: this.options.zoom,\n      gridSize: this.options.gridSize,\n      layers: _.map(this.layers, layer => {\n        return layer.serialize();\n      })\n    });\n  }\n  setZoomLevel(zoom) {\n    this.options.zoom = zoom;\n    this.fireEvent({\n      zoom\n    }, 'zoomUpdated');\n  }\n  setOffset(offsetX, offsetY) {\n    this.options.offsetX = offsetX;\n    this.options.offsetY = offsetY;\n    this.fireEvent({\n      offsetX,\n      offsetY\n    }, 'offsetUpdated');\n  }\n  setOffsetX(offsetX) {\n    this.setOffset(offsetX, this.options.offsetY);\n  }\n  setOffsetY(offsetY) {\n    this.setOffset(this.options.offsetX, offsetY);\n  }\n  getOffsetY() {\n    return this.options.offsetY;\n  }\n  getOffsetX() {\n    return this.options.offsetX;\n  }\n  getZoomLevel() {\n    return this.options.zoom;\n  }\n}","map":{"version":3,"names":["_","BaseEntity","CanvasModel","constructor","options","Object","assign","zoom","gridSize","offsetX","offsetY","layers","getSelectionEntities","flatMap","layer","getSelectedEntities","filter","ob","isSelected","clearSelection","forEach","element","setSelected","getModels","values","addLayer","setParent","registerListener","entityRemoved","event","push","removeLayer","index","indexOf","splice","getLayers","setGridSize","size","fireEvent","getGridPosition","pos","Math","floor","deserializeModel","data","engine","models","promises","resolvers","registerModel","model","getID","getModel","id","Promise","resolve","deserialize","layerOb","getFactoryForLayer","type","generateModel","initialConfig","serialize","map","setZoomLevel","setOffset","setOffsetX","setOffsetY","getOffsetY","getOffsetX","getZoomLevel"],"sources":["C:\\Users\\samir\\Diagram gen\\diagram-sami\\node_modules\\@projectstorm\\react-canvas-core\\src\\entities\\canvas\\CanvasModel.ts"],"sourcesContent":["import * as _ from 'lodash';\nimport {\n\tBaseEntity,\n\tBaseEntityEvent,\n\tBaseEntityGenerics,\n\tBaseEntityListener,\n\tBaseEntityOptions,\n\tDeserializeEvent\n} from '../../core-models/BaseEntity';\nimport { LayerModel } from '../layer/LayerModel';\nimport { BaseModel } from '../../core-models/BaseModel';\nimport { CanvasEngine } from '../../CanvasEngine';\n\nexport interface CanvasModelListener extends BaseEntityListener {\n\toffsetUpdated?(event: BaseEntityEvent<CanvasModel> & { offsetX: number; offsetY: number }): void;\n\n\tzoomUpdated?(event: BaseEntityEvent<CanvasModel> & { zoom: number }): void;\n\n\tgridUpdated?(event: BaseEntityEvent<CanvasModel> & { size: number }): void;\n}\n\nexport interface CanvasModelOptions extends BaseEntityOptions {\n\toffsetX?: number;\n\toffsetY?: number;\n\tzoom?: number;\n\tgridSize?: number;\n}\n\nexport interface CanvasModelGenerics extends BaseEntityGenerics {\n\tLISTENER: CanvasModelListener;\n\tOPTIONS: CanvasModelOptions;\n\tLAYER: LayerModel;\n}\n\nexport class CanvasModel<G extends CanvasModelGenerics = CanvasModelGenerics> extends BaseEntity<G> {\n\tprotected layers: G['LAYER'][];\n\n\tconstructor(options: G['OPTIONS'] = {}) {\n\t\tsuper({\n\t\t\tzoom: 100,\n\t\t\tgridSize: 0,\n\t\t\toffsetX: 0,\n\t\t\toffsetY: 0,\n\t\t\t...options\n\t\t});\n\t\tthis.layers = [];\n\t}\n\n\tgetSelectionEntities(): BaseModel[] {\n\t\treturn _.flatMap(this.layers, (layer) => {\n\t\t\treturn layer.getSelectionEntities();\n\t\t});\n\t}\n\n\tgetSelectedEntities(): BaseModel[] {\n\t\treturn _.filter(this.getSelectionEntities(), (ob) => {\n\t\t\treturn ob.isSelected();\n\t\t});\n\t}\n\n\tclearSelection() {\n\t\t_.forEach(this.getSelectedEntities(), (element) => {\n\t\t\telement.setSelected(false);\n\t\t});\n\t}\n\n\tgetModels(): BaseModel[] {\n\t\treturn _.flatMap(this.layers, (layer) => {\n\t\t\treturn _.values(layer.getModels());\n\t\t});\n\t}\n\n\taddLayer(layer: LayerModel) {\n\t\tlayer.setParent(this);\n\t\tlayer.registerListener({\n\t\t\tentityRemoved: (event: BaseEntityEvent<BaseModel>): void => {}\n\t\t});\n\t\tthis.layers.push(layer);\n\t}\n\n\tremoveLayer(layer: LayerModel) {\n\t\tconst index = this.layers.indexOf(layer);\n\t\tif (index !== -1) {\n\t\t\tthis.layers.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetLayers() {\n\t\treturn this.layers;\n\t}\n\n\tsetGridSize(size: number = 0) {\n\t\tthis.options.gridSize = size;\n\t\tthis.fireEvent({ size: size }, 'gridUpdated');\n\t}\n\n\tgetGridPosition(pos: number) {\n\t\tif (this.options.gridSize === 0) {\n\t\t\treturn pos;\n\t\t}\n\t\treturn this.options.gridSize * Math.floor((pos + this.options.gridSize / 2) / this.options.gridSize);\n\t}\n\n\tdeserializeModel(data: ReturnType<this['serialize']>, engine: CanvasEngine) {\n\t\tconst models: {\n\t\t\t[id: string]: BaseModel;\n\t\t} = {};\n\t\tconst promises: {\n\t\t\t[id: string]: Promise<BaseModel>;\n\t\t} = {};\n\t\tconst resolvers: {\n\t\t\t[id: string]: (model: BaseModel) => any;\n\t\t} = {};\n\n\t\tconst event: DeserializeEvent = {\n\t\t\tdata: data,\n\t\t\tengine: engine,\n\t\t\tregisterModel: (model: BaseModel) => {\n\t\t\t\tmodels[model.getID()] = model;\n\t\t\t\tif (resolvers[model.getID()]) {\n\t\t\t\t\tresolvers[model.getID()](model);\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetModel<T extends BaseModel>(id: string): Promise<T> {\n\t\t\t\tif (models[id]) {\n\t\t\t\t\treturn Promise.resolve(models[id]) as Promise<T>;\n\t\t\t\t}\n\t\t\t\tif (!promises[id]) {\n\t\t\t\t\tpromises[id] = new Promise((resolve) => {\n\t\t\t\t\t\tresolvers[id] = resolve;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn promises[id] as Promise<T>;\n\t\t\t}\n\t\t};\n\t\tthis.deserialize(event);\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.offsetX = event.data.offsetX;\n\t\tthis.options.offsetY = event.data.offsetY;\n\t\tthis.options.zoom = event.data.zoom;\n\t\tthis.options.gridSize = event.data.gridSize;\n\t\t_.forEach(event.data.layers, (layer) => {\n\t\t\tconst layerOb = event.engine.getFactoryForLayer(layer.type).generateModel({\n\t\t\t\tinitialConfig: layer\n\t\t\t});\n\t\t\tlayerOb.deserialize({\n\t\t\t\t...event,\n\t\t\t\tdata: layer\n\t\t\t});\n\t\t\tthis.addLayer(layerOb);\n\t\t});\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\toffsetX: this.options.offsetX,\n\t\t\toffsetY: this.options.offsetY,\n\t\t\tzoom: this.options.zoom,\n\t\t\tgridSize: this.options.gridSize,\n\t\t\tlayers: _.map(this.layers, (layer) => {\n\t\t\t\treturn layer.serialize();\n\t\t\t})\n\t\t};\n\t}\n\n\tsetZoomLevel(zoom: number) {\n\t\tthis.options.zoom = zoom;\n\t\tthis.fireEvent({ zoom }, 'zoomUpdated');\n\t}\n\n\tsetOffset(offsetX: number, offsetY: number) {\n\t\tthis.options.offsetX = offsetX;\n\t\tthis.options.offsetY = offsetY;\n\t\tthis.fireEvent({ offsetX, offsetY }, 'offsetUpdated');\n\t}\n\n\tsetOffsetX(offsetX: number) {\n\t\tthis.setOffset(offsetX, this.options.offsetY);\n\t}\n\n\tsetOffsetY(offsetY: number) {\n\t\tthis.setOffset(this.options.offsetX, offsetY);\n\t}\n\n\tgetOffsetY() {\n\t\treturn this.options.offsetY;\n\t}\n\n\tgetOffsetX() {\n\t\treturn this.options.offsetX;\n\t}\n\n\tgetZoomLevel() {\n\t\treturn this.options.zoom;\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}