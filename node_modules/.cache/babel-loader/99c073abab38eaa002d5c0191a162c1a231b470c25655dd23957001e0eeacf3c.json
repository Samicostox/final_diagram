{"ast":null,"code":"export class Matrix {\n  constructor(matrix) {\n    this.matrix = matrix;\n  }\n  mmul(matrix) {\n    this.matrix = this.matrix.map((row, i) => matrix.asArray()[0].map((_, j) => row.reduce((acc, _, n) => acc + this.matrix[i][n] * matrix.asArray()[n][j], 0)));\n    return this;\n  }\n  asArray() {\n    return this.matrix;\n  }\n  get(rowIndex, columnIndex) {\n    return this.asArray()[rowIndex][columnIndex];\n  }\n  static multiply(...matrices) {\n    let m = matrices[0];\n    for (let i = 1; i < matrices.length; i++) {\n      m = m.mmul(matrices[i]);\n    }\n    return m;\n  }\n  static scaleMatrix(x, y) {\n    return new Matrix([[x, 0, 0], [0, y, 0], [0, 0, 1]]);\n  }\n  static translateMatrix(x, y) {\n    return new Matrix([[1, 0, x], [0, 1, y], [0, 0, 1]]);\n  }\n  static rotateMatrix(deg) {\n    return new Matrix([[Math.cos(deg), -1 * Math.sin(deg), 0], [Math.sin(deg), Math.cos(deg), 0], [0, 0, 1]]);\n  }\n  static createScaleMatrix(x, y, origin) {\n    return this.multiply(Matrix.translateMatrix(origin.x, origin.y), Matrix.scaleMatrix(x, y), Matrix.translateMatrix(-origin.x, -origin.y));\n  }\n  static createRotateMatrix(deg, origin) {\n    return this.multiply(Matrix.translateMatrix(origin.x, origin.y), Matrix.rotateMatrix(deg), Matrix.translateMatrix(-origin.x, -origin.y));\n  }\n}","map":{"version":3,"names":["Matrix","constructor","matrix","mmul","map","row","i","asArray","_","j","reduce","acc","n","get","rowIndex","columnIndex","multiply","matrices","m","length","scaleMatrix","x","y","translateMatrix","rotateMatrix","deg","Math","cos","sin","createScaleMatrix","origin","createRotateMatrix"],"sources":["C:\\Users\\samir\\Diagram gen\\diagram-sami\\node_modules\\@projectstorm\\geometry\\src\\Matrix.ts"],"sourcesContent":["import { Point } from './Point';\n\nexport class Matrix {\n\tmatrix: number[][];\n\n\tconstructor(matrix: number[][]) {\n\t\tthis.matrix = matrix;\n\t}\n\n\tmmul(matrix: Matrix): Matrix {\n\t\tthis.matrix = this.matrix.map((row, i) =>\n\t\t\tmatrix.asArray()[0].map((_, j) => row.reduce((acc, _, n) => acc + this.matrix[i][n] * matrix.asArray()[n][j], 0))\n\t\t);\n\t\treturn this;\n\t}\n\n\tasArray(): number[][] {\n\t\treturn this.matrix;\n\t}\n\n\tget(rowIndex: number, columnIndex: number): number {\n\t\treturn this.asArray()[rowIndex][columnIndex];\n\t}\n\n\tpublic static multiply(...matrices: Matrix[]): Matrix {\n\t\tlet m: Matrix = matrices[0];\n\t\tfor (let i = 1; i < matrices.length; i++) {\n\t\t\tm = m.mmul(matrices[i]);\n\t\t}\n\t\treturn m;\n\t}\n\n\tpublic static scaleMatrix(x: number, y: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[x, 0, 0],\n\t\t\t[0, y, 0],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tpublic static translateMatrix(x: number, y: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[1, 0, x],\n\t\t\t[0, 1, y],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tpublic static rotateMatrix(deg: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[Math.cos(deg), -1 * Math.sin(deg), 0],\n\t\t\t[Math.sin(deg), Math.cos(deg), 0],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tstatic createScaleMatrix(x, y, origin: Point): Matrix {\n\t\treturn this.multiply(\n\t\t\tMatrix.translateMatrix(origin.x, origin.y),\n\t\t\tMatrix.scaleMatrix(x, y),\n\t\t\tMatrix.translateMatrix(-origin.x, -origin.y)\n\t\t);\n\t}\n\n\tstatic createRotateMatrix(deg: number, origin: Point): Matrix {\n\t\treturn this.multiply(\n\t\t\tMatrix.translateMatrix(origin.x, origin.y),\n\t\t\tMatrix.rotateMatrix(deg),\n\t\t\tMatrix.translateMatrix(-origin.x, -origin.y)\n\t\t);\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}