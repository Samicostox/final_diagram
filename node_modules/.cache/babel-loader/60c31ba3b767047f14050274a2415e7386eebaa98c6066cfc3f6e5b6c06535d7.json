{"ast":null,"code":"import * as React from 'react';\nimport { LinkWidget } from '@projectstorm/react-diagrams-core';\nimport { DefaultLinkPointWidget } from './DefaultLinkPointWidget';\nimport { DefaultLinkSegmentWidget } from './DefaultLinkSegmentWidget';\nexport class DefaultLinkWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.refPaths = [];\n    this.state = {\n      selected: false\n    };\n  }\n  renderPoints() {\n    var _a;\n    return (_a = this.props.renderPoints) !== null && _a !== void 0 ? _a : true;\n  }\n  componentDidUpdate() {\n    this.props.link.setRenderedPaths(this.refPaths.map(ref => {\n      return ref.current;\n    }));\n  }\n  componentDidMount() {\n    this.props.link.setRenderedPaths(this.refPaths.map(ref => {\n      return ref.current;\n    }));\n  }\n  componentWillUnmount() {\n    this.props.link.setRenderedPaths([]);\n  }\n  addPointToLink(event, index) {\n    if (!event.shiftKey && !this.props.link.isLocked() && this.props.link.getPoints().length - 1 <= this.props.diagramEngine.getMaxNumberPointsPerLink()) {\n      const position = this.props.diagramEngine.getRelativeMousePoint(event);\n      const point = this.props.link.point(position.x, position.y, index);\n      event.persist();\n      event.stopPropagation();\n      this.forceUpdate(() => {\n        this.props.diagramEngine.getActionEventBus().fireAction({\n          event,\n          model: point\n        });\n      });\n    }\n  }\n  generatePoint(point) {\n    return React.createElement(DefaultLinkPointWidget, {\n      key: point.getID(),\n      point: point,\n      colorSelected: this.props.link.getOptions().selectedColor,\n      color: this.props.link.getOptions().color\n    });\n  }\n  generateLink(path, extraProps, id) {\n    const ref = React.createRef();\n    this.refPaths.push(ref);\n    return React.createElement(DefaultLinkSegmentWidget, {\n      key: `link-${id}`,\n      path: path,\n      selected: this.state.selected,\n      diagramEngine: this.props.diagramEngine,\n      factory: this.props.diagramEngine.getFactoryForLink(this.props.link),\n      link: this.props.link,\n      forwardRef: ref,\n      onSelection: selected => {\n        this.setState({\n          selected: selected\n        });\n      },\n      extras: extraProps\n    });\n  }\n  render() {\n    //ensure id is present for all points on the path\n    var points = this.props.link.getPoints();\n    var paths = [];\n    this.refPaths = [];\n    if (points.length === 2) {\n      paths.push(this.generateLink(this.props.link.getSVGPath(), {\n        onMouseDown: event => {\n          var _a, _b;\n          (_b = (_a = this.props).selected) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n          this.addPointToLink(event, 1);\n        }\n      }, '0'));\n      // draw the link as dangeling\n      if (this.props.link.getTargetPort() == null) {\n        paths.push(this.generatePoint(points[1]));\n      }\n    } else {\n      //draw the multiple anchors and complex line instead\n      for (let j = 0; j < points.length - 1; j++) {\n        paths.push(this.generateLink(LinkWidget.generateLinePath(points[j], points[j + 1]), {\n          'data-linkid': this.props.link.getID(),\n          'data-point': j,\n          onMouseDown: event => {\n            var _a, _b;\n            (_b = (_a = this.props).selected) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n            this.addPointToLink(event, j + 1);\n          }\n        }, j));\n      }\n      if (this.renderPoints()) {\n        //render the circles\n        for (let i = 1; i < points.length - 1; i++) {\n          paths.push(this.generatePoint(points[i]));\n        }\n        if (this.props.link.getTargetPort() == null) {\n          paths.push(this.generatePoint(points[points.length - 1]));\n        }\n      }\n    }\n    return React.createElement(\"g\", {\n      \"data-default-link-test\": this.props.link.getOptions().testName\n    }, paths);\n  }\n}","map":{"version":3,"names":["React","LinkWidget","DefaultLinkPointWidget","DefaultLinkSegmentWidget","DefaultLinkWidget","Component","constructor","props","refPaths","state","selected","renderPoints","_a","componentDidUpdate","link","setRenderedPaths","map","ref","current","componentDidMount","componentWillUnmount","addPointToLink","event","index","shiftKey","isLocked","getPoints","length","diagramEngine","getMaxNumberPointsPerLink","position","getRelativeMousePoint","point","x","y","persist","stopPropagation","forceUpdate","getActionEventBus","fireAction","model","generatePoint","createElement","key","getID","colorSelected","getOptions","selectedColor","color","generateLink","path","extraProps","id","createRef","push","factory","getFactoryForLink","forwardRef","onSelection","setState","extras","render","points","paths","getSVGPath","onMouseDown","_b","call","getTargetPort","j","generateLinePath","i","testName"],"sources":["C:\\Users\\samir\\Diagram gen\\diagram-sami\\node_modules\\@projectstorm\\react-diagrams-defaults\\src\\link\\DefaultLinkWidget.tsx"],"sourcesContent":["import * as React from 'react';\nimport { DiagramEngine, LinkWidget, PointModel } from '@projectstorm/react-diagrams-core';\nimport { DefaultLinkModel } from './DefaultLinkModel';\nimport { DefaultLinkPointWidget } from './DefaultLinkPointWidget';\nimport { DefaultLinkSegmentWidget } from './DefaultLinkSegmentWidget';\nimport { MouseEvent } from 'react';\n\nexport interface DefaultLinkProps {\n\tlink: DefaultLinkModel;\n\tdiagramEngine: DiagramEngine;\n\tpointAdded?: (point: PointModel, event: MouseEvent) => any;\n\trenderPoints?: boolean;\n\tselected?: (event: MouseEvent) => any;\n}\n\nexport interface DefaultLinkState {\n\tselected: boolean;\n}\n\nexport class DefaultLinkWidget extends React.Component<DefaultLinkProps, DefaultLinkState> {\n\trefPaths: React.RefObject<SVGPathElement>[];\n\n\tconstructor(props: DefaultLinkProps) {\n\t\tsuper(props);\n\t\tthis.refPaths = [];\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\t}\n\n\trenderPoints() {\n\t\treturn this.props.renderPoints ?? true;\n\t}\n\n\tcomponentDidUpdate(): void {\n\t\tthis.props.link.setRenderedPaths(\n\t\t\tthis.refPaths.map((ref) => {\n\t\t\t\treturn ref.current;\n\t\t\t})\n\t\t);\n\t}\n\n\tcomponentDidMount(): void {\n\t\tthis.props.link.setRenderedPaths(\n\t\t\tthis.refPaths.map((ref) => {\n\t\t\t\treturn ref.current;\n\t\t\t})\n\t\t);\n\t}\n\n\tcomponentWillUnmount(): void {\n\t\tthis.props.link.setRenderedPaths([]);\n\t}\n\n\taddPointToLink(event: MouseEvent, index: number) {\n\t\tif (\n\t\t\t!event.shiftKey &&\n\t\t\t!this.props.link.isLocked() &&\n\t\t\tthis.props.link.getPoints().length - 1 <= this.props.diagramEngine.getMaxNumberPointsPerLink()\n\t\t) {\n\t\t\tconst position = this.props.diagramEngine.getRelativeMousePoint(event);\n\t\t\tconst point = this.props.link.point(position.x, position.y, index);\n\t\t\tevent.persist();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.forceUpdate(() => {\n\t\t\t\tthis.props.diagramEngine.getActionEventBus().fireAction({\n\t\t\t\t\tevent,\n\t\t\t\t\tmodel: point\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tgeneratePoint(point: PointModel): JSX.Element {\n\t\treturn (\n\t\t\t<DefaultLinkPointWidget\n\t\t\t\tkey={point.getID()}\n\t\t\t\tpoint={point as any}\n\t\t\t\tcolorSelected={this.props.link.getOptions().selectedColor}\n\t\t\t\tcolor={this.props.link.getOptions().color}\n\t\t\t/>\n\t\t);\n\t}\n\n\tgenerateLink(path: string, extraProps: any, id: string | number): JSX.Element {\n\t\tconst ref = React.createRef<SVGPathElement>();\n\t\tthis.refPaths.push(ref);\n\t\treturn (\n\t\t\t<DefaultLinkSegmentWidget\n\t\t\t\tkey={`link-${id}`}\n\t\t\t\tpath={path}\n\t\t\t\tselected={this.state.selected}\n\t\t\t\tdiagramEngine={this.props.diagramEngine}\n\t\t\t\tfactory={this.props.diagramEngine.getFactoryForLink(this.props.link)}\n\t\t\t\tlink={this.props.link}\n\t\t\t\tforwardRef={ref}\n\t\t\t\tonSelection={(selected) => {\n\t\t\t\t\tthis.setState({ selected: selected });\n\t\t\t\t}}\n\t\t\t\textras={extraProps}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\t//ensure id is present for all points on the path\n\t\tvar points = this.props.link.getPoints();\n\t\tvar paths = [];\n\t\tthis.refPaths = [];\n\n\t\tif (points.length === 2) {\n\t\t\tpaths.push(\n\t\t\t\tthis.generateLink(\n\t\t\t\t\tthis.props.link.getSVGPath(),\n\t\t\t\t\t{\n\t\t\t\t\t\tonMouseDown: (event) => {\n\t\t\t\t\t\t\tthis.props.selected?.(event);\n\t\t\t\t\t\t\tthis.addPointToLink(event, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'0'\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// draw the link as dangeling\n\t\t\tif (this.props.link.getTargetPort() == null) {\n\t\t\t\tpaths.push(this.generatePoint(points[1]));\n\t\t\t}\n\t\t} else {\n\t\t\t//draw the multiple anchors and complex line instead\n\t\t\tfor (let j = 0; j < points.length - 1; j++) {\n\t\t\t\tpaths.push(\n\t\t\t\t\tthis.generateLink(\n\t\t\t\t\t\tLinkWidget.generateLinePath(points[j], points[j + 1]),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'data-linkid': this.props.link.getID(),\n\t\t\t\t\t\t\t'data-point': j,\n\t\t\t\t\t\t\tonMouseDown: (event: MouseEvent) => {\n\t\t\t\t\t\t\t\tthis.props.selected?.(event);\n\t\t\t\t\t\t\t\tthis.addPointToLink(event, j + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tj\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (this.renderPoints()) {\n\t\t\t\t//render the circles\n\t\t\t\tfor (let i = 1; i < points.length - 1; i++) {\n\t\t\t\t\tpaths.push(this.generatePoint(points[i]));\n\t\t\t\t}\n\n\t\t\t\tif (this.props.link.getTargetPort() == null) {\n\t\t\t\t\tpaths.push(this.generatePoint(points[points.length - 1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn <g data-default-link-test={this.props.link.getOptions().testName}>{paths}</g>;\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}