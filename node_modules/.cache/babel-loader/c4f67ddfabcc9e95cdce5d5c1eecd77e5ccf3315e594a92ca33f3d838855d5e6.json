{"ast":null,"code":"import { PointModel } from './PointModel';\nimport * as _ from 'lodash';\nimport { boundingBoxFromPoints, Point, Rectangle } from '@projectstorm/geometry';\nimport { BaseModel } from '@projectstorm/react-canvas-core';\nexport class LinkModel extends BaseModel {\n  constructor(options) {\n    super(options);\n    this.points = [new PointModel({\n      link: this\n    }), new PointModel({\n      link: this\n    })];\n    this.sourcePort = null;\n    this.targetPort = null;\n    this.renderedPaths = [];\n    this.labels = [];\n  }\n  getBoundingBox() {\n    return new Rectangle(boundingBoxFromPoints(_.map(this.points, point => {\n      return point.getPosition();\n    })));\n  }\n  getSelectionEntities() {\n    if (this.getTargetPort() && this.getSourcePort()) {\n      return super.getSelectionEntities().concat(_.slice(this.points, 1, this.points.length - 1));\n    }\n    // allow selection of the first point\n    if (!this.getSourcePort()) {\n      return super.getSelectionEntities().concat(_.slice(this.points, 0, this.points.length - 1));\n    }\n    // allow selection of the last point\n    if (!this.getTargetPort()) {\n      return super.getSelectionEntities().concat(_.slice(this.points, 1, this.points.length));\n    }\n    return super.getSelectionEntities().concat(this.points);\n  }\n  deserialize(event) {\n    super.deserialize(event);\n    this.points = _.map(event.data.points || [], point => {\n      var p = new PointModel({\n        link: this,\n        position: new Point(point.x, point.y)\n      });\n      p.deserialize(Object.assign(Object.assign({}, event), {\n        data: point\n      }));\n      return p;\n    });\n    //deserialize labels\n    _.forEach(event.data.labels || [], label => {\n      let labelOb = event.engine.getFactoryForLabel(label.type).generateModel({});\n      labelOb.deserialize(Object.assign(Object.assign({}, event), {\n        data: label\n      }));\n      this.addLabel(labelOb);\n    });\n    // these happen async, so we use the promises for these (they need to be done like this without the async keyword\n    // because we need the deserailize method to finish for other methods while this happen\n    if (event.data.target) {\n      event.getModel(event.data.targetPort).then(model => {\n        this.setTargetPort(model);\n      });\n    }\n    if (event.data.source) {\n      event.getModel(event.data.sourcePort).then(model => {\n        this.setSourcePort(model);\n      });\n    }\n  }\n  getRenderedPath() {\n    return this.renderedPaths;\n  }\n  setRenderedPaths(paths) {\n    this.renderedPaths = paths;\n  }\n  serialize() {\n    return Object.assign(Object.assign({}, super.serialize()), {\n      source: this.sourcePort ? this.sourcePort.getParent().getID() : null,\n      sourcePort: this.sourcePort ? this.sourcePort.getID() : null,\n      target: this.targetPort ? this.targetPort.getParent().getID() : null,\n      targetPort: this.targetPort ? this.targetPort.getID() : null,\n      points: _.map(this.points, point => {\n        return point.serialize();\n      }),\n      labels: _.map(this.labels, label => {\n        return label.serialize();\n      })\n    });\n  }\n  doClone(lookupTable = {}, clone) {\n    clone.setPoints(_.map(this.getPoints(), point => {\n      return point.clone(lookupTable);\n    }));\n    if (this.sourcePort) {\n      clone.setSourcePort(this.sourcePort.clone(lookupTable));\n    }\n    if (this.targetPort) {\n      clone.setTargetPort(this.targetPort.clone(lookupTable));\n    }\n  }\n  clearPort(port) {\n    if (this.sourcePort === port) {\n      this.setSourcePort(null);\n    } else if (this.targetPort === port) {\n      this.setTargetPort(null);\n    }\n  }\n  remove() {\n    if (this.sourcePort) {\n      this.sourcePort.removeLink(this);\n      delete this.sourcePort;\n    }\n    if (this.targetPort) {\n      this.targetPort.removeLink(this);\n      delete this.targetPort;\n    }\n    super.remove();\n  }\n  isLastPoint(point) {\n    var index = this.getPointIndex(point);\n    return index === this.points.length - 1;\n  }\n  getPointIndex(point) {\n    return this.points.indexOf(point);\n  }\n  getPointModel(id) {\n    for (var i = 0; i < this.points.length; i++) {\n      if (this.points[i].getID() === id) {\n        return this.points[i];\n      }\n    }\n    return null;\n  }\n  getPortForPoint(point) {\n    if (this.sourcePort !== null && this.getFirstPoint().getID() === point.getID()) {\n      return this.sourcePort;\n    }\n    if (this.targetPort !== null && this.getLastPoint().getID() === point.getID()) {\n      return this.targetPort;\n    }\n    return null;\n  }\n  getPointForPort(port) {\n    if (this.sourcePort !== null && this.sourcePort.getID() === port.getID()) {\n      return this.getFirstPoint();\n    }\n    if (this.targetPort !== null && this.targetPort.getID() === port.getID()) {\n      return this.getLastPoint();\n    }\n    return null;\n  }\n  getFirstPoint() {\n    return this.points[0];\n  }\n  getLastPoint() {\n    return this.points[this.points.length - 1];\n  }\n  setSourcePort(port) {\n    if (port !== null) {\n      port.addLink(this);\n    }\n    if (this.sourcePort !== null) {\n      this.sourcePort.removeLink(this);\n    }\n    this.sourcePort = port;\n    this.fireEvent({\n      port\n    }, 'sourcePortChanged');\n    if (port === null || port === void 0 ? void 0 : port.reportedPosition) {\n      this.getPointForPort(port).setPosition(port.getCenter());\n    }\n  }\n  getSourcePort() {\n    return this.sourcePort;\n  }\n  getTargetPort() {\n    return this.targetPort;\n  }\n  setTargetPort(port) {\n    if (port !== null) {\n      port.addLink(this);\n    }\n    if (this.targetPort !== null) {\n      this.targetPort.removeLink(this);\n    }\n    this.targetPort = port;\n    this.fireEvent({\n      port\n    }, 'targetPortChanged');\n    if (port === null || port === void 0 ? void 0 : port.reportedPosition) {\n      this.getPointForPort(port).setPosition(port.getCenter());\n    }\n  }\n  point(x, y, index = 1) {\n    return this.addPoint(this.generatePoint(x, y), index);\n  }\n  addLabel(label) {\n    label.setParent(this);\n    this.labels.push(label);\n  }\n  getPoints() {\n    return this.points;\n  }\n  getLabels() {\n    return this.labels;\n  }\n  setPoints(points) {\n    _.forEach(points, point => {\n      point.setParent(this);\n    });\n    this.points = points;\n  }\n  removePoint(pointModel) {\n    if (this.isLastPoint(pointModel)) this.remove();\n    this.points.splice(this.getPointIndex(pointModel), 1);\n  }\n  removePointsBefore(pointModel) {\n    this.points.splice(0, this.getPointIndex(pointModel));\n  }\n  removePointsAfter(pointModel) {\n    this.points.splice(this.getPointIndex(pointModel) + 1);\n  }\n  removeMiddlePoints() {\n    if (this.points.length > 2) {\n      this.points.splice(1, this.points.length - 2);\n    }\n  }\n  addPoint(pointModel, index = 1) {\n    pointModel.setParent(this);\n    this.points.splice(index, 0, pointModel);\n    return pointModel;\n  }\n  generatePoint(x = 0, y = 0) {\n    return new PointModel({\n      link: this,\n      position: new Point(x, y)\n    });\n  }\n}","map":{"version":3,"names":["PointModel","_","boundingBoxFromPoints","Point","Rectangle","BaseModel","LinkModel","constructor","options","points","link","sourcePort","targetPort","renderedPaths","labels","getBoundingBox","map","point","getPosition","getSelectionEntities","getTargetPort","getSourcePort","concat","slice","length","deserialize","event","data","p","position","x","y","Object","assign","forEach","label","labelOb","engine","getFactoryForLabel","type","generateModel","addLabel","target","getModel","then","model","setTargetPort","source","setSourcePort","getRenderedPath","setRenderedPaths","paths","serialize","getParent","getID","doClone","lookupTable","clone","setPoints","getPoints","clearPort","port","remove","removeLink","isLastPoint","index","getPointIndex","indexOf","getPointModel","id","i","getPortForPoint","getFirstPoint","getLastPoint","getPointForPort","addLink","fireEvent","reportedPosition","setPosition","getCenter","addPoint","generatePoint","setParent","push","getLabels","removePoint","pointModel","splice","removePointsBefore","removePointsAfter","removeMiddlePoints"],"sources":["C:\\Users\\samir\\Diagram gen\\diagram-sami\\node_modules\\@projectstorm\\react-diagrams-core\\src\\entities\\link\\LinkModel.ts"],"sourcesContent":["import { PortModel } from '../port/PortModel';\nimport { PointModel } from './PointModel';\nimport * as _ from 'lodash';\nimport { LabelModel } from '../label/LabelModel';\nimport { DiagramEngine } from '../../DiagramEngine';\nimport { DiagramModel } from '../../models/DiagramModel';\nimport { boundingBoxFromPoints, Point, Rectangle } from '@projectstorm/geometry';\nimport {\n\tBaseEntityEvent,\n\tBaseModel,\n\tBaseModelGenerics,\n\tBaseModelListener,\n\tDeserializeEvent,\n\tModelGeometryInterface\n} from '@projectstorm/react-canvas-core';\n\nexport interface LinkModelListener extends BaseModelListener {\n\tsourcePortChanged?(event: BaseEntityEvent<LinkModel> & { port: null | PortModel }): void;\n\n\ttargetPortChanged?(event: BaseEntityEvent<LinkModel> & { port: null | PortModel }): void;\n}\n\nexport interface LinkModelGenerics extends BaseModelGenerics {\n\tLISTENER: LinkModelListener;\n\tPARENT: DiagramModel;\n}\n\nexport class LinkModel<G extends LinkModelGenerics = LinkModelGenerics>\n\textends BaseModel<G>\n\timplements ModelGeometryInterface\n{\n\tprotected sourcePort: PortModel | null;\n\tprotected targetPort: PortModel | null;\n\n\tprotected labels: LabelModel[];\n\tprotected points: PointModel[];\n\n\tprotected renderedPaths: SVGPathElement[];\n\n\tconstructor(options: G['OPTIONS']) {\n\t\tsuper(options);\n\t\tthis.points = [\n\t\t\tnew PointModel({\n\t\t\t\tlink: this\n\t\t\t}),\n\t\t\tnew PointModel({\n\t\t\t\tlink: this\n\t\t\t})\n\t\t];\n\t\tthis.sourcePort = null;\n\t\tthis.targetPort = null;\n\t\tthis.renderedPaths = [];\n\t\tthis.labels = [];\n\t}\n\n\tgetBoundingBox(): Rectangle {\n\t\treturn new Rectangle(\n\t\t\tboundingBoxFromPoints(\n\t\t\t\t_.map(this.points, (point: PointModel) => {\n\t\t\t\t\treturn point.getPosition();\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\t}\n\n\tgetSelectionEntities(): Array<BaseModel> {\n\t\tif (this.getTargetPort() && this.getSourcePort()) {\n\t\t\treturn super.getSelectionEntities().concat(_.slice(this.points, 1, this.points.length - 1));\n\t\t}\n\t\t// allow selection of the first point\n\t\tif (!this.getSourcePort()) {\n\t\t\treturn super.getSelectionEntities().concat(_.slice(this.points, 0, this.points.length - 1));\n\t\t}\n\t\t// allow selection of the last point\n\t\tif (!this.getTargetPort()) {\n\t\t\treturn super.getSelectionEntities().concat(_.slice(this.points, 1, this.points.length));\n\t\t}\n\t\treturn super.getSelectionEntities().concat(this.points);\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.points = _.map(event.data.points || [], (point) => {\n\t\t\tvar p = new PointModel({\n\t\t\t\tlink: this,\n\t\t\t\tposition: new Point(point.x, point.y)\n\t\t\t});\n\t\t\tp.deserialize({\n\t\t\t\t...event,\n\t\t\t\tdata: point\n\t\t\t});\n\t\t\treturn p;\n\t\t});\n\n\t\t//deserialize labels\n\t\t_.forEach(event.data.labels || [], (label: any) => {\n\t\t\tlet labelOb = (event.engine as DiagramEngine).getFactoryForLabel(label.type).generateModel({});\n\t\t\tlabelOb.deserialize({\n\t\t\t\t...event,\n\t\t\t\tdata: label\n\t\t\t});\n\t\t\tthis.addLabel(labelOb);\n\t\t});\n\n\t\t// these happen async, so we use the promises for these (they need to be done like this without the async keyword\n\t\t// because we need the deserailize method to finish for other methods while this happen\n\t\tif (event.data.target) {\n\t\t\tevent.getModel(event.data.targetPort).then((model: PortModel) => {\n\t\t\t\tthis.setTargetPort(model);\n\t\t\t});\n\t\t}\n\t\tif (event.data.source) {\n\t\t\tevent.getModel(event.data.sourcePort).then((model: PortModel) => {\n\t\t\t\tthis.setSourcePort(model);\n\t\t\t});\n\t\t}\n\t}\n\n\tgetRenderedPath(): SVGPathElement[] {\n\t\treturn this.renderedPaths;\n\t}\n\n\tsetRenderedPaths(paths: SVGPathElement[]) {\n\t\tthis.renderedPaths = paths;\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tsource: this.sourcePort ? this.sourcePort.getParent().getID() : null,\n\t\t\tsourcePort: this.sourcePort ? this.sourcePort.getID() : null,\n\t\t\ttarget: this.targetPort ? this.targetPort.getParent().getID() : null,\n\t\t\ttargetPort: this.targetPort ? this.targetPort.getID() : null,\n\t\t\tpoints: _.map(this.points, (point) => {\n\t\t\t\treturn point.serialize();\n\t\t\t}),\n\t\t\tlabels: _.map(this.labels, (label) => {\n\t\t\t\treturn label.serialize();\n\t\t\t})\n\t\t};\n\t}\n\n\tdoClone(lookupTable = {}, clone) {\n\t\tclone.setPoints(\n\t\t\t_.map(this.getPoints(), (point: PointModel) => {\n\t\t\t\treturn point.clone(lookupTable);\n\t\t\t})\n\t\t);\n\t\tif (this.sourcePort) {\n\t\t\tclone.setSourcePort(this.sourcePort.clone(lookupTable));\n\t\t}\n\t\tif (this.targetPort) {\n\t\t\tclone.setTargetPort(this.targetPort.clone(lookupTable));\n\t\t}\n\t}\n\n\tclearPort(port: PortModel) {\n\t\tif (this.sourcePort === port) {\n\t\t\tthis.setSourcePort(null);\n\t\t} else if (this.targetPort === port) {\n\t\t\tthis.setTargetPort(null);\n\t\t}\n\t}\n\n\tremove() {\n\t\tif (this.sourcePort) {\n\t\t\tthis.sourcePort.removeLink(this);\n\t\t\tdelete this.sourcePort;\n\t\t}\n\t\tif (this.targetPort) {\n\t\t\tthis.targetPort.removeLink(this);\n\t\t\tdelete this.targetPort;\n\t\t}\n\t\tsuper.remove();\n\t}\n\n\tisLastPoint(point: PointModel) {\n\t\tvar index = this.getPointIndex(point);\n\t\treturn index === this.points.length - 1;\n\t}\n\n\tgetPointIndex(point: PointModel) {\n\t\treturn this.points.indexOf(point);\n\t}\n\n\tgetPointModel(id: string): PointModel | null {\n\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\tif (this.points[i].getID() === id) {\n\t\t\t\treturn this.points[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetPortForPoint(point: PointModel): PortModel {\n\t\tif (this.sourcePort !== null && this.getFirstPoint().getID() === point.getID()) {\n\t\t\treturn this.sourcePort;\n\t\t}\n\t\tif (this.targetPort !== null && this.getLastPoint().getID() === point.getID()) {\n\t\t\treturn this.targetPort;\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetPointForPort(port: PortModel): PointModel {\n\t\tif (this.sourcePort !== null && this.sourcePort.getID() === port.getID()) {\n\t\t\treturn this.getFirstPoint();\n\t\t}\n\t\tif (this.targetPort !== null && this.targetPort.getID() === port.getID()) {\n\t\t\treturn this.getLastPoint();\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetFirstPoint(): PointModel {\n\t\treturn this.points[0];\n\t}\n\n\tgetLastPoint(): PointModel {\n\t\treturn this.points[this.points.length - 1];\n\t}\n\n\tsetSourcePort(port: PortModel | null) {\n\t\tif (port !== null) {\n\t\t\tport.addLink(this);\n\t\t}\n\t\tif (this.sourcePort !== null) {\n\t\t\tthis.sourcePort.removeLink(this);\n\t\t}\n\t\tthis.sourcePort = port;\n\t\tthis.fireEvent({ port }, 'sourcePortChanged');\n\t\tif (port?.reportedPosition) {\n\t\t\tthis.getPointForPort(port).setPosition(port.getCenter());\n\t\t}\n\t}\n\n\tgetSourcePort(): PortModel {\n\t\treturn this.sourcePort;\n\t}\n\n\tgetTargetPort(): PortModel {\n\t\treturn this.targetPort;\n\t}\n\n\tsetTargetPort(port: PortModel | null) {\n\t\tif (port !== null) {\n\t\t\tport.addLink(this);\n\t\t}\n\t\tif (this.targetPort !== null) {\n\t\t\tthis.targetPort.removeLink(this);\n\t\t}\n\t\tthis.targetPort = port;\n\t\tthis.fireEvent({ port }, 'targetPortChanged');\n\t\tif (port?.reportedPosition) {\n\t\t\tthis.getPointForPort(port).setPosition(port.getCenter());\n\t\t}\n\t}\n\n\tpoint(x: number, y: number, index: number = 1): PointModel {\n\t\treturn this.addPoint(this.generatePoint(x, y), index);\n\t}\n\n\taddLabel(label: LabelModel) {\n\t\tlabel.setParent(this);\n\t\tthis.labels.push(label);\n\t}\n\n\tgetPoints(): PointModel[] {\n\t\treturn this.points;\n\t}\n\n\tgetLabels() {\n\t\treturn this.labels;\n\t}\n\n\tsetPoints(points: PointModel[]) {\n\t\t_.forEach(points, (point) => {\n\t\t\tpoint.setParent(this);\n\t\t});\n\t\tthis.points = points;\n\t}\n\n\tremovePoint(pointModel: PointModel) {\n\t\tif (this.isLastPoint(pointModel)) this.remove();\n\t\tthis.points.splice(this.getPointIndex(pointModel), 1);\n\t}\n\n\tremovePointsBefore(pointModel: PointModel) {\n\t\tthis.points.splice(0, this.getPointIndex(pointModel));\n\t}\n\n\tremovePointsAfter(pointModel: PointModel) {\n\t\tthis.points.splice(this.getPointIndex(pointModel) + 1);\n\t}\n\n\tremoveMiddlePoints() {\n\t\tif (this.points.length > 2) {\n\t\t\tthis.points.splice(1, this.points.length - 2);\n\t\t}\n\t}\n\n\taddPoint<P extends PointModel>(pointModel: P, index = 1): P {\n\t\tpointModel.setParent(this);\n\t\tthis.points.splice(index, 0, pointModel);\n\t\treturn pointModel;\n\t}\n\n\tgeneratePoint(x: number = 0, y: number = 0): PointModel {\n\t\treturn new PointModel({\n\t\t\tlink: this,\n\t\t\tposition: new Point(x, y)\n\t\t});\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}