{"ast":null,"code":"import { Point } from './Point';\nimport * as _ from 'lodash';\nimport { Matrix } from './Matrix';\nimport { boundingBoxFromPoints } from './toolkit';\nimport { BoundsCorner } from './Bounds';\nexport class Polygon {\n  constructor(points = []) {\n    this.points = points;\n  }\n  serialize() {\n    return _.map(this.points, point => {\n      return [point.x, point.y];\n    });\n  }\n  deserialize(data) {\n    this.points = _.map(data, point => {\n      return new Point(point[0], point[1]);\n    });\n  }\n  scale(x, y, origin) {\n    let matrix = Matrix.createScaleMatrix(x, y, origin);\n    _.forEach(this.points, point => {\n      point.transform(matrix);\n    });\n  }\n  transform(matrix) {\n    _.forEach(this.points, point => {\n      point.transform(matrix);\n    });\n  }\n  setPoints(points) {\n    this.points = points;\n  }\n  getPoints() {\n    return this.points;\n  }\n  rotate(degrees) {\n    this.transform(Matrix.createRotateMatrix(degrees / (180 / Math.PI), this.getOrigin()));\n  }\n  translate(offsetX, offsetY) {\n    _.forEach(this.points, point => {\n      point.translate(offsetX, offsetY);\n    });\n  }\n  doClone(ob) {\n    this.points = _.map(ob.points, point => {\n      return point.clone();\n    });\n  }\n  clone() {\n    let ob = Object.create(this);\n    ob.doClone(this);\n    return ob;\n  }\n  getOrigin() {\n    if (this.points.length === 0) {\n      return null;\n    }\n    let dimensions = boundingBoxFromPoints(this.points);\n    return Point.middlePoint(dimensions[BoundsCorner.TOP_LEFT], dimensions[BoundsCorner.BOTTOM_RIGHT]);\n  }\n  getBoundingBox() {\n    return boundingBoxFromPoints(this.points);\n  }\n}","map":{"version":3,"names":["Point","_","Matrix","boundingBoxFromPoints","BoundsCorner","Polygon","constructor","points","serialize","map","point","x","y","deserialize","data","scale","origin","matrix","createScaleMatrix","forEach","transform","setPoints","getPoints","rotate","degrees","createRotateMatrix","Math","PI","getOrigin","translate","offsetX","offsetY","doClone","ob","clone","Object","create","length","dimensions","middlePoint","TOP_LEFT","BOTTOM_RIGHT","getBoundingBox"],"sources":["C:\\Users\\samir\\Diagram gen\\diagram-sami\\node_modules\\@projectstorm\\geometry\\src\\Polygon.ts"],"sourcesContent":["import { Point } from './Point';\nimport * as _ from 'lodash';\nimport { Matrix } from './Matrix';\nimport { boundingBoxFromPoints } from './toolkit';\nimport { Bounds, BoundsCorner } from './Bounds';\n\nexport class Polygon {\n\tprotected points: Point[];\n\n\tconstructor(points: Point[] = []) {\n\t\tthis.points = points;\n\t}\n\n\tserialize() {\n\t\treturn _.map(this.points, (point) => {\n\t\t\treturn [point.x, point.y];\n\t\t});\n\t}\n\n\tdeserialize(data: any) {\n\t\tthis.points = _.map(data, (point) => {\n\t\t\treturn new Point(point[0], point[1]);\n\t\t});\n\t}\n\n\tscale(x, y, origin: Point) {\n\t\tlet matrix = Matrix.createScaleMatrix(x, y, origin);\n\t\t_.forEach(this.points, (point) => {\n\t\t\tpoint.transform(matrix);\n\t\t});\n\t}\n\n\ttransform(matrix: Matrix) {\n\t\t_.forEach(this.points, (point) => {\n\t\t\tpoint.transform(matrix);\n\t\t});\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tthis.points = points;\n\t}\n\n\tgetPoints(): Point[] {\n\t\treturn this.points;\n\t}\n\n\trotate(degrees: number) {\n\t\tthis.transform(Matrix.createRotateMatrix(degrees / (180 / Math.PI), this.getOrigin()));\n\t}\n\n\ttranslate(offsetX: number, offsetY: number) {\n\t\t_.forEach(this.points, (point) => {\n\t\t\tpoint.translate(offsetX, offsetY);\n\t\t});\n\t}\n\n\tdoClone(ob: this) {\n\t\tthis.points = _.map(ob.points, (point) => {\n\t\t\treturn point.clone();\n\t\t});\n\t}\n\n\tclone(): this {\n\t\tlet ob = Object.create(this);\n\t\tob.doClone(this);\n\t\treturn ob;\n\t}\n\n\tgetOrigin(): Point {\n\t\tif (this.points.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tlet dimensions = boundingBoxFromPoints(this.points);\n\t\treturn Point.middlePoint(dimensions[BoundsCorner.TOP_LEFT], dimensions[BoundsCorner.BOTTOM_RIGHT]);\n\t}\n\n\tgetBoundingBox(): Bounds {\n\t\treturn boundingBoxFromPoints(this.points);\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}