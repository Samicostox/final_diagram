{"ast":null,"code":"import { State } from './State';\nimport { Action, InputType } from '../core-actions/Action';\nexport class AbstractDisplacementState extends State {\n  constructor(options) {\n    super(options);\n    this.registerAction(new Action({\n      type: InputType.MOUSE_DOWN,\n      fire: actionEvent => {\n        const {\n          clientX,\n          clientY\n        } = actionEvent.event;\n        this.handleMoveStart(clientX, clientY);\n      }\n    }));\n    this.registerAction(new Action({\n      type: InputType.MOUSE_MOVE,\n      fire: actionEvent => {\n        const {\n          event\n        } = actionEvent;\n        if (event.buttons === 0) {\n          // If buttons is 0, it means the mouse is not down, the user may have released it\n          // outside of the canvas, then we eject the state\n          this.eject();\n          return;\n        }\n        const {\n          clientX,\n          clientY\n        } = event;\n        this.handleMove(clientX, clientY, event);\n      }\n    }));\n    this.registerAction(new Action({\n      type: InputType.MOUSE_UP,\n      fire: () => this.handleMoveEnd()\n    }));\n    this.registerAction(new Action({\n      type: InputType.TOUCH_START,\n      fire: actionEvent => {\n        const {\n          clientX,\n          clientY\n        } = actionEvent.event.touches[0];\n        this.handleMoveStart(clientX, clientY);\n      }\n    }));\n    this.registerAction(new Action({\n      type: InputType.TOUCH_MOVE,\n      fire: actionEvent => {\n        const {\n          event\n        } = actionEvent;\n        const {\n          clientX,\n          clientY\n        } = event.touches[0];\n        this.handleMove(clientX, clientY, event);\n      }\n    }));\n    this.registerAction(new Action({\n      type: InputType.TOUCH_END,\n      fire: () => this.handleMoveEnd()\n    }));\n  }\n  handleMoveStart(x, y) {\n    this.initialX = x;\n    this.initialY = y;\n    const rel = this.engine.getRelativePoint(x, y);\n    this.initialXRelative = rel.x;\n    this.initialYRelative = rel.y;\n  }\n  handleMove(x, y, event) {\n    this.fireMouseMoved({\n      displacementX: x - this.initialX,\n      displacementY: y - this.initialY,\n      virtualDisplacementX: (x - this.initialX) / (this.engine.getModel().getZoomLevel() / 100.0),\n      virtualDisplacementY: (y - this.initialY) / (this.engine.getModel().getZoomLevel() / 100.0),\n      event\n    });\n  }\n  handleMoveEnd() {\n    this.eject();\n  }\n}","map":{"version":3,"names":["State","Action","InputType","AbstractDisplacementState","constructor","options","registerAction","type","MOUSE_DOWN","fire","actionEvent","clientX","clientY","event","handleMoveStart","MOUSE_MOVE","buttons","eject","handleMove","MOUSE_UP","handleMoveEnd","TOUCH_START","touches","TOUCH_MOVE","TOUCH_END","x","y","initialX","initialY","rel","engine","getRelativePoint","initialXRelative","initialYRelative","fireMouseMoved","displacementX","displacementY","virtualDisplacementX","getModel","getZoomLevel","virtualDisplacementY"],"sources":["C:\\Users\\samir\\Diagram gen\\diagram-sami\\node_modules\\@projectstorm\\react-canvas-core\\src\\core-state\\AbstractDisplacementState.ts"],"sourcesContent":["import { State, StateOptions } from './State';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { CanvasEngine } from '../CanvasEngine';\n\nexport interface AbstractDisplacementStateEvent {\n\tdisplacementX: number;\n\tdisplacementY: number;\n\tvirtualDisplacementX: number;\n\tvirtualDisplacementY: number;\n\tevent: React.MouseEvent | React.TouchEvent;\n}\n\nexport abstract class AbstractDisplacementState<E extends CanvasEngine = CanvasEngine> extends State<E> {\n\tinitialX: number;\n\tinitialY: number;\n\tinitialXRelative: number;\n\tinitialYRelative: number;\n\n\tconstructor(options: StateOptions) {\n\t\tsuper(options);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.MouseEvent>) => {\n\t\t\t\t\tconst { clientX, clientY } = actionEvent.event;\n\t\t\t\t\tthis.handleMoveStart(clientX, clientY);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_MOVE,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.MouseEvent>) => {\n\t\t\t\t\tconst { event } = actionEvent;\n\n\t\t\t\t\tif (event.buttons === 0) {\n\t\t\t\t\t\t// If buttons is 0, it means the mouse is not down, the user may have released it\n\t\t\t\t\t\t// outside of the canvas, then we eject the state\n\t\t\t\t\t\tthis.eject();\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { clientX, clientY } = event;\n\t\t\t\t\tthis.handleMove(clientX, clientY, event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_UP,\n\t\t\t\tfire: () => this.handleMoveEnd()\n\t\t\t})\n\t\t);\n\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.TOUCH_START,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.TouchEvent>) => {\n\t\t\t\t\tconst { clientX, clientY } = actionEvent.event.touches[0];\n\t\t\t\t\tthis.handleMoveStart(clientX, clientY);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.TOUCH_MOVE,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.TouchEvent>) => {\n\t\t\t\t\tconst { event } = actionEvent;\n\t\t\t\t\tconst { clientX, clientY } = event.touches[0];\n\t\t\t\t\tthis.handleMove(clientX, clientY, event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.TOUCH_END,\n\t\t\t\tfire: () => this.handleMoveEnd()\n\t\t\t})\n\t\t);\n\t}\n\n\tprotected handleMoveStart(x: number, y: number): void {\n\t\tthis.initialX = x;\n\t\tthis.initialY = y;\n\t\tconst rel = this.engine.getRelativePoint(x, y);\n\t\tthis.initialXRelative = rel.x;\n\t\tthis.initialYRelative = rel.y;\n\t}\n\n\tprotected handleMove(x: number, y: number, event: React.MouseEvent | React.TouchEvent): void {\n\t\tthis.fireMouseMoved({\n\t\t\tdisplacementX: x - this.initialX,\n\t\t\tdisplacementY: y - this.initialY,\n\t\t\tvirtualDisplacementX: (x - this.initialX) / (this.engine.getModel().getZoomLevel() / 100.0),\n\t\t\tvirtualDisplacementY: (y - this.initialY) / (this.engine.getModel().getZoomLevel() / 100.0),\n\t\t\tevent\n\t\t});\n\t}\n\n\tprotected handleMoveEnd(): void {\n\t\tthis.eject();\n\t}\n\n\tabstract fireMouseMoved(event: AbstractDisplacementStateEvent);\n}\n"],"mappings":"AAAA,SAASA,KAAK,QAAsB,SAAS;AAC7C,SAASC,MAAM,EAAeC,SAAS,QAAQ,wBAAwB;AAWvE,OAAM,MAAgBC,yBAAiE,SAAQH,KAAQ;EAMtGI,YAAYC,OAAqB;IAChC,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,cAAc,CAClB,IAAIL,MAAM,CAAC;MACVM,IAAI,EAAEL,SAAS,CAACM,UAAU;MAC1BC,IAAI,EAAGC,WAA0C,IAAI;QACpD,MAAM;UAAEC,OAAO;UAAEC;QAAO,CAAE,GAAGF,WAAW,CAACG,KAAK;QAC9C,IAAI,CAACC,eAAe,CAACH,OAAO,EAAEC,OAAO,CAAC;MACvC;KACA,CAAC,CACF;IACD,IAAI,CAACN,cAAc,CAClB,IAAIL,MAAM,CAAC;MACVM,IAAI,EAAEL,SAAS,CAACa,UAAU;MAC1BN,IAAI,EAAGC,WAA0C,IAAI;QACpD,MAAM;UAAEG;QAAK,CAAE,GAAGH,WAAW;QAE7B,IAAIG,KAAK,CAACG,OAAO,KAAK,CAAC,EAAE;UACxB;UACA;UACA,IAAI,CAACC,KAAK,EAAE;UAEZ;;QAGD,MAAM;UAAEN,OAAO;UAAEC;QAAO,CAAE,GAAGC,KAAK;QAClC,IAAI,CAACK,UAAU,CAACP,OAAO,EAAEC,OAAO,EAAEC,KAAK,CAAC;MACzC;KACA,CAAC,CACF;IACD,IAAI,CAACP,cAAc,CAClB,IAAIL,MAAM,CAAC;MACVM,IAAI,EAAEL,SAAS,CAACiB,QAAQ;MACxBV,IAAI,EAAEA,CAAA,KAAM,IAAI,CAACW,aAAa;KAC9B,CAAC,CACF;IAED,IAAI,CAACd,cAAc,CAClB,IAAIL,MAAM,CAAC;MACVM,IAAI,EAAEL,SAAS,CAACmB,WAAW;MAC3BZ,IAAI,EAAGC,WAA0C,IAAI;QACpD,MAAM;UAAEC,OAAO;UAAEC;QAAO,CAAE,GAAGF,WAAW,CAACG,KAAK,CAACS,OAAO,CAAC,CAAC,CAAC;QACzD,IAAI,CAACR,eAAe,CAACH,OAAO,EAAEC,OAAO,CAAC;MACvC;KACA,CAAC,CACF;IACD,IAAI,CAACN,cAAc,CAClB,IAAIL,MAAM,CAAC;MACVM,IAAI,EAAEL,SAAS,CAACqB,UAAU;MAC1Bd,IAAI,EAAGC,WAA0C,IAAI;QACpD,MAAM;UAAEG;QAAK,CAAE,GAAGH,WAAW;QAC7B,MAAM;UAAEC,OAAO;UAAEC;QAAO,CAAE,GAAGC,KAAK,CAACS,OAAO,CAAC,CAAC,CAAC;QAC7C,IAAI,CAACJ,UAAU,CAACP,OAAO,EAAEC,OAAO,EAAEC,KAAK,CAAC;MACzC;KACA,CAAC,CACF;IACD,IAAI,CAACP,cAAc,CAClB,IAAIL,MAAM,CAAC;MACVM,IAAI,EAAEL,SAAS,CAACsB,SAAS;MACzBf,IAAI,EAAEA,CAAA,KAAM,IAAI,CAACW,aAAa;KAC9B,CAAC,CACF;EACF;EAEUN,eAAeA,CAACW,CAAS,EAAEC,CAAS;IAC7C,IAAI,CAACC,QAAQ,GAAGF,CAAC;IACjB,IAAI,CAACG,QAAQ,GAAGF,CAAC;IACjB,MAAMG,GAAG,GAAG,IAAI,CAACC,MAAM,CAACC,gBAAgB,CAACN,CAAC,EAAEC,CAAC,CAAC;IAC9C,IAAI,CAACM,gBAAgB,GAAGH,GAAG,CAACJ,CAAC;IAC7B,IAAI,CAACQ,gBAAgB,GAAGJ,GAAG,CAACH,CAAC;EAC9B;EAEUR,UAAUA,CAACO,CAAS,EAAEC,CAAS,EAAEb,KAA0C;IACpF,IAAI,CAACqB,cAAc,CAAC;MACnBC,aAAa,EAAEV,CAAC,GAAG,IAAI,CAACE,QAAQ;MAChCS,aAAa,EAAEV,CAAC,GAAG,IAAI,CAACE,QAAQ;MAChCS,oBAAoB,EAAE,CAACZ,CAAC,GAAG,IAAI,CAACE,QAAQ,KAAK,IAAI,CAACG,MAAM,CAACQ,QAAQ,EAAE,CAACC,YAAY,EAAE,GAAG,KAAK,CAAC;MAC3FC,oBAAoB,EAAE,CAACd,CAAC,GAAG,IAAI,CAACE,QAAQ,KAAK,IAAI,CAACE,MAAM,CAACQ,QAAQ,EAAE,CAACC,YAAY,EAAE,GAAG,KAAK,CAAC;MAC3F1B;KACA,CAAC;EACH;EAEUO,aAAaA,CAAA;IACtB,IAAI,CAACH,KAAK,EAAE;EACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}