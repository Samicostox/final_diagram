{"ast":null,"code":"var AStarFinder = require('./AStarFinder');\n\n/**\r\n * Best-First-Search path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\nfunction BestFirstFinder(opt) {\n  AStarFinder.call(this, opt);\n  var orig = this.heuristic;\n  this.heuristic = function (dx, dy) {\n    return orig(dx, dy) * 1000000;\n  };\n}\nBestFirstFinder.prototype = new AStarFinder();\nBestFirstFinder.prototype.constructor = BestFirstFinder;\nmodule.exports = BestFirstFinder;","map":{"version":3,"names":["AStarFinder","require","BestFirstFinder","opt","call","orig","heuristic","dx","dy","prototype","constructor","module","exports"],"sources":["C:/Users/samir/Diagram gen/diagram-sami/node_modules/pathfinding/src/finders/BestFirstFinder.js"],"sourcesContent":["var AStarFinder = require('./AStarFinder');\r\n\r\n/**\r\n * Best-First-Search path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BestFirstFinder(opt) {\r\n    AStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBestFirstFinder.prototype = new AStarFinder();\r\nBestFirstFinder.prototype.constructor = BestFirstFinder;\r\n\r\nmodule.exports = BestFirstFinder;\r\n"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAACC,GAAG,EAAE;EAC1BH,WAAW,CAACI,IAAI,CAAC,IAAI,EAAED,GAAG,CAAC;EAE3B,IAAIE,IAAI,GAAG,IAAI,CAACC,SAAS;EACzB,IAAI,CAACA,SAAS,GAAG,UAASC,EAAE,EAAEC,EAAE,EAAE;IAC9B,OAAOH,IAAI,CAACE,EAAE,EAAEC,EAAE,CAAC,GAAG,OAAO;EACjC,CAAC;AACL;AAEAN,eAAe,CAACO,SAAS,GAAG,IAAIT,WAAW,CAAC,CAAC;AAC7CE,eAAe,CAACO,SAAS,CAACC,WAAW,GAAGR,eAAe;AAEvDS,MAAM,CAACC,OAAO,GAAGV,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}