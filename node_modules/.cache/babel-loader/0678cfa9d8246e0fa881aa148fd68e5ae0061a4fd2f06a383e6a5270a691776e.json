{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samir\\\\Diagram gen\\\\diagram-sami\\\\src\\\\datamodeldiagram.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, useNodesState, useEdgesState, addEdge } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: '1',\n  position: {\n    x: 250,\n    y: 0\n  },\n  data: {\n    label: 'Auth System'\n  }\n}, {\n  id: '2',\n  position: {\n    x: 100,\n    y: 150\n  },\n  data: {\n    label: 'Profile Page'\n  }\n}, {\n  id: '3',\n  position: {\n    x: 250,\n    y: 150\n  },\n  data: {\n    label: 'History Page'\n  }\n}, {\n  id: '4',\n  position: {\n    x: 400,\n    y: 150\n  },\n  data: {\n    label: 'Bet Page'\n  }\n}];\nconst initialEdges = [{\n  id: 'e1-2',\n  source: '1',\n  target: '2'\n}, {\n  id: 'e1-3',\n  source: '1',\n  target: '3'\n}, {\n  id: 'e1-4',\n  source: '1',\n  target: '4'\n}];\nexport default function DataModelDiagram() {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [nodeName, setNodeName] = useState('');\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node);\n    setNodeName(node.data.label);\n  }, []);\n  const updateNodeName = useCallback(() => {\n    setNodes(nds => nds.map(n => {\n      if (n.id === selectedNode.id) {\n        return {\n          ...n,\n          data: {\n            ...n.data,\n            label: nodeName\n          }\n        };\n      }\n      return n;\n    }));\n    setSelectedNode(null);\n    setNodeName('');\n  }, [nodeName, selectedNode, setNodes]);\n  const addNewNode = useCallback(() => {\n    const newNodeId = `node_${nodes.length + 1}`;\n    const newNode = {\n      id: newNodeId,\n      data: {\n        label: `Node ${nodes.length + 1}`\n      },\n      position: {\n        x: window.innerWidth / 2 - 100,\n        y: window.innerHeight / 2 - 50\n      } // Adjust for node size\n    };\n    setNodes(nds => nds.concat(newNode));\n    setSelectedNode(newNode);\n    setNodeName(newNode.data.label);\n  }, [nodes, setNodes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    children: [selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        zIndex: 4,\n        left: 10,\n        top: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: nodeName,\n        onChange: e => setNodeName(e.target.value),\n        onBlur: updateNodeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewNode,\n      style: {\n        position: 'absolute',\n        right: 100,\n        bottom: 10,\n        zIndex: 4\n      },\n      children: \"Add Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onNodeClick: onNodeClick,\n      onConnect: onConnect,\n      children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        variant: \"dots\",\n        gap: 12,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n}\n_s(DataModelDiagram, \"ygjLYeNQ+b3/hucrgn2cddxuyZk=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = DataModelDiagram;\nvar _c;\n$RefreshReg$(_c, \"DataModelDiagram\");","map":{"version":3,"names":["React","useCallback","useState","ReactFlow","MiniMap","Controls","Background","useNodesState","useEdgesState","addEdge","jsxDEV","_jsxDEV","initialNodes","id","position","x","y","data","label","initialEdges","source","target","DataModelDiagram","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","selectedNode","setSelectedNode","nodeName","setNodeName","onConnect","params","eds","onNodeClick","event","node","updateNodeName","nds","map","n","addNewNode","newNodeId","length","newNode","window","innerWidth","innerHeight","concat","style","width","height","children","zIndex","left","top","value","onChange","e","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","onClick","right","bottom","variant","gap","size","_c","$RefreshReg$"],"sources":["C:/Users/samir/Diagram gen/diagram-sami/src/datamodeldiagram.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport ReactFlow, {\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  useNodesState,\r\n  useEdgesState,\r\n  addEdge,\r\n} from 'reactflow';\r\n\r\nimport 'reactflow/dist/style.css';\r\n\r\nconst initialNodes = [\r\n  { id: '1', position: { x: 250, y: 0 }, data: { label: 'Auth System' } },\r\n  { id: '2', position: { x: 100, y: 150 }, data: { label: 'Profile Page' } },\r\n  { id: '3', position: { x: 250, y: 150 }, data: { label: 'History Page' } },\r\n  { id: '4', position: { x: 400, y: 150 }, data: { label: 'Bet Page' } },\r\n];\r\n\r\nconst initialEdges = [\r\n  { id: 'e1-2', source: '1', target: '2' },\r\n  { id: 'e1-3', source: '1', target: '3' },\r\n  { id: 'e1-4', source: '1', target: '4' },\r\n];\r\n\r\nexport default function DataModelDiagram() {\r\n    const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n    const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\r\n    const [selectedNode, setSelectedNode] = useState(null);\r\n    const [nodeName, setNodeName] = useState('');\r\n  \r\n    const onConnect = useCallback(\r\n      (params) => setEdges((eds) => addEdge(params, eds)),\r\n      [setEdges],\r\n    );\r\n  \r\n    const onNodeClick = useCallback((event, node) => {\r\n      setSelectedNode(node);\r\n      setNodeName(node.data.label);\r\n    }, []);\r\n  \r\n    const updateNodeName = useCallback(() => {\r\n      setNodes((nds) =>\r\n        nds.map((n) => {\r\n          if (n.id === selectedNode.id) {\r\n            return {\r\n              ...n,\r\n              data: { ...n.data, label: nodeName }\r\n            };\r\n          }\r\n          return n;\r\n        })\r\n      );\r\n      setSelectedNode(null);\r\n      setNodeName('');\r\n    }, [nodeName, selectedNode, setNodes]);\r\n  \r\n    const addNewNode = useCallback(() => {\r\n      const newNodeId = `node_${nodes.length + 1}`;\r\n      const newNode = {\r\n        id: newNodeId,\r\n        data: { label: `Node ${nodes.length + 1}` },\r\n        position: { x: window.innerWidth / 2 - 100, y: window.innerHeight / 2 - 50 } // Adjust for node size\r\n      };\r\n      setNodes((nds) => nds.concat(newNode));\r\n      setSelectedNode(newNode);\r\n      setNodeName(newNode.data.label);\r\n    }, [nodes, setNodes]);\r\n  \r\n    return (\r\n      <div style={{ width: '100vw', height: '100vh' }}>\r\n        {selectedNode && (\r\n          <div style={{ position: 'absolute', zIndex: 4, left: 10, top: 10 }}>\r\n            <input\r\n              value={nodeName}\r\n              onChange={(e) => setNodeName(e.target.value)}\r\n              onBlur={updateNodeName}\r\n            />\r\n          </div>\r\n        )}\r\n        <button\r\n          onClick={addNewNode}\r\n          style={{ position: 'absolute', right: 100, bottom: 10, zIndex: 4 }}\r\n        >\r\n          Add Node\r\n        </button>\r\n        <ReactFlow\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onNodeClick={onNodeClick}\r\n          onConnect={onConnect}\r\n        >\r\n          <Controls />\r\n          <MiniMap />\r\n          <Background variant=\"dots\" gap={12} size={1} />\r\n        </ReactFlow>\r\n      </div>\r\n    );\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}