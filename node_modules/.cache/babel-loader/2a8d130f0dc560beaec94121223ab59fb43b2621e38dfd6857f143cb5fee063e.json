{"ast":null,"code":"import { Point } from './Point';\nimport { Polygon } from './Polygon';\nimport { BoundsCorner, boundsFromPositionAndSize, createEmptyBounds } from './Bounds';\nexport class Rectangle extends Polygon {\n  static fromPositionAndSize(x, y, width, height) {\n    return new Rectangle(boundsFromPositionAndSize(x, y, width, height));\n  }\n  static fromPointAndSize(position, width, height) {\n    return new Rectangle(boundsFromPositionAndSize(position.x, position.y, width, height));\n  }\n  constructor(points) {\n    if (!points) {\n      points = createEmptyBounds();\n    }\n    super([points[BoundsCorner.TOP_LEFT], points[BoundsCorner.TOP_RIGHT], points[BoundsCorner.BOTTOM_RIGHT], points[BoundsCorner.BOTTOM_LEFT]]);\n  }\n  updateDimensions(x, y, width, height) {\n    const points = boundsFromPositionAndSize(x, y, width, height);\n    this.setPoints([points[BoundsCorner.TOP_LEFT], points[BoundsCorner.TOP_RIGHT], points[BoundsCorner.BOTTOM_RIGHT], points[BoundsCorner.BOTTOM_LEFT]]);\n  }\n  setPoints(points) {\n    if (points.length !== 4) {\n      throw 'Rectangles must always have 4 points';\n    }\n    super.setPoints(points);\n  }\n  containsPoint(point) {\n    const tl = this.getTopLeft();\n    const br = this.getBottomRight();\n    return point.x >= tl.x && point.x <= br.x && point.y >= tl.y && point.y <= br.y;\n  }\n  getWidth() {\n    return Math.sqrt(Math.pow(this.getTopLeft().x - this.getTopRight().x, 2) + Math.pow(this.getTopLeft().y - this.getTopRight().y, 2));\n  }\n  getHeight() {\n    return Math.sqrt(Math.pow(this.getBottomLeft().x - this.getTopLeft().x, 2) + Math.pow(this.getBottomLeft().y - this.getTopLeft().y, 2));\n  }\n  getTopMiddle() {\n    return Point.middlePoint(this.getTopLeft(), this.getTopRight());\n  }\n  getBottomMiddle() {\n    return Point.middlePoint(this.getBottomLeft(), this.getBottomRight());\n  }\n  getLeftMiddle() {\n    return Point.middlePoint(this.getBottomLeft(), this.getTopLeft());\n  }\n  getRightMiddle() {\n    return Point.middlePoint(this.getBottomRight(), this.getTopRight());\n  }\n  getTopLeft() {\n    return this.points[0];\n  }\n  getTopRight() {\n    return this.points[1];\n  }\n  getBottomRight() {\n    return this.points[2];\n  }\n  getBottomLeft() {\n    return this.points[3];\n  }\n}","map":{"version":3,"names":["Point","Polygon","BoundsCorner","boundsFromPositionAndSize","createEmptyBounds","Rectangle","fromPositionAndSize","x","y","width","height","fromPointAndSize","position","constructor","points","TOP_LEFT","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","updateDimensions","setPoints","length","containsPoint","point","tl","getTopLeft","br","getBottomRight","getWidth","Math","sqrt","pow","getTopRight","getHeight","getBottomLeft","getTopMiddle","middlePoint","getBottomMiddle","getLeftMiddle","getRightMiddle"],"sources":["C:\\Users\\samir\\Diagram gen\\diagram-sami\\node_modules\\@projectstorm\\geometry\\src\\Rectangle.ts"],"sourcesContent":["import { Point } from './Point';\nimport { Polygon } from './Polygon';\nimport { Bounds, BoundsCorner, boundsFromPositionAndSize, createEmptyBounds } from './Bounds';\n\nexport class Rectangle extends Polygon {\n\tstatic fromPositionAndSize(x: number, y: number, width: number, height: number) {\n\t\treturn new Rectangle(boundsFromPositionAndSize(x, y, width, height));\n\t}\n\n\tstatic fromPointAndSize(position: Point, width: number, height: number) {\n\t\treturn new Rectangle(boundsFromPositionAndSize(position.x, position.y, width, height));\n\t}\n\n\tconstructor(points?: Bounds) {\n\t\tif (!points) {\n\t\t\tpoints = createEmptyBounds();\n\t\t}\n\n\t\tsuper([\n\t\t\tpoints[BoundsCorner.TOP_LEFT],\n\t\t\tpoints[BoundsCorner.TOP_RIGHT],\n\t\t\tpoints[BoundsCorner.BOTTOM_RIGHT],\n\t\t\tpoints[BoundsCorner.BOTTOM_LEFT]\n\t\t]);\n\t}\n\n\tupdateDimensions(x: number, y: number, width: number, height: number) {\n\t\tconst points = boundsFromPositionAndSize(x, y, width, height);\n\t\tthis.setPoints([\n\t\t\tpoints[BoundsCorner.TOP_LEFT],\n\t\t\tpoints[BoundsCorner.TOP_RIGHT],\n\t\t\tpoints[BoundsCorner.BOTTOM_RIGHT],\n\t\t\tpoints[BoundsCorner.BOTTOM_LEFT]\n\t\t]);\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tif (points.length !== 4) {\n\t\t\tthrow 'Rectangles must always have 4 points';\n\t\t}\n\t\tsuper.setPoints(points);\n\t}\n\n\tcontainsPoint(point: Point) {\n\t\tconst tl = this.getTopLeft();\n\t\tconst br = this.getBottomRight();\n\n\t\treturn point.x >= tl.x && point.x <= br.x && point.y >= tl.y && point.y <= br.y;\n\t}\n\n\tgetWidth(): number {\n\t\treturn Math.sqrt(\n\t\t\tMath.pow(this.getTopLeft().x - this.getTopRight().x, 2) + Math.pow(this.getTopLeft().y - this.getTopRight().y, 2)\n\t\t);\n\t}\n\n\tgetHeight(): number {\n\t\treturn Math.sqrt(\n\t\t\tMath.pow(this.getBottomLeft().x - this.getTopLeft().x, 2) +\n\t\t\t\tMath.pow(this.getBottomLeft().y - this.getTopLeft().y, 2)\n\t\t);\n\t}\n\n\tgetTopMiddle(): Point {\n\t\treturn Point.middlePoint(this.getTopLeft(), this.getTopRight());\n\t}\n\n\tgetBottomMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomLeft(), this.getBottomRight());\n\t}\n\n\tgetLeftMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomLeft(), this.getTopLeft());\n\t}\n\n\tgetRightMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomRight(), this.getTopRight());\n\t}\n\n\tgetTopLeft(): Point {\n\t\treturn this.points[0];\n\t}\n\n\tgetTopRight(): Point {\n\t\treturn this.points[1];\n\t}\n\n\tgetBottomRight(): Point {\n\t\treturn this.points[2];\n\t}\n\n\tgetBottomLeft(): Point {\n\t\treturn this.points[3];\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}