{"ast":null,"code":"import { Action, InputType, MoveItemsState } from '@projectstorm/react-canvas-core';\nimport * as _ from 'lodash';\nimport { PointModel } from '../entities/link/PointModel';\nimport { PortModel } from '../entities/port/PortModel';\nexport class DragDiagramItemsState extends MoveItemsState {\n  constructor() {\n    super();\n    this.registerAction(new Action({\n      type: InputType.MOUSE_UP,\n      fire: event => {\n        const item = this.engine.getMouseElement(event.event);\n        if (item instanceof PortModel) {\n          _.forEach(this.initialPositions, position => {\n            if (position.item instanceof PointModel) {\n              const link = position.item.getParent();\n              // only care about the last links\n              if (link.getLastPoint() !== position.item) {\n                return;\n              }\n              if (link.getSourcePort().canLinkToPort(item)) {\n                link.setTargetPort(item);\n                item.reportPosition();\n                this.engine.repaintCanvas();\n              }\n            }\n          });\n        }\n      }\n    }));\n  }\n}","map":{"version":3,"names":["Action","InputType","MoveItemsState","_","PointModel","PortModel","DragDiagramItemsState","constructor","registerAction","type","MOUSE_UP","fire","event","item","engine","getMouseElement","forEach","initialPositions","position","link","getParent","getLastPoint","getSourcePort","canLinkToPort","setTargetPort","reportPosition","repaintCanvas"],"sources":["C:\\Users\\samir\\Diagram gen\\diagram-sami\\node_modules\\@projectstorm\\react-diagrams-core\\src\\states\\DragDiagramItemsState.ts"],"sourcesContent":["import { Action, ActionEvent, InputType, MoveItemsState } from '@projectstorm/react-canvas-core';\nimport * as _ from 'lodash';\nimport { PointModel } from '../entities/link/PointModel';\nimport { DiagramEngine } from '../DiagramEngine';\nimport { PortModel } from '../entities/port/PortModel';\nimport { MouseEvent } from 'react';\nimport { LinkModel } from '../entities/link/LinkModel';\n\nexport class DragDiagramItemsState extends MoveItemsState<DiagramEngine> {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_UP,\n\t\t\t\tfire: (event: ActionEvent<MouseEvent>) => {\n\t\t\t\t\tconst item = this.engine.getMouseElement(event.event);\n\t\t\t\t\tif (item instanceof PortModel) {\n\t\t\t\t\t\t_.forEach(this.initialPositions, (position) => {\n\t\t\t\t\t\t\tif (position.item instanceof PointModel) {\n\t\t\t\t\t\t\t\tconst link = position.item.getParent() as LinkModel;\n\n\t\t\t\t\t\t\t\t// only care about the last links\n\t\t\t\t\t\t\t\tif (link.getLastPoint() !== position.item) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (link.getSourcePort().canLinkToPort(item)) {\n\t\t\t\t\t\t\t\t\tlink.setTargetPort(item);\n\t\t\t\t\t\t\t\t\titem.reportPosition();\n\t\t\t\t\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n"],"mappings":"AAAA,SAASA,MAAM,EAAeC,SAAS,EAAEC,cAAc,QAAQ,iCAAiC;AAChG,OAAO,KAAKC,CAAC,MAAM,QAAQ;AAC3B,SAASC,UAAU,QAAQ,6BAA6B;AAExD,SAASC,SAAS,QAAQ,4BAA4B;AAItD,OAAM,MAAOC,qBAAsB,SAAQJ,cAA6B;EACvEK,YAAA;IACC,KAAK,EAAE;IACP,IAAI,CAACC,cAAc,CAClB,IAAIR,MAAM,CAAC;MACVS,IAAI,EAAER,SAAS,CAACS,QAAQ;MACxBC,IAAI,EAAGC,KAA8B,IAAI;QACxC,MAAMC,IAAI,GAAG,IAAI,CAACC,MAAM,CAACC,eAAe,CAACH,KAAK,CAACA,KAAK,CAAC;QACrD,IAAIC,IAAI,YAAYR,SAAS,EAAE;UAC9BF,CAAC,CAACa,OAAO,CAAC,IAAI,CAACC,gBAAgB,EAAGC,QAAQ,IAAI;YAC7C,IAAIA,QAAQ,CAACL,IAAI,YAAYT,UAAU,EAAE;cACxC,MAAMe,IAAI,GAAGD,QAAQ,CAACL,IAAI,CAACO,SAAS,EAAe;cAEnD;cACA,IAAID,IAAI,CAACE,YAAY,EAAE,KAAKH,QAAQ,CAACL,IAAI,EAAE;gBAC1C;;cAED,IAAIM,IAAI,CAACG,aAAa,EAAE,CAACC,aAAa,CAACV,IAAI,CAAC,EAAE;gBAC7CM,IAAI,CAACK,aAAa,CAACX,IAAI,CAAC;gBACxBA,IAAI,CAACY,cAAc,EAAE;gBACrB,IAAI,CAACX,MAAM,CAACY,aAAa,EAAE;;;UAG9B,CAAC,CAAC;;MAEJ;KACA,CAAC,CACF;EACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}