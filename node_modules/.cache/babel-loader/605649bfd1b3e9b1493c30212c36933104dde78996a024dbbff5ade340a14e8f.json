{"ast":null,"code":"import * as React from 'react';\nimport * as _ from 'lodash';\nimport { PeformanceWidget } from '@projectstorm/react-canvas-core';\nimport styled from '@emotion/styled';\nimport ResizeObserver from 'resize-observer-polyfill';\nvar S;\n(function (S) {\n  S.Node = styled.div`\n\t\tposition: absolute;\n\t\t-webkit-touch-callout: none; /* iOS Safari */\n\t\t-webkit-user-select: none; /* Chrome/Safari/Opera */\n\t\tuser-select: none;\n\t\tcursor: move;\n\t\tpointer-events: all;\n\t`;\n})(S || (S = {}));\nexport class NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n  componentWillUnmount() {\n    var _a;\n    this.ob.disconnect();\n    this.ob = null;\n    (_a = this.listener) === null || _a === void 0 ? void 0 : _a.deregister();\n    this.listener = null;\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.listener && this.props.node !== prevProps.node) {\n      this.listener.deregister();\n      this.installSelectionListener();\n    }\n  }\n  installSelectionListener() {\n    this.listener = this.props.node.registerListener({\n      selectionChanged: event => {\n        this.forceUpdate();\n      }\n    });\n  }\n  updateSize(width, height) {\n    this.props.node.updateDimensions({\n      width,\n      height\n    });\n    //now mark the links as dirty\n    try {\n      _.forEach(this.props.node.getPorts(), port => {\n        port.updateCoords(this.props.diagramEngine.getPortCoords(port));\n      });\n    } catch (ex) {}\n  }\n  componentDidMount() {\n    // @ts-ignore\n    this.ob = new ResizeObserver(entities => {\n      const bounds = entities[0].contentRect;\n      this.updateSize(bounds.width, bounds.height);\n    });\n    const b = this.ref.current.getBoundingClientRect();\n    this.updateSize(b.width, b.height);\n    this.ob.observe(this.ref.current);\n    this.installSelectionListener();\n  }\n  render() {\n    return React.createElement(PeformanceWidget, {\n      model: this.props.node,\n      serialized: this.props.node.serialize()\n    }, () => {\n      return React.createElement(S.Node, {\n        className: \"node\",\n        ref: this.ref,\n        \"data-nodeid\": this.props.node.getID(),\n        style: {\n          top: this.props.node.getY(),\n          left: this.props.node.getX()\n        }\n      }, this.props.diagramEngine.generateWidgetForNode(this.props.node));\n    });\n  }\n}","map":{"version":3,"names":["React","_","PeformanceWidget","styled","ResizeObserver","S","Node","div","NodeWidget","Component","constructor","props","ref","createRef","componentWillUnmount","ob","disconnect","_a","listener","deregister","componentDidUpdate","prevProps","prevState","snapshot","node","installSelectionListener","registerListener","selectionChanged","event","forceUpdate","updateSize","width","height","updateDimensions","forEach","getPorts","port","updateCoords","diagramEngine","getPortCoords","ex","componentDidMount","entities","bounds","contentRect","b","current","getBoundingClientRect","observe","render","createElement","model","serialized","serialize","className","getID","style","top","getY","left","getX","generateWidgetForNode"],"sources":["C:\\Users\\samir\\Diagram gen\\diagram-sami\\node_modules\\@projectstorm\\react-diagrams-core\\src\\entities\\node\\NodeWidget.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { DiagramEngine } from '../../DiagramEngine';\nimport { NodeModel } from './NodeModel';\nimport { BaseEntityEvent, BaseModel, ListenerHandle, PeformanceWidget } from '@projectstorm/react-canvas-core';\nimport styled from '@emotion/styled';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nexport interface NodeProps {\n\tnode: NodeModel;\n\tchildren?: any;\n\tdiagramEngine: DiagramEngine;\n}\n\nnamespace S {\n\texport const Node = styled.div`\n\t\tposition: absolute;\n\t\t-webkit-touch-callout: none; /* iOS Safari */\n\t\t-webkit-user-select: none; /* Chrome/Safari/Opera */\n\t\tuser-select: none;\n\t\tcursor: move;\n\t\tpointer-events: all;\n\t`;\n}\n\nexport class NodeWidget extends React.Component<NodeProps> {\n\tob: any;\n\tref: React.RefObject<HTMLDivElement>;\n\tlistener: ListenerHandle;\n\n\tconstructor(props: NodeProps) {\n\t\tsuper(props);\n\t\tthis.ref = React.createRef();\n\t}\n\n\tcomponentWillUnmount(): void {\n\t\tthis.ob.disconnect();\n\t\tthis.ob = null;\n\n\t\tthis.listener?.deregister();\n\t\tthis.listener = null;\n\t}\n\n\tcomponentDidUpdate(prevProps: Readonly<NodeProps>, prevState: Readonly<any>, snapshot?: any): void {\n\t\tif (this.listener && this.props.node !== prevProps.node) {\n\t\t\tthis.listener.deregister();\n\t\t\tthis.installSelectionListener();\n\t\t}\n\t}\n\n\tinstallSelectionListener() {\n\t\tthis.listener = this.props.node.registerListener({\n\t\t\tselectionChanged: (event: BaseEntityEvent<BaseModel> & { isSelected: boolean }) => {\n\t\t\t\tthis.forceUpdate();\n\t\t\t}\n\t\t});\n\t}\n\n\tupdateSize(width: number, height: number) {\n\t\tthis.props.node.updateDimensions({ width, height });\n\n\t\t//now mark the links as dirty\n\t\ttry {\n\t\t\t_.forEach(this.props.node.getPorts(), (port) => {\n\t\t\t\tport.updateCoords(this.props.diagramEngine.getPortCoords(port));\n\t\t\t});\n\t\t} catch (ex) {}\n\t}\n\n\tcomponentDidMount(): void {\n\t\t// @ts-ignore\n\t\tthis.ob = new ResizeObserver((entities) => {\n\t\t\tconst bounds = entities[0].contentRect;\n\t\t\tthis.updateSize(bounds.width, bounds.height);\n\t\t});\n\n\t\tconst b = this.ref.current.getBoundingClientRect();\n\t\tthis.updateSize(b.width, b.height);\n\t\tthis.ob.observe(this.ref.current);\n\t\tthis.installSelectionListener();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<PeformanceWidget model={this.props.node} serialized={this.props.node.serialize()}>\n\t\t\t\t{() => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<S.Node\n\t\t\t\t\t\t\tclassName=\"node\"\n\t\t\t\t\t\t\tref={this.ref}\n\t\t\t\t\t\t\tdata-nodeid={this.props.node.getID()}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttop: this.props.node.getY(),\n\t\t\t\t\t\t\t\tleft: this.props.node.getX()\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.props.diagramEngine.generateWidgetForNode(this.props.node)}\n\t\t\t\t\t\t</S.Node>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</PeformanceWidget>\n\t\t);\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}