{"ast":null,"code":"import { debounce } from 'lodash';\nimport { FactoryBank } from './core/FactoryBank';\nimport { BaseObserver } from './core/BaseObserver';\nimport { Point } from '@projectstorm/geometry';\nimport { ActionEventBus } from './core-actions/ActionEventBus';\nimport { PanAndZoomCanvasAction } from './actions/PanAndZoomCanvasAction';\nimport { ZoomCanvasAction } from './actions/ZoomCanvasAction';\nimport { DeleteItemsAction } from './actions/DeleteItemsAction';\nimport { StateMachine } from './core-state/StateMachine';\nexport class CanvasEngine extends BaseObserver {\n  constructor(options = {}) {\n    super();\n    this.model = null;\n    this.eventBus = new ActionEventBus(this);\n    this.stateMachine = new StateMachine(this);\n    this.layerFactories = new FactoryBank();\n    this.registerFactoryBank(this.layerFactories);\n    /**\n     * Overrides the standard options with the possible given options\n     */\n    this.options = Object.assign({\n      registerDefaultDeleteItemsAction: true,\n      registerDefaultZoomCanvasAction: true,\n      repaintDebounceMs: 0\n    }, options);\n    if (this.options.registerDefaultZoomCanvasAction === true) {\n      this.eventBus.registerAction(new ZoomCanvasAction());\n    } else if (this.options.registerDefaultPanAndZoomCanvasAction === true) {\n      this.eventBus.registerAction(new PanAndZoomCanvasAction());\n    }\n    if (this.options.registerDefaultDeleteItemsAction === true) {\n      this.eventBus.registerAction(new DeleteItemsAction());\n    }\n  }\n  getStateMachine() {\n    return this.stateMachine;\n  }\n  getRelativeMousePoint(event) {\n    const point = this.getRelativePoint(event.clientX, event.clientY);\n    return new Point((point.x - this.model.getOffsetX()) / (this.model.getZoomLevel() / 100.0), (point.y - this.model.getOffsetY()) / (this.model.getZoomLevel() / 100.0));\n  }\n  getRelativePoint(x, y) {\n    const canvasRect = this.canvas.getBoundingClientRect();\n    return new Point(x - canvasRect.left, y - canvasRect.top);\n  }\n  registerFactoryBank(factory) {\n    factory.registerListener({\n      factoryAdded: event => {\n        event.factory.setDiagramEngine(this);\n      },\n      factoryRemoved: event => {\n        event.factory.setDiagramEngine(null);\n      }\n    });\n  }\n  getActionEventBus() {\n    return this.eventBus;\n  }\n  getLayerFactories() {\n    return this.layerFactories;\n  }\n  getFactoryForLayer(layer) {\n    if (typeof layer === 'string') {\n      return this.layerFactories.getFactory(layer);\n    }\n    return this.layerFactories.getFactory(layer.getType());\n  }\n  setModel(model) {\n    this.model = model;\n    if (this.canvas) {\n      requestAnimationFrame(() => {\n        this.repaintCanvas();\n      });\n    }\n  }\n  getModel() {\n    return this.model;\n  }\n  repaintCanvas(promise) {\n    const {\n      repaintDebounceMs\n    } = this.options;\n    /**\n     * The actual repaint function\n     */\n    const repaint = () => {\n      this.iterateListeners(listener => {\n        if (listener.repaintCanvas) {\n          listener.repaintCanvas();\n        }\n      });\n    };\n    // if the `repaintDebounceMs` option is > 0, then apply the debounce\n    let repaintFn = repaint;\n    if (repaintDebounceMs > 0) {\n      repaintFn = debounce(repaint, repaintDebounceMs);\n    }\n    if (promise) {\n      return new Promise(resolve => {\n        const l = this.registerListener({\n          rendered: () => {\n            resolve();\n            l.deregister();\n          }\n        });\n        repaintFn();\n      });\n    }\n    repaintFn();\n  }\n  setCanvas(canvas) {\n    if (this.canvas !== canvas) {\n      this.canvas = canvas;\n      if (canvas) {\n        this.fireEvent({}, 'canvasReady');\n      }\n    }\n  }\n  getCanvas() {\n    return this.canvas;\n  }\n  getMouseElement(event) {\n    return null;\n  }\n  zoomToFit() {\n    const xFactor = this.canvas.clientWidth / this.canvas.scrollWidth;\n    const yFactor = this.canvas.clientHeight / this.canvas.scrollHeight;\n    const zoomFactor = xFactor < yFactor ? xFactor : yFactor;\n    this.model.setZoomLevel(this.model.getZoomLevel() * zoomFactor);\n    this.model.setOffset(0, 0);\n    this.repaintCanvas();\n  }\n}","map":{"version":3,"names":["debounce","FactoryBank","BaseObserver","Point","ActionEventBus","PanAndZoomCanvasAction","ZoomCanvasAction","DeleteItemsAction","StateMachine","CanvasEngine","constructor","options","model","eventBus","stateMachine","layerFactories","registerFactoryBank","Object","assign","registerDefaultDeleteItemsAction","registerDefaultZoomCanvasAction","repaintDebounceMs","registerAction","registerDefaultPanAndZoomCanvasAction","getStateMachine","getRelativeMousePoint","event","point","getRelativePoint","clientX","clientY","x","getOffsetX","getZoomLevel","y","getOffsetY","canvasRect","canvas","getBoundingClientRect","left","top","factory","registerListener","factoryAdded","setDiagramEngine","factoryRemoved","getActionEventBus","getLayerFactories","getFactoryForLayer","layer","getFactory","getType","setModel","requestAnimationFrame","repaintCanvas","getModel","promise","repaint","iterateListeners","listener","repaintFn","Promise","resolve","l","rendered","deregister","setCanvas","fireEvent","getCanvas","getMouseElement","zoomToFit","xFactor","clientWidth","scrollWidth","yFactor","clientHeight","scrollHeight","zoomFactor","setZoomLevel","setOffset"],"sources":["C:\\Users\\samir\\Diagram gen\\diagram-sami\\node_modules\\@projectstorm\\react-canvas-core\\src\\CanvasEngine.ts"],"sourcesContent":["import { debounce } from 'lodash';\nimport { CanvasModel } from './entities/canvas/CanvasModel';\nimport { FactoryBank } from './core/FactoryBank';\nimport { AbstractReactFactory } from './core/AbstractReactFactory';\nimport { LayerModel } from './entities/layer/LayerModel';\nimport { BaseListener, BaseObserver } from './core/BaseObserver';\nimport { MouseEvent } from 'react';\nimport { BaseModel } from './core-models/BaseModel';\nimport { Point } from '@projectstorm/geometry';\nimport { ActionEventBus } from './core-actions/ActionEventBus';\nimport { PanAndZoomCanvasAction } from './actions/PanAndZoomCanvasAction';\nimport { ZoomCanvasAction } from './actions/ZoomCanvasAction';\nimport { DeleteItemsAction } from './actions/DeleteItemsAction';\nimport { StateMachine } from './core-state/StateMachine';\n\nexport interface CanvasEngineListener extends BaseListener {\n\tcanvasReady?(): void;\n\n\trepaintCanvas?(): void;\n\n\trendered?(): void;\n}\n\n/**\n * Defines the CanvasEngine options\n */\nexport interface CanvasEngineOptions {\n\tregisterDefaultDeleteItemsAction?: boolean;\n\tregisterDefaultPanAndZoomCanvasAction?: boolean;\n\tregisterDefaultZoomCanvasAction?: boolean;\n\t/**\n\t * Defines the debounce wait time in milliseconds if > 0\n\t */\n\trepaintDebounceMs?: number;\n}\n\nexport class CanvasEngine<\n\tL extends CanvasEngineListener = CanvasEngineListener,\n\tM extends CanvasModel = CanvasModel\n> extends BaseObserver<L> {\n\tprotected model: M;\n\tprotected layerFactories: FactoryBank<AbstractReactFactory<LayerModel>>;\n\tprotected canvas: HTMLDivElement;\n\tprotected eventBus: ActionEventBus;\n\tprotected stateMachine: StateMachine;\n\tprotected options: CanvasEngineOptions;\n\n\tconstructor(options: CanvasEngineOptions = {}) {\n\t\tsuper();\n\t\tthis.model = null;\n\t\tthis.eventBus = new ActionEventBus(this);\n\t\tthis.stateMachine = new StateMachine(this);\n\t\tthis.layerFactories = new FactoryBank();\n\t\tthis.registerFactoryBank(this.layerFactories);\n\n\t\t/**\n\t\t * Overrides the standard options with the possible given options\n\t\t */\n\t\tthis.options = {\n\t\t\tregisterDefaultDeleteItemsAction: true,\n\t\t\tregisterDefaultZoomCanvasAction: true,\n\t\t\trepaintDebounceMs: 0,\n\t\t\t...options\n\t\t};\n\t\tif (this.options.registerDefaultZoomCanvasAction === true) {\n\t\t\tthis.eventBus.registerAction(new ZoomCanvasAction());\n\t\t} else if (this.options.registerDefaultPanAndZoomCanvasAction === true) {\n\t\t\tthis.eventBus.registerAction(new PanAndZoomCanvasAction());\n\t\t}\n\t\tif (this.options.registerDefaultDeleteItemsAction === true) {\n\t\t\tthis.eventBus.registerAction(new DeleteItemsAction());\n\t\t}\n\t}\n\n\tgetStateMachine() {\n\t\treturn this.stateMachine;\n\t}\n\n\tgetRelativeMousePoint(event: { clientX: number; clientY: number }): Point {\n\t\tconst point = this.getRelativePoint(event.clientX, event.clientY);\n\t\treturn new Point(\n\t\t\t(point.x - this.model.getOffsetX()) / (this.model.getZoomLevel() / 100.0),\n\t\t\t(point.y - this.model.getOffsetY()) / (this.model.getZoomLevel() / 100.0)\n\t\t);\n\t}\n\n\tgetRelativePoint(x, y): Point {\n\t\tconst canvasRect = this.canvas.getBoundingClientRect();\n\t\treturn new Point(x - canvasRect.left, y - canvasRect.top);\n\t}\n\n\tregisterFactoryBank(factory: FactoryBank) {\n\t\tfactory.registerListener({\n\t\t\tfactoryAdded: (event) => {\n\t\t\t\tevent.factory.setDiagramEngine(this);\n\t\t\t},\n\t\t\tfactoryRemoved: (event) => {\n\t\t\t\tevent.factory.setDiagramEngine(null);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetActionEventBus() {\n\t\treturn this.eventBus;\n\t}\n\n\tgetLayerFactories() {\n\t\treturn this.layerFactories;\n\t}\n\n\tgetFactoryForLayer<F extends AbstractReactFactory<LayerModel>>(layer: LayerModel | string) {\n\t\tif (typeof layer === 'string') {\n\t\t\treturn this.layerFactories.getFactory(layer);\n\t\t}\n\t\treturn this.layerFactories.getFactory(layer.getType());\n\t}\n\n\tsetModel(model: M) {\n\t\tthis.model = model;\n\t\tif (this.canvas) {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tthis.repaintCanvas();\n\t\t\t});\n\t\t}\n\t}\n\n\tgetModel(): M {\n\t\treturn this.model;\n\t}\n\n\trepaintCanvas(promise: true): Promise<any>;\n\trepaintCanvas(): void;\n\trepaintCanvas(promise?): Promise<any> | void {\n\t\tconst { repaintDebounceMs } = this.options;\n\n\t\t/**\n\t\t * The actual repaint function\n\t\t */\n\t\tconst repaint = () => {\n\t\t\tthis.iterateListeners((listener) => {\n\t\t\t\tif (listener.repaintCanvas) {\n\t\t\t\t\tlistener.repaintCanvas();\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// if the `repaintDebounceMs` option is > 0, then apply the debounce\n\t\tlet repaintFn = repaint;\n\n\t\tif (repaintDebounceMs > 0) {\n\t\t\trepaintFn = debounce(repaint, repaintDebounceMs);\n\t\t}\n\n\t\tif (promise) {\n\t\t\treturn new Promise<void>((resolve) => {\n\t\t\t\tconst l = this.registerListener({\n\t\t\t\t\trendered: () => {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t\tl.deregister();\n\t\t\t\t\t}\n\t\t\t\t} as L);\n\t\t\t\trepaintFn();\n\t\t\t});\n\t\t}\n\n\t\trepaintFn();\n\t}\n\n\tsetCanvas(canvas?: HTMLDivElement) {\n\t\tif (this.canvas !== canvas) {\n\t\t\tthis.canvas = canvas;\n\t\t\tif (canvas) {\n\t\t\t\tthis.fireEvent({}, 'canvasReady');\n\t\t\t}\n\t\t}\n\t}\n\n\tgetCanvas() {\n\t\treturn this.canvas;\n\t}\n\n\tgetMouseElement(event: MouseEvent): BaseModel {\n\t\treturn null;\n\t}\n\n\tzoomToFit() {\n\t\tconst xFactor = this.canvas.clientWidth / this.canvas.scrollWidth;\n\t\tconst yFactor = this.canvas.clientHeight / this.canvas.scrollHeight;\n\t\tconst zoomFactor = xFactor < yFactor ? xFactor : yFactor;\n\n\t\tthis.model.setZoomLevel(this.model.getZoomLevel() * zoomFactor);\n\t\tthis.model.setOffset(0, 0);\n\t\tthis.repaintCanvas();\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}