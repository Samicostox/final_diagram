{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samir\\\\final_diagram\\\\src\\\\datamodeldiagram.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport 'reactflow/dist/style.css';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport Sidebar from './sidebar';\nimport './App.css';\nimport ReactFlow, { MiniMap, Controls, Background, useNodesState, useEdgesState, addEdge, Handle } from 'reactflow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RectangleNode = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 10,\n      border: '1px solid black',\n      backgroundColor: 'white'\n    },\n    children: data.label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n};\n_c = RectangleNode;\nconst CircleNode = ({\n  id,\n  data\n}) => {\n  var _data$style;\n  const nodeStyle = {\n    padding: 10,\n    borderRadius: '50%',\n    border: '1px solid black',\n    backgroundColor: ((_data$style = data.style) === null || _data$style === void 0 ? void 0 : _data$style.backgroundColor) || 'white',\n    color: 'black',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden',\n    fontSize: '12px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyle,\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: \"top\",\n      id: `${id}_t`,\n      style: {\n        borderRadius: '50%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: \"right\",\n      id: `${id}_r`,\n      style: {\n        borderRadius: '50%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: \"bottom\",\n      id: `${id}_b`,\n      style: {\n        borderRadius: '50%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: \"left\",\n      id: `${id}_l`,\n      style: {\n        borderRadius: '50%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), data.label]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c2 = CircleNode;\nconst TriangleNode = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 0,\n      height: 0,\n      borderLeft: '50px solid transparent',\n      borderRight: '50px solid transparent',\n      borderBottom: '100px solid black'\n    },\n    children: data.label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n};\n_c3 = TriangleNode;\nconst nodeTypes = {\n  rectangle: RectangleNode,\n  circle: CircleNode,\n  triangle: TriangleNode\n};\nconst initialNodes = [{\n  id: '1',\n  position: {\n    x: 250,\n    y: 0\n  },\n  data: {\n    label: 'Auth System'\n  }\n}, {\n  id: '2',\n  position: {\n    x: 100,\n    y: 150\n  },\n  data: {\n    label: 'Profile Page'\n  }\n}, {\n  id: '3',\n  position: {\n    x: 250,\n    y: 150\n  },\n  data: {\n    label: 'History Page'\n  }\n}, {\n  id: '4',\n  position: {\n    x: 400,\n    y: 150\n  },\n  data: {\n    label: 'Bet Page'\n  }\n}, {\n  id: '5',\n  position: {\n    x: 550,\n    y: 150\n  },\n  data: {\n    label: 'Bet Page2'\n  }\n}];\nconst initialEdges = [{\n  id: 'e1-2',\n  source: '1',\n  target: '2'\n}, {\n  id: 'e1-3',\n  source: '1',\n  target: '3'\n}, {\n  id: 'e1-4',\n  source: '1',\n  target: '4'\n}];\nconst defaultColors = ['#FF5733', '#33FF57', '#3357FF', '#FFFF33', '#FF33FF', '#33FFFF'];\nexport default function DataModelDiagram() {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [nodeName, setNodeName] = useState('');\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const [colorPickerPosition, setColorPickerPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [usedColors, setUsedColors] = useState(new Set());\n  const [customColor, setCustomColor] = useState('#000000');\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const reactFlowWrapper = useRef(null);\n  let id = 0;\n  const getId = () => `dndnode_${id++}`;\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n    if (!reactFlowInstance || !reactFlowWrapper.current) {\n      return;\n    }\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData('application/reactflow');\n    if (typeof type === 'undefined' || !type) {\n      return;\n    }\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n\n    // Generate a label based on the node type\n    const label = type.charAt(0).toUpperCase() + type.slice(1) + ' Node';\n    const newNode = {\n      id: getId(),\n      type,\n      position,\n      data: {\n        label: label\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n  }, [reactFlowInstance, setNodes]);\n  const exportDiagramAsPdf = async () => {\n    const flowContainer = document.querySelector('.react-flow__container');\n    if (flowContainer) {\n      const canvas = await html2canvas(flowContainer);\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF({\n        orientation: 'landscape',\n        unit: 'px',\n        format: [canvas.width, canvas.height]\n      });\n      pdf.addImage(imgData, 'PNG', 0, 0);\n      pdf.save('diagram.pdf');\n    }\n  };\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  const onDragStart = useCallback((event, nodeType) => {\n    event.dataTransfer.setData('application/reactflow', nodeType);\n    event.dataTransfer.effectAllowed = 'move';\n  }, []);\n  useEffect(() => {\n    const colorsInUse = new Set(nodes.map(node => {\n      var _node$style;\n      return (_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.backgroundColor;\n    }).filter(Boolean));\n    setUsedColors(colorsInUse);\n  }, [nodes]);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node);\n    setNodeName(node.data.label);\n    setShowColorPicker(true);\n    setColorPickerPosition({\n      x: event.clientX,\n      y: event.clientY\n    });\n  }, []);\n  const changeNodeColor = useCallback(color => {\n    setNodes(nds => nds.map(n => {\n      if (n.id === selectedNode.id && n.type === 'circle') {\n        return {\n          ...n,\n          data: {\n            ...n.data,\n            style: {\n              backgroundColor: color\n            }\n          }\n        };\n      }\n      return n;\n    }));\n    setShowColorPicker(false);\n  }, [selectedNode, setNodes]);\n  ;\n  const onCustomColorChange = useCallback(e => {\n    setCustomColor(e.target.value);\n  }, []);\n  const onCustomColorKeyDown = useCallback(e => {\n    if (e.key === 'Enter') {\n      changeNodeColor(customColor);\n    }\n  }, [customColor, changeNodeColor]);\n  const onCustomColorBlur = useCallback(() => {\n    changeNodeColor(customColor);\n  }, [customColor, changeNodeColor]);\n  const updateNodeName = useCallback(() => {\n    setNodes(nds => nds.map(n => {\n      if (n.id === selectedNode.id) {\n        return {\n          ...n,\n          data: {\n            ...n.data,\n            label: nodeName\n          }\n        };\n      }\n      return n;\n    }));\n    setSelectedNode(null);\n    setNodeName('');\n  }, [nodeName, selectedNode, setNodes]);\n  const addNewNode = useCallback(() => {\n    const newNodeId = `node_${nodes.length + 1}`;\n    const newNode = {\n      id: newNodeId,\n      data: {\n        label: `Node ${nodes.length + 1}`\n      },\n      position: {\n        x: window.innerWidth / 2 - 100,\n        y: window.innerHeight / 2 - 50\n      } // Adjust for node size\n    };\n    setNodes(nds => nds.concat(newNode));\n    setSelectedNode(newNode);\n    setNodeName(newNode.data.label);\n  }, [nodes, setNodes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100vw',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onDragStart: onDragStart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reactflow-wrapper\",\n      ref: reactFlowWrapper,\n      style: {\n        flex: 1,\n        position: 'relative'\n      },\n      children: [showColorPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          left: colorPickerPosition.x,\n          top: colorPickerPosition.y,\n          zIndex: 5,\n          padding: '10px',\n          backgroundColor: '#fff',\n          boxShadow: '0 0 10px rgba(0,0,0,0.2)'\n        },\n        children: [([...usedColors].length ? [...usedColors] : defaultColors).map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: color,\n            width: '25px',\n            height: '25px',\n            display: 'inline-block',\n            cursor: 'pointer',\n            margin: '5px'\n          },\n          onClick: () => changeNodeColor(color)\n        }, color, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: customColor,\n          onChange: onCustomColorChange,\n          onKeyDown: onCustomColorKeyDown,\n          onBlur: onCustomColorBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          zIndex: 4,\n          left: 10,\n          top: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: nodeName,\n          onChange: e => setNodeName(e.target.value),\n          onBlur: updateNodeName,\n          style: {\n            padding: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportDiagramAsPdf,\n        style: {\n          position: 'absolute',\n          right: 20,\n          top: 20,\n          zIndex: 4\n        },\n        children: \"Export as PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewNode,\n        style: {\n          position: 'absolute',\n          left: 20,\n          bottom: 20,\n          zIndex: 4,\n          padding: '10px'\n        },\n        children: \"Add Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n        onInit: setReactFlowInstance,\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        onDrop: onDrop,\n        onDragOver: onDragOver,\n        onNodeClick: onNodeClick,\n        fitView: true,\n        nodeTypes: nodeTypes,\n        children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Background, {\n          variant: \"dots\",\n          gap: 12,\n          size: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 7\n  }, this);\n}\n_s(DataModelDiagram, \"y/zCT1qdQrtHiWZO+s5/GeGgvyI=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c4 = DataModelDiagram;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"RectangleNode\");\n$RefreshReg$(_c2, \"CircleNode\");\n$RefreshReg$(_c3, \"TriangleNode\");\n$RefreshReg$(_c4, \"DataModelDiagram\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","useRef","html2canvas","jsPDF","Sidebar","ReactFlow","MiniMap","Controls","Background","useNodesState","useEdgesState","addEdge","Handle","jsxDEV","_jsxDEV","RectangleNode","data","style","padding","border","backgroundColor","children","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","CircleNode","id","_data$style","nodeStyle","borderRadius","color","width","height","display","justifyContent","alignItems","overflow","fontSize","type","position","_c2","TriangleNode","borderLeft","borderRight","borderBottom","_c3","nodeTypes","rectangle","circle","triangle","initialNodes","x","y","initialEdges","source","target","defaultColors","DataModelDiagram","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","selectedNode","setSelectedNode","nodeName","setNodeName","showColorPicker","setShowColorPicker","colorPickerPosition","setColorPickerPosition","usedColors","setUsedColors","Set","customColor","setCustomColor","reactFlowInstance","setReactFlowInstance","reactFlowWrapper","getId","onDrop","event","preventDefault","current","reactFlowBounds","getBoundingClientRect","dataTransfer","getData","project","clientX","left","clientY","top","charAt","toUpperCase","slice","newNode","nds","concat","exportDiagramAsPdf","flowContainer","document","querySelector","canvas","imgData","toDataURL","pdf","orientation","unit","format","addImage","save","onDragOver","dropEffect","onDragStart","nodeType","setData","effectAllowed","colorsInUse","map","node","_node$style","filter","Boolean","onConnect","params","eds","onNodeClick","changeNodeColor","n","onCustomColorChange","e","value","onCustomColorKeyDown","key","onCustomColorBlur","updateNodeName","addNewNode","newNodeId","length","window","innerWidth","innerHeight","className","ref","flex","zIndex","boxShadow","background","cursor","margin","onClick","onChange","onKeyDown","onBlur","right","bottom","onInit","fitView","variant","gap","size","_c4","$RefreshReg$"],"sources":["C:/Users/samir/final_diagram/src/datamodeldiagram.js"],"sourcesContent":["import React, { useCallback, useState,useEffect,useRef  } from 'react';\r\nimport 'reactflow/dist/style.css';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from 'jspdf';\r\nimport Sidebar from './sidebar';\r\nimport './App.css';\r\nimport ReactFlow, {\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  useNodesState,\r\n  useEdgesState,\r\n  addEdge,\r\n  Handle,\r\n} from 'reactflow';\r\n\r\n\r\n\r\n\r\nconst RectangleNode = ({ data }) => {\r\n  return <div style={{ padding: 10, border: '1px solid black', backgroundColor: 'white' }}>{data.label}</div>;\r\n};\r\n\r\nconst CircleNode = ({ id, data }) => {\r\n  const nodeStyle = {\r\n    padding: 10,\r\n    borderRadius: '50%',\r\n    border: '1px solid black',\r\n    backgroundColor: data.style?.backgroundColor || 'white',\r\n    color: 'black',\r\n    width: 50,\r\n    height: 50,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n    fontSize : '12px'\r\n\r\n  };\r\n\r\n  return (\r\n    <div style={nodeStyle}>\r\n      {/* Top Handle */}\r\n      <Handle type=\"target\" position=\"top\" id={`${id}_t`} style={{ borderRadius: '50%' }} />\r\n      {/* Right Handle */}\r\n      <Handle type=\"source\" position=\"right\" id={`${id}_r`} style={{ borderRadius: '50%' }} />\r\n      {/* Bottom Handle */}\r\n      <Handle type=\"target\" position=\"bottom\" id={`${id}_b`} style={{ borderRadius: '50%' }} />\r\n      {/* Left Handle */}\r\n      <Handle type=\"source\" position=\"left\" id={`${id}_l`} style={{ borderRadius: '50%' }} />\r\n\r\n      {data.label}\r\n    </div>\r\n  );\r\n};\r\nconst TriangleNode = ({ data }) => {\r\n  return <div style={{ width: 0, height: 0, borderLeft: '50px solid transparent', borderRight: '50px solid transparent', borderBottom: '100px solid black' }}>{data.label}</div>;\r\n};\r\n\r\n\r\nconst nodeTypes = {\r\n    rectangle: RectangleNode,\r\n    circle: CircleNode,\r\n    triangle: TriangleNode\r\n  };\r\n\r\n\r\n\r\nconst initialNodes = [\r\n  { id: '1',position: { x: 250, y: 0 }, data: { label: 'Auth System' } },\r\n  { id: '2', position: { x: 100, y: 150 }, data: { label: 'Profile Page' } },\r\n  { id: '3', position: { x: 250, y: 150 }, data: { label: 'History Page' } },\r\n  { id: '4', position: { x: 400, y: 150 }, data: { label: 'Bet Page' } },\r\n  { id: '5', position: { x: 550, y: 150 }, data: { label: 'Bet Page2' } },\r\n];\r\n\r\nconst initialEdges = [\r\n  { id: 'e1-2', source: '1', target: '2' },\r\n  { id: 'e1-3', source: '1', target: '3' },\r\n  { id: 'e1-4', source: '1', target: '4' },\r\n];\r\n\r\n\r\nconst defaultColors = ['#FF5733', '#33FF57', '#3357FF', '#FFFF33', '#FF33FF', '#33FFFF'];\r\n\r\nexport default function DataModelDiagram() {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [nodeName, setNodeName] = useState('');\r\n  const [showColorPicker, setShowColorPicker] = useState(false);\r\n  const [colorPickerPosition, setColorPickerPosition] = useState({ x: 0, y: 0 });\r\n  const [usedColors, setUsedColors] = useState(new Set());\r\n  const [customColor, setCustomColor] = useState('#000000');\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n\r\n\r\n  const reactFlowWrapper = useRef(null);\r\n  let id = 0;\r\n  const getId = () => `dndnode_${id++}`;\r\n\r\n  const onDrop = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n  \r\n      if (!reactFlowInstance || !reactFlowWrapper.current) {\r\n        return;\r\n      }\r\n  \r\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n      const type = event.dataTransfer.getData('application/reactflow');\r\n      if (typeof type === 'undefined' || !type) {\r\n        return;\r\n      }\r\n  \r\n      const position = reactFlowInstance.project({\r\n        x: event.clientX - reactFlowBounds.left,\r\n        y: event.clientY - reactFlowBounds.top,\r\n      });\r\n  \r\n      // Generate a label based on the node type\r\n      const label = type.charAt(0).toUpperCase() + type.slice(1) + ' Node';\r\n  \r\n      const newNode = {\r\n        id: getId(),\r\n        type,\r\n        position,\r\n        data: { label: label },\r\n      };\r\n  \r\n      setNodes((nds) => nds.concat(newNode));\r\n    },\r\n    [reactFlowInstance, setNodes]\r\n  );\r\n  \r\n  const exportDiagramAsPdf = async () => {\r\n    const flowContainer = document.querySelector('.react-flow__container');\r\n    if (flowContainer) {\r\n        const canvas = await html2canvas(flowContainer);\r\n        const imgData = canvas.toDataURL('image/png');\r\n        const pdf = new jsPDF({\r\n            orientation: 'landscape',\r\n            unit: 'px',\r\n            format: [canvas.width, canvas.height]\r\n        });\r\n        pdf.addImage(imgData, 'PNG', 0, 0);\r\n        pdf.save('diagram.pdf');\r\n    }\r\n};\r\n\r\nconst onDragOver = useCallback((event) => {\r\n  event.preventDefault();\r\n  event.dataTransfer.dropEffect = 'move';\r\n}, []);\r\n\r\n\r\n\r\nconst onDragStart = useCallback((event, nodeType) => {\r\n    event.dataTransfer.setData('application/reactflow', nodeType);\r\n    event.dataTransfer.effectAllowed = 'move';\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const colorsInUse = new Set(nodes.map(node => node.style?.backgroundColor).filter(Boolean));\r\n    setUsedColors(colorsInUse);\r\n  }, [nodes]);\r\n\r\n\r\n    const onConnect = useCallback(\r\n      (params) => setEdges((eds) => addEdge(params, eds)),\r\n      [setEdges],\r\n    );\r\n  \r\n    const onNodeClick = useCallback((event, node) => {\r\n      setSelectedNode(node);\r\n      setNodeName(node.data.label);\r\n      setShowColorPicker(true);\r\n      setColorPickerPosition({ x: event.clientX, y: event.clientY });\r\n    }, []);\r\n\r\n    const changeNodeColor = useCallback((color) => {\r\n      setNodes((nds) =>\r\n        nds.map((n) => {\r\n          if (n.id === selectedNode.id && n.type === 'circle') {\r\n            return {\r\n              ...n,\r\n              data: { ...n.data, style: { backgroundColor: color } }\r\n            };\r\n          }\r\n          return n;\r\n        })\r\n      );\r\n      setShowColorPicker(false);\r\n    }, [selectedNode, setNodes]);;\r\n    \r\n      const onCustomColorChange = useCallback((e) => {\r\n        setCustomColor(e.target.value);\r\n      }, []);\r\n    \r\n      const onCustomColorKeyDown = useCallback((e) => {\r\n        if (e.key === 'Enter') {\r\n          changeNodeColor(customColor);\r\n        }\r\n      }, [customColor, changeNodeColor]);\r\n    \r\n      const onCustomColorBlur = useCallback(() => {\r\n        changeNodeColor(customColor);\r\n      }, [customColor, changeNodeColor]);\r\n  \r\n    const updateNodeName = useCallback(() => {\r\n      setNodes((nds) =>\r\n        nds.map((n) => {\r\n          if (n.id === selectedNode.id) {\r\n            return {\r\n              ...n,\r\n              data: { ...n.data, label: nodeName }\r\n            };\r\n          }\r\n          return n;\r\n        })\r\n      );\r\n      setSelectedNode(null);\r\n      setNodeName('');\r\n    }, [nodeName, selectedNode, setNodes]);\r\n  \r\n    const addNewNode = useCallback(() => {\r\n      const newNodeId = `node_${nodes.length + 1}`;\r\n      const newNode = {\r\n        id: newNodeId,\r\n        data: { label: `Node ${nodes.length + 1}` },\r\n        position: { x: window.innerWidth / 2 - 100, y: window.innerHeight / 2 - 50 } // Adjust for node size\r\n      };\r\n      setNodes((nds) => nds.concat(newNode));\r\n      setSelectedNode(newNode);\r\n      setNodeName(newNode.data.label);\r\n    }, [nodes, setNodes]);\r\n  \r\n    return (\r\n      <div style={{ display: 'flex', width: '100vw', height: '100vh' }}>\r\n        <Sidebar onDragStart={onDragStart} />\r\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper} style={{ flex: 1, position: 'relative' }}>\r\n          {/* Color Picker */}\r\n          {showColorPicker && (\r\n            <div style={{ position: 'absolute', left: colorPickerPosition.x, top: colorPickerPosition.y, zIndex: 5, padding: '10px', backgroundColor: '#fff', boxShadow: '0 0 10px rgba(0,0,0,0.2)' }}>\r\n              {([...usedColors].length ? [...usedColors] : defaultColors).map(color => (\r\n                <div key={color} style={{ background: color, width: '25px', height: '25px', display: 'inline-block', cursor: 'pointer', margin: '5px' }}\r\n                  onClick={() => changeNodeColor(color)} />\r\n              ))}\r\n              <input type=\"color\" value={customColor} onChange={onCustomColorChange} onKeyDown={onCustomColorKeyDown} onBlur={onCustomColorBlur} />\r\n            </div>\r\n          )}\r\n          {/* Node Name Input */}\r\n          {selectedNode && (\r\n            <div style={{ position: 'absolute', zIndex: 4, left: 10, top: 10 }}>\r\n              <input\r\n                value={nodeName}\r\n                onChange={(e) => setNodeName(e.target.value)}\r\n                onBlur={updateNodeName}\r\n                style={{ padding: '5px' }}\r\n              />\r\n            </div>\r\n          )}\r\n          {/* Add Node and Export PDF Button */}\r\n          <button onClick={exportDiagramAsPdf} style={{ position: 'absolute', right: 20, top: 20, zIndex: 4 }}>Export as PDF</button>\r\n          <button onClick={addNewNode} style={{ position: 'absolute', left: 20, bottom: 20, zIndex: 4, padding: '10px' }}>Add Node</button>\r\n          {/* React Flow */}\r\n          <ReactFlow\r\n            onInit={setReactFlowInstance}\r\n            nodes={nodes}\r\n            edges={edges}\r\n            onNodesChange={onNodesChange}\r\n            onEdgesChange={onEdgesChange}\r\n            onConnect={onConnect}\r\n            onDrop={onDrop}\r\n            onDragOver={onDragOver}\r\n            onNodeClick={onNodeClick}\r\n            fitView\r\n            nodeTypes={nodeTypes}\r\n          >\r\n            <Controls />\r\n            <MiniMap />\r\n            <Background variant=\"dots\" gap={12} size={1} />\r\n          </ReactFlow>\r\n        </div>\r\n      </div>\r\n    );\r\n          }    "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}