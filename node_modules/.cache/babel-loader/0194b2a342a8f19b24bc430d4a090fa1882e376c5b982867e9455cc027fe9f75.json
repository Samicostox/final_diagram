{"ast":null,"code":"import { Toolkit } from '../Toolkit';\nimport * as _ from 'lodash';\nimport { BaseObserver } from '../core/BaseObserver';\nexport class BaseEntity extends BaseObserver {\n  constructor(options = {}) {\n    super();\n    this.options = Object.assign({\n      id: Toolkit.UID()\n    }, options);\n  }\n  getOptions() {\n    return this.options;\n  }\n  getID() {\n    return this.options.id;\n  }\n  doClone(lookupTable = {}, clone) {\n    /*noop*/\n  }\n  clone(lookupTable = {}) {\n    // try and use an existing clone first\n    if (lookupTable[this.options.id]) {\n      return lookupTable[this.options.id];\n    }\n    let clone = _.cloneDeep(this);\n    clone.options = Object.assign(Object.assign({}, this.options), {\n      id: Toolkit.UID()\n    });\n    clone.clearListeners();\n    lookupTable[this.options.id] = clone;\n    this.doClone(lookupTable, clone);\n    return clone;\n  }\n  clearListeners() {\n    this.listeners = {};\n  }\n  deserialize(event) {\n    this.options.id = event.data.id;\n    this.options.locked = event.data.locked;\n  }\n  serialize() {\n    return {\n      id: this.options.id,\n      locked: this.options.locked\n    };\n  }\n  fireEvent(event, k) {\n    super.fireEvent(Object.assign({\n      entity: this\n    }, event), k);\n  }\n  isLocked() {\n    return this.options.locked;\n  }\n  setLocked(locked = true) {\n    this.options.locked = locked;\n    this.fireEvent({\n      locked: locked\n    }, 'lockChanged');\n  }\n}","map":{"version":3,"names":["Toolkit","_","BaseObserver","BaseEntity","constructor","options","Object","assign","id","UID","getOptions","getID","doClone","lookupTable","clone","cloneDeep","clearListeners","listeners","deserialize","event","data","locked","serialize","fireEvent","k","entity","isLocked","setLocked"],"sources":["C:\\Users\\samir\\Diagram gen\\diagram-sami\\node_modules\\@projectstorm\\react-canvas-core\\src\\core-models\\BaseEntity.ts"],"sourcesContent":["import { Toolkit } from '../Toolkit';\nimport * as _ from 'lodash';\nimport { CanvasEngine } from '../CanvasEngine';\nimport { BaseEvent, BaseListener, BaseObserver } from '../core/BaseObserver';\nimport { BaseModel } from './BaseModel';\n\nexport interface BaseEntityEvent<T extends BaseEntity = BaseEntity> extends BaseEvent {\n\tentity: T;\n}\n\nexport interface BaseEntityListener<T extends BaseEntity = BaseEntity> extends BaseListener {\n\tlockChanged?(event: BaseEntityEvent<T> & { locked: boolean }): void;\n}\n\n/**\n * @TODO move to enums\n */\nexport type BaseEntityType = 'node' | 'link' | 'port' | 'point';\n\nexport interface BaseEntityOptions {\n\tid?: string;\n\tlocked?: boolean;\n}\n\nexport type BaseEntityGenerics = {\n\tLISTENER: BaseEntityListener;\n\tOPTIONS: BaseEntityOptions;\n};\n\nexport interface DeserializeEvent<T extends BaseEntity = BaseEntity> {\n\tengine: CanvasEngine;\n\tdata: ReturnType<T['serialize']>;\n\tregisterModel(model: BaseModel);\n\tgetModel<T extends BaseModel>(id: string): Promise<T>;\n}\n\nexport class BaseEntity<T extends BaseEntityGenerics = BaseEntityGenerics> extends BaseObserver<T['LISTENER']> {\n\tprotected options: T['OPTIONS'];\n\n\tconstructor(options: T['OPTIONS'] = {}) {\n\t\tsuper();\n\t\tthis.options = {\n\t\t\tid: Toolkit.UID(),\n\t\t\t...options\n\t\t};\n\t}\n\n\tgetOptions() {\n\t\treturn this.options;\n\t}\n\n\tgetID() {\n\t\treturn this.options.id;\n\t}\n\n\tdoClone(lookupTable: { [s: string]: any } = {}, clone: any) {\n\t\t/*noop*/\n\t}\n\n\tclone(lookupTable: { [s: string]: any } = {}) {\n\t\t// try and use an existing clone first\n\t\tif (lookupTable[this.options.id]) {\n\t\t\treturn lookupTable[this.options.id];\n\t\t}\n\t\tlet clone = _.cloneDeep(this);\n\t\tclone.options = {\n\t\t\t...this.options,\n\t\t\tid: Toolkit.UID()\n\t\t};\n\t\tclone.clearListeners();\n\t\tlookupTable[this.options.id] = clone;\n\n\t\tthis.doClone(lookupTable, clone);\n\t\treturn clone;\n\t}\n\n\tclearListeners() {\n\t\tthis.listeners = {};\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tthis.options.id = event.data.id;\n\t\tthis.options.locked = event.data.locked;\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\tid: this.options.id,\n\t\t\tlocked: this.options.locked\n\t\t};\n\t}\n\n\tfireEvent<L extends Partial<BaseEntityEvent> & object>(event: L, k: keyof T['LISTENER']) {\n\t\tsuper.fireEvent(\n\t\t\t{\n\t\t\t\tentity: this,\n\t\t\t\t...event\n\t\t\t},\n\t\t\tk\n\t\t);\n\t}\n\n\tpublic isLocked(): boolean {\n\t\treturn this.options.locked;\n\t}\n\n\tpublic setLocked(locked: boolean = true) {\n\t\tthis.options.locked = locked;\n\t\tthis.fireEvent(\n\t\t\t{\n\t\t\t\tlocked: locked\n\t\t\t},\n\t\t\t'lockChanged'\n\t\t);\n\t}\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,YAAY;AACpC,OAAO,KAAKC,CAAC,MAAM,QAAQ;AAE3B,SAAkCC,YAAY,QAAQ,sBAAsB;AAiC5E,OAAM,MAAOC,UAA8D,SAAQD,YAA2B;EAG7GE,YAAYC,OAAA,GAAwB,EAAE;IACrC,KAAK,EAAE;IACP,IAAI,CAACA,OAAO,GAAAC,MAAA,CAAAC,MAAA;MACXC,EAAE,EAAER,OAAO,CAACS,GAAG;IAAE,GACdJ,OAAO,CACV;EACF;EAEAK,UAAUA,CAAA;IACT,OAAO,IAAI,CAACL,OAAO;EACpB;EAEAM,KAAKA,CAAA;IACJ,OAAO,IAAI,CAACN,OAAO,CAACG,EAAE;EACvB;EAEAI,OAAOA,CAACC,WAAA,GAAoC,EAAE,EAAEC,KAAU;IACzD;EAAA;EAGDA,KAAKA,CAACD,WAAA,GAAoC,EAAE;IAC3C;IACA,IAAIA,WAAW,CAAC,IAAI,CAACR,OAAO,CAACG,EAAE,CAAC,EAAE;MACjC,OAAOK,WAAW,CAAC,IAAI,CAACR,OAAO,CAACG,EAAE,CAAC;;IAEpC,IAAIM,KAAK,GAAGb,CAAC,CAACc,SAAS,CAAC,IAAI,CAAC;IAC7BD,KAAK,CAACT,OAAO,GAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACT,IAAI,CAACF,OAAO;MACfG,EAAE,EAAER,OAAO,CAACS,GAAG;IAAE,EACjB;IACDK,KAAK,CAACE,cAAc,EAAE;IACtBH,WAAW,CAAC,IAAI,CAACR,OAAO,CAACG,EAAE,CAAC,GAAGM,KAAK;IAEpC,IAAI,CAACF,OAAO,CAACC,WAAW,EAAEC,KAAK,CAAC;IAChC,OAAOA,KAAK;EACb;EAEAE,cAAcA,CAAA;IACb,IAAI,CAACC,SAAS,GAAG,EAAE;EACpB;EAEAC,WAAWA,CAACC,KAA6B;IACxC,IAAI,CAACd,OAAO,CAACG,EAAE,GAAGW,KAAK,CAACC,IAAI,CAACZ,EAAE;IAC/B,IAAI,CAACH,OAAO,CAACgB,MAAM,GAAGF,KAAK,CAACC,IAAI,CAACC,MAAM;EACxC;EAEAC,SAASA,CAAA;IACR,OAAO;MACNd,EAAE,EAAE,IAAI,CAACH,OAAO,CAACG,EAAE;MACnBa,MAAM,EAAE,IAAI,CAAChB,OAAO,CAACgB;KACrB;EACF;EAEAE,SAASA,CAA8CJ,KAAQ,EAAEK,CAAsB;IACtF,KAAK,CAACD,SAAS,CAAAjB,MAAA,CAAAC,MAAA;MAEbkB,MAAM,EAAE;IAAI,GACTN,KAAK,GAETK,CAAC,CACD;EACF;EAEOE,QAAQA,CAAA;IACd,OAAO,IAAI,CAACrB,OAAO,CAACgB,MAAM;EAC3B;EAEOM,SAASA,CAACN,MAAA,GAAkB,IAAI;IACtC,IAAI,CAAChB,OAAO,CAACgB,MAAM,GAAGA,MAAM;IAC5B,IAAI,CAACE,SAAS,CACb;MACCF,MAAM,EAAEA;KACR,EACD,aAAa,CACb;EACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}