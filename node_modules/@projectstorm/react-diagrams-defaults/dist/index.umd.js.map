{"version":3,"file":"index.umd.js","mappings":"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","sources":["webpack://projectstorm/react-diagrams-defaults/webpack/universalModuleDefinition","webpack://projectstorm/react-diagrams-defaults/webpack/bootstrap","webpack://projectstorm/react-diagrams-defaults/webpack/runtime/compat get default export","webpack://projectstorm/react-diagrams-defaults/webpack/runtime/define property getters","webpack://projectstorm/react-diagrams-defaults/webpack/runtime/hasOwnProperty shorthand","webpack://projectstorm/react-diagrams-defaults/webpack/runtime/make namespace object","webpack://projectstorm/react-diagrams-defaults/external commonjs \"react\"","webpack://projectstorm/react-diagrams-defaults/external commonjs \"@projectstorm/react-diagrams-core\"","webpack://projectstorm/react-diagrams-defaults/./src/label/DefaultLabelModel.tsx","webpack://projectstorm/react-diagrams-defaults/external commonjs \"@emotion/styled\"","webpack://projectstorm/react-diagrams-defaults/./src/label/DefaultLabelWidget.tsx","webpack://projectstorm/react-diagrams-defaults/external commonjs \"@projectstorm/react-canvas-core\"","webpack://projectstorm/react-diagrams-defaults/./src/label/DefaultLabelFactory.tsx","webpack://projectstorm/react-diagrams-defaults/external commonjs \"@projectstorm/geometry\"","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkModel.ts","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkPointWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkSegmentWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkWidget.tsx","webpack://projectstorm/react-diagrams-defaults/external commonjs \"@emotion/react\"","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkFactory.tsx","webpack://projectstorm/react-diagrams-defaults/external commonjs \"lodash\"","webpack://projectstorm/react-diagrams-defaults/./src/port/DefaultPortModel.ts","webpack://projectstorm/react-diagrams-defaults/./src/node/DefaultNodeModel.ts","webpack://projectstorm/react-diagrams-defaults/./src/port/DefaultPortLabelWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/node/DefaultNodeWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/node/DefaultNodeFactory.tsx","webpack://projectstorm/react-diagrams-defaults/./src/port/DefaultPortFactory.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"projectstorm/react-diagrams-defaults\"] = factory();\n\telse\n\t\troot[\"projectstorm/react-diagrams-defaults\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@projectstorm/react-diagrams-core\");","import { LabelModel, LabelModelGenerics, LabelModelOptions } from '@projectstorm/react-diagrams-core';\nimport { DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultLabelModelOptions extends LabelModelOptions {\n\tlabel?: string;\n}\n\nexport interface DefaultLabelModelGenerics extends LabelModelGenerics {\n\tOPTIONS: DefaultLabelModelOptions;\n}\n\nexport class DefaultLabelModel extends LabelModel<DefaultLabelModelGenerics> {\n\tconstructor(options: DefaultLabelModelOptions = {}) {\n\t\tsuper({\n\t\t\toffsetY: options.offsetY == null ? -23 : options.offsetY,\n\t\t\ttype: 'default',\n\t\t\t...options\n\t\t});\n\t}\n\n\tsetLabel(label: string) {\n\t\tthis.options.label = label;\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.label = event.data.label;\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tlabel: this.options.label\n\t\t};\n\t}\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@emotion/styled\");","import * as React from 'react';\nimport { DefaultLabelModel } from './DefaultLabelModel';\nimport styled from '@emotion/styled';\n\nexport interface DefaultLabelWidgetProps {\n\tmodel: DefaultLabelModel;\n}\n\nnamespace S {\n\texport const Label = styled.div`\n\t\tbackground: rgba(0, 0, 0, 0.8);\n\t\tborder-radius: 5px;\n\t\tcolor: white;\n\t\tfont-size: 12px;\n\t\tpadding: 4px 8px;\n\t\tfont-family: sans-serif;\n\t\tuser-select: none;\n\t`;\n}\n\nexport class DefaultLabelWidget extends React.Component<DefaultLabelWidgetProps> {\n\trender() {\n\t\treturn <S.Label>{this.props.model.getOptions().label}</S.Label>;\n\t}\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@projectstorm/react-canvas-core\");","import * as React from 'react';\nimport { DefaultLabelModel } from './DefaultLabelModel';\nimport { DefaultLabelWidget } from './DefaultLabelWidget';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\n/**\n * @author Dylan Vorster\n */\nexport class DefaultLabelFactory extends AbstractReactFactory<DefaultLabelModel, DiagramEngine> {\n\tconstructor() {\n\t\tsuper('default');\n\t}\n\n\tgenerateReactWidget(event): JSX.Element {\n\t\treturn <DefaultLabelWidget model={event.model} />;\n\t}\n\n\tgenerateModel(event): DefaultLabelModel {\n\t\treturn new DefaultLabelModel();\n\t}\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@projectstorm/geometry\");","import {\n\tDiagramEngine,\n\tLabelModel,\n\tLinkModel,\n\tLinkModelGenerics,\n\tLinkModelListener,\n\tPortModel,\n\tPortModelAlignment\n} from '@projectstorm/react-diagrams-core';\nimport { DefaultLabelModel } from '../label/DefaultLabelModel';\nimport { BezierCurve } from '@projectstorm/geometry';\nimport { BaseEntityEvent, BaseModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultLinkModelListener extends LinkModelListener {\n\tcolorChanged?(event: BaseEntityEvent<DefaultLinkModel> & { color: null | string }): void;\n\n\twidthChanged?(event: BaseEntityEvent<DefaultLinkModel> & { width: 0 | number }): void;\n}\n\nexport interface DefaultLinkModelOptions extends BaseModelOptions {\n\twidth?: number;\n\tcolor?: string;\n\tselectedColor?: string;\n\tcurvyness?: number;\n\ttype?: string;\n\ttestName?: string;\n}\n\nexport interface DefaultLinkModelGenerics extends LinkModelGenerics {\n\tLISTENER: DefaultLinkModelListener;\n\tOPTIONS: DefaultLinkModelOptions;\n}\n\nexport class DefaultLinkModel extends LinkModel<DefaultLinkModelGenerics> {\n\tconstructor(options: DefaultLinkModelOptions = {}) {\n\t\tsuper({\n\t\t\ttype: 'default',\n\t\t\twidth: options.width || 3,\n\t\t\tcolor: options.color || 'gray',\n\t\t\tselectedColor: options.selectedColor || 'rgb(0,192,255)',\n\t\t\tcurvyness: 50,\n\t\t\t...options\n\t\t});\n\t}\n\n\tcalculateControlOffset(port: PortModel): [number, number] {\n\t\tif (port.getOptions().alignment === PortModelAlignment.RIGHT) {\n\t\t\treturn [this.options.curvyness, 0];\n\t\t} else if (port.getOptions().alignment === PortModelAlignment.LEFT) {\n\t\t\treturn [-this.options.curvyness, 0];\n\t\t} else if (port.getOptions().alignment === PortModelAlignment.TOP) {\n\t\t\treturn [0, -this.options.curvyness];\n\t\t}\n\t\treturn [0, this.options.curvyness];\n\t}\n\n\tgetSVGPath(): string {\n\t\tif (this.points.length == 2) {\n\t\t\tconst curve = new BezierCurve();\n\t\t\tcurve.setSource(this.getFirstPoint().getPosition());\n\t\t\tcurve.setTarget(this.getLastPoint().getPosition());\n\t\t\tcurve.setSourceControl(this.getFirstPoint().getPosition().clone());\n\t\t\tcurve.setTargetControl(this.getLastPoint().getPosition().clone());\n\n\t\t\tif (this.sourcePort) {\n\t\t\t\tcurve.getSourceControl().translate(...this.calculateControlOffset(this.getSourcePort()));\n\t\t\t}\n\n\t\t\tif (this.targetPort) {\n\t\t\t\tcurve.getTargetControl().translate(...this.calculateControlOffset(this.getTargetPort()));\n\t\t\t}\n\t\t\treturn curve.getSVGCurve();\n\t\t}\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\twidth: this.options.width,\n\t\t\tcolor: this.options.color,\n\t\t\tcurvyness: this.options.curvyness,\n\t\t\tselectedColor: this.options.selectedColor\n\t\t};\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.color = event.data.color;\n\t\tthis.options.width = event.data.width;\n\t\tthis.options.curvyness = event.data.curvyness;\n\t\tthis.options.selectedColor = event.data.selectedColor;\n\t}\n\n\taddLabel(label: LabelModel | string) {\n\t\tif (label instanceof LabelModel) {\n\t\t\treturn super.addLabel(label);\n\t\t}\n\t\tlet labelOb = new DefaultLabelModel();\n\t\tlabelOb.setLabel(label);\n\t\treturn super.addLabel(labelOb);\n\t}\n\n\tsetWidth(width: number) {\n\t\tthis.options.width = width;\n\t\tthis.fireEvent({ width }, 'widthChanged');\n\t}\n\n\tsetColor(color: string) {\n\t\tthis.options.color = color;\n\t\tthis.fireEvent({ color }, 'colorChanged');\n\t}\n}\n","import * as React from 'react';\nimport { PointModel } from '@projectstorm/react-diagrams-core';\nimport styled from '@emotion/styled';\n\nexport interface DefaultLinkPointWidgetProps {\n\tpoint: PointModel;\n\tcolor?: string;\n\tcolorSelected: string;\n}\n\nexport interface DefaultLinkPointWidgetState {\n\tselected: boolean;\n}\n\nnamespace S {\n\texport const PointTop = styled.circle`\n\t\tpointer-events: all;\n\t`;\n}\n\nexport class DefaultLinkPointWidget extends React.Component<DefaultLinkPointWidgetProps, DefaultLinkPointWidgetState> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { point } = this.props;\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t<circle\n\t\t\t\t\tcx={point.getPosition().x}\n\t\t\t\t\tcy={point.getPosition().y}\n\t\t\t\t\tr={5}\n\t\t\t\t\tfill={this.state.selected || this.props.point.isSelected() ? this.props.colorSelected : this.props.color}\n\t\t\t\t/>\n\t\t\t\t<S.PointTop\n\t\t\t\t\tclassName=\"point\"\n\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\tthis.setState({ selected: false });\n\t\t\t\t\t}}\n\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\tthis.setState({ selected: true });\n\t\t\t\t\t}}\n\t\t\t\t\tdata-id={point.getID()}\n\t\t\t\t\tdata-linkid={point.getLink().getID()}\n\t\t\t\t\tcx={point.getPosition().x}\n\t\t\t\t\tcy={point.getPosition().y}\n\t\t\t\t\tr={15}\n\t\t\t\t\topacity={0.0}\n\t\t\t\t/>\n\t\t\t</g>\n\t\t);\n\t}\n}\n","import * as React from 'react';\nimport { DefaultLinkFactory } from './DefaultLinkFactory';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\nimport { DefaultLinkModel } from './DefaultLinkModel';\n\nexport interface DefaultLinkSegmentWidgetProps {\n\tpath: string;\n\tlink: DefaultLinkModel;\n\tselected: boolean;\n\tforwardRef: React.RefObject<SVGPathElement>;\n\tfactory: DefaultLinkFactory;\n\tdiagramEngine: DiagramEngine;\n\tonSelection: (selected: boolean) => any;\n\textras: object;\n}\n\nexport class DefaultLinkSegmentWidget extends React.Component<DefaultLinkSegmentWidgetProps> {\n\trender() {\n\t\tconst Bottom = React.cloneElement(\n\t\t\tthis.props.factory.generateLinkSegment(\n\t\t\t\tthis.props.link,\n\t\t\t\tthis.props.selected || this.props.link.isSelected(),\n\t\t\t\tthis.props.path\n\t\t\t),\n\t\t\t{\n\t\t\t\tref: this.props.forwardRef\n\t\t\t}\n\t\t);\n\n\t\tconst Top = React.cloneElement(Bottom, {\n\t\t\tstrokeLinecap: 'round',\n\t\t\tonMouseLeave: () => {\n\t\t\t\tthis.props.onSelection(false);\n\t\t\t},\n\t\t\tonMouseEnter: () => {\n\t\t\t\tthis.props.onSelection(true);\n\t\t\t},\n\t\t\t...this.props.extras,\n\t\t\tref: null,\n\t\t\t'data-linkid': this.props.link.getID(),\n\t\t\tstrokeOpacity: this.props.selected ? 0.1 : 0,\n\t\t\tstrokeWidth: 20,\n\t\t\tfill: 'none',\n\t\t\tonContextMenu: () => {\n\t\t\t\tif (!this.props.link.isLocked()) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.props.link.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t{Bottom}\n\t\t\t\t{Top}\n\t\t\t</g>\n\t\t);\n\t}\n}\n","import * as React from 'react';\nimport { DiagramEngine, LinkWidget, PointModel } from '@projectstorm/react-diagrams-core';\nimport { DefaultLinkModel } from './DefaultLinkModel';\nimport { DefaultLinkPointWidget } from './DefaultLinkPointWidget';\nimport { DefaultLinkSegmentWidget } from './DefaultLinkSegmentWidget';\nimport { MouseEvent } from 'react';\n\nexport interface DefaultLinkProps {\n\tlink: DefaultLinkModel;\n\tdiagramEngine: DiagramEngine;\n\tpointAdded?: (point: PointModel, event: MouseEvent) => any;\n\trenderPoints?: boolean;\n\tselected?: (event: MouseEvent) => any;\n}\n\nexport interface DefaultLinkState {\n\tselected: boolean;\n}\n\nexport class DefaultLinkWidget extends React.Component<DefaultLinkProps, DefaultLinkState> {\n\trefPaths: React.RefObject<SVGPathElement>[];\n\n\tconstructor(props: DefaultLinkProps) {\n\t\tsuper(props);\n\t\tthis.refPaths = [];\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\t}\n\n\trenderPoints() {\n\t\treturn this.props.renderPoints ?? true;\n\t}\n\n\tcomponentDidUpdate(): void {\n\t\tthis.props.link.setRenderedPaths(\n\t\t\tthis.refPaths.map((ref) => {\n\t\t\t\treturn ref.current;\n\t\t\t})\n\t\t);\n\t}\n\n\tcomponentDidMount(): void {\n\t\tthis.props.link.setRenderedPaths(\n\t\t\tthis.refPaths.map((ref) => {\n\t\t\t\treturn ref.current;\n\t\t\t})\n\t\t);\n\t}\n\n\tcomponentWillUnmount(): void {\n\t\tthis.props.link.setRenderedPaths([]);\n\t}\n\n\taddPointToLink(event: MouseEvent, index: number) {\n\t\tif (\n\t\t\t!event.shiftKey &&\n\t\t\t!this.props.link.isLocked() &&\n\t\t\tthis.props.link.getPoints().length - 1 <= this.props.diagramEngine.getMaxNumberPointsPerLink()\n\t\t) {\n\t\t\tconst position = this.props.diagramEngine.getRelativeMousePoint(event);\n\t\t\tconst point = this.props.link.point(position.x, position.y, index);\n\t\t\tevent.persist();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.forceUpdate(() => {\n\t\t\t\tthis.props.diagramEngine.getActionEventBus().fireAction({\n\t\t\t\t\tevent,\n\t\t\t\t\tmodel: point\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tgeneratePoint(point: PointModel): JSX.Element {\n\t\treturn (\n\t\t\t<DefaultLinkPointWidget\n\t\t\t\tkey={point.getID()}\n\t\t\t\tpoint={point as any}\n\t\t\t\tcolorSelected={this.props.link.getOptions().selectedColor}\n\t\t\t\tcolor={this.props.link.getOptions().color}\n\t\t\t/>\n\t\t);\n\t}\n\n\tgenerateLink(path: string, extraProps: any, id: string | number): JSX.Element {\n\t\tconst ref = React.createRef<SVGPathElement>();\n\t\tthis.refPaths.push(ref);\n\t\treturn (\n\t\t\t<DefaultLinkSegmentWidget\n\t\t\t\tkey={`link-${id}`}\n\t\t\t\tpath={path}\n\t\t\t\tselected={this.state.selected}\n\t\t\t\tdiagramEngine={this.props.diagramEngine}\n\t\t\t\tfactory={this.props.diagramEngine.getFactoryForLink(this.props.link)}\n\t\t\t\tlink={this.props.link}\n\t\t\t\tforwardRef={ref}\n\t\t\t\tonSelection={(selected) => {\n\t\t\t\t\tthis.setState({ selected: selected });\n\t\t\t\t}}\n\t\t\t\textras={extraProps}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\t//ensure id is present for all points on the path\n\t\tvar points = this.props.link.getPoints();\n\t\tvar paths = [];\n\t\tthis.refPaths = [];\n\n\t\tif (points.length === 2) {\n\t\t\tpaths.push(\n\t\t\t\tthis.generateLink(\n\t\t\t\t\tthis.props.link.getSVGPath(),\n\t\t\t\t\t{\n\t\t\t\t\t\tonMouseDown: (event) => {\n\t\t\t\t\t\t\tthis.props.selected?.(event);\n\t\t\t\t\t\t\tthis.addPointToLink(event, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'0'\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// draw the link as dangeling\n\t\t\tif (this.props.link.getTargetPort() == null) {\n\t\t\t\tpaths.push(this.generatePoint(points[1]));\n\t\t\t}\n\t\t} else {\n\t\t\t//draw the multiple anchors and complex line instead\n\t\t\tfor (let j = 0; j < points.length - 1; j++) {\n\t\t\t\tpaths.push(\n\t\t\t\t\tthis.generateLink(\n\t\t\t\t\t\tLinkWidget.generateLinePath(points[j], points[j + 1]),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'data-linkid': this.props.link.getID(),\n\t\t\t\t\t\t\t'data-point': j,\n\t\t\t\t\t\t\tonMouseDown: (event: MouseEvent) => {\n\t\t\t\t\t\t\t\tthis.props.selected?.(event);\n\t\t\t\t\t\t\t\tthis.addPointToLink(event, j + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tj\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (this.renderPoints()) {\n\t\t\t\t//render the circles\n\t\t\t\tfor (let i = 1; i < points.length - 1; i++) {\n\t\t\t\t\tpaths.push(this.generatePoint(points[i]));\n\t\t\t\t}\n\n\t\t\t\tif (this.props.link.getTargetPort() == null) {\n\t\t\t\t\tpaths.push(this.generatePoint(points[points.length - 1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn <g data-default-link-test={this.props.link.getOptions().testName}>{paths}</g>;\n\t}\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@emotion/react\");","import * as React from 'react';\nimport { DefaultLinkModel } from './DefaultLinkModel';\nimport { DefaultLinkWidget } from './DefaultLinkWidget';\nimport styled from '@emotion/styled';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\nimport { css, keyframes } from '@emotion/react';\n\nnamespace S {\n\texport const Keyframes = keyframes`\n\t\tfrom {\n\t\t\tstroke-dashoffset: 24;\n\t\t}\n\t\tto {\n\t\t\tstroke-dashoffset: 0;\n\t\t}\n\t`;\n\n\tconst selected = css`\n\t\tstroke-dasharray: 10, 2;\n\t\tanimation: ${Keyframes} 1s linear infinite;\n\t`;\n\n\texport const Path = styled.path<{ selected: boolean }>`\n\t\t${(p) => p.selected && selected};\n\t\tfill: none;\n\t\tpointer-events: auto;\n\t`;\n}\n\nexport class DefaultLinkFactory<Link extends DefaultLinkModel = DefaultLinkModel> extends AbstractReactFactory<\n\tLink,\n\tDiagramEngine\n> {\n\tconstructor(type = 'default') {\n\t\tsuper(type);\n\t}\n\n\tgenerateReactWidget(event): JSX.Element {\n\t\treturn <DefaultLinkWidget link={event.model} diagramEngine={this.engine} />;\n\t}\n\n\tgenerateModel(event): Link {\n\t\treturn new DefaultLinkModel() as Link;\n\t}\n\n\tgenerateLinkSegment(model: Link, selected: boolean, path: string) {\n\t\treturn (\n\t\t\t<S.Path\n\t\t\t\tselected={selected}\n\t\t\t\tstroke={selected ? model.getOptions().selectedColor : model.getOptions().color}\n\t\t\t\tstrokeWidth={model.getOptions().width}\n\t\t\t\td={path}\n\t\t\t/>\n\t\t);\n\t}\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash\");","import {\n\tLinkModel,\n\tPortModel,\n\tPortModelAlignment,\n\tPortModelGenerics,\n\tPortModelOptions\n} from '@projectstorm/react-diagrams-core';\nimport { DefaultLinkModel } from '../link/DefaultLinkModel';\nimport { AbstractModelFactory, DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultPortModelOptions extends PortModelOptions {\n\tlabel?: string;\n\tin?: boolean;\n\ttype?: string;\n}\n\nexport interface DefaultPortModelGenerics extends PortModelGenerics {\n\tOPTIONS: DefaultPortModelOptions;\n}\n\nexport class DefaultPortModel extends PortModel<DefaultPortModelGenerics> {\n\tconstructor(isIn: boolean, name?: string, label?: string);\n\tconstructor(options: DefaultPortModelOptions);\n\tconstructor(options: DefaultPortModelOptions | boolean, name?: string, label?: string) {\n\t\tif (!!name) {\n\t\t\toptions = {\n\t\t\t\tin: !!options,\n\t\t\t\tname: name,\n\t\t\t\tlabel: label\n\t\t\t};\n\t\t}\n\t\toptions = options as DefaultPortModelOptions;\n\t\tsuper({\n\t\t\tlabel: options.label || options.name,\n\t\t\talignment: options.in ? PortModelAlignment.LEFT : PortModelAlignment.RIGHT,\n\t\t\ttype: 'default',\n\t\t\t...options\n\t\t});\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.in = event.data.in;\n\t\tthis.options.label = event.data.label;\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tin: this.options.in,\n\t\t\tlabel: this.options.label\n\t\t};\n\t}\n\n\tlink<T extends LinkModel>(port: PortModel, factory?: AbstractModelFactory<T>): T {\n\t\tlet link = this.createLinkModel(factory);\n\t\tlink.setSourcePort(this);\n\t\tlink.setTargetPort(port);\n\t\treturn link as T;\n\t}\n\n\tcanLinkToPort(port: PortModel): boolean {\n\t\tif (port instanceof DefaultPortModel) {\n\t\t\treturn this.options.in !== port.getOptions().in;\n\t\t}\n\t\treturn true;\n\t}\n\n\tcreateLinkModel(factory?: AbstractModelFactory<LinkModel>): LinkModel {\n\t\tlet link = super.createLinkModel();\n\t\tif (!link && factory) {\n\t\t\treturn factory.generateModel({});\n\t\t}\n\t\treturn link || new DefaultLinkModel();\n\t}\n}\n","import * as _ from 'lodash';\nimport { NodeModel, NodeModelGenerics, PortModelAlignment } from '@projectstorm/react-diagrams-core';\nimport { DefaultPortModel } from '../port/DefaultPortModel';\nimport { BasePositionModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultNodeModelOptions extends BasePositionModelOptions {\n\tname?: string;\n\tcolor?: string;\n}\n\nexport interface DefaultNodeModelGenerics extends NodeModelGenerics {\n\tOPTIONS: DefaultNodeModelOptions;\n}\n\nexport class DefaultNodeModel extends NodeModel<DefaultNodeModelGenerics> {\n\tprotected portsIn: DefaultPortModel[];\n\tprotected portsOut: DefaultPortModel[];\n\n\tconstructor(name: string, color: string);\n\tconstructor(options?: DefaultNodeModelOptions);\n\tconstructor(options: any = {}, color?: string) {\n\t\tif (typeof options === 'string') {\n\t\t\toptions = {\n\t\t\t\tname: options,\n\t\t\t\tcolor: color\n\t\t\t};\n\t\t}\n\t\tsuper({\n\t\t\ttype: 'default',\n\t\t\tname: 'Untitled',\n\t\t\tcolor: 'rgb(0,192,255)',\n\t\t\t...options\n\t\t});\n\t\tthis.portsOut = [];\n\t\tthis.portsIn = [];\n\t}\n\n\tdoClone(lookupTable: {}, clone: any): void {\n\t\tclone.portsIn = [];\n\t\tclone.portsOut = [];\n\t\tsuper.doClone(lookupTable, clone);\n\t}\n\n\tremovePort(port: DefaultPortModel): void {\n\t\tsuper.removePort(port);\n\t\tif (port.getOptions().in) {\n\t\t\tthis.portsIn.splice(this.portsIn.indexOf(port), 1);\n\t\t} else {\n\t\t\tthis.portsOut.splice(this.portsOut.indexOf(port), 1);\n\t\t}\n\t}\n\n\taddPort<T extends DefaultPortModel>(port: T): T {\n\t\tsuper.addPort(port);\n\t\tif (port.getOptions().in) {\n\t\t\tif (this.portsIn.indexOf(port) === -1) {\n\t\t\t\tthis.portsIn.push(port);\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.portsOut.indexOf(port) === -1) {\n\t\t\t\tthis.portsOut.push(port);\n\t\t\t}\n\t\t}\n\t\treturn port;\n\t}\n\n\taddInPort(label: string, after = true): DefaultPortModel {\n\t\tconst p = new DefaultPortModel({\n\t\t\tin: true,\n\t\t\tname: label,\n\t\t\tlabel: label,\n\t\t\talignment: PortModelAlignment.LEFT\n\t\t});\n\t\tif (!after) {\n\t\t\tthis.portsIn.splice(0, 0, p);\n\t\t}\n\t\treturn this.addPort(p);\n\t}\n\n\taddOutPort(label: string, after = true): DefaultPortModel {\n\t\tconst p = new DefaultPortModel({\n\t\t\tin: false,\n\t\t\tname: label,\n\t\t\tlabel: label,\n\t\t\talignment: PortModelAlignment.RIGHT\n\t\t});\n\t\tif (!after) {\n\t\t\tthis.portsOut.splice(0, 0, p);\n\t\t}\n\t\treturn this.addPort(p);\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.name = event.data.name;\n\t\tthis.options.color = event.data.color;\n\t\tthis.portsIn = _.map(event.data.portsInOrder, (id) => {\n\t\t\treturn this.getPortFromID(id);\n\t\t}) as DefaultPortModel[];\n\t\tthis.portsOut = _.map(event.data.portsOutOrder, (id) => {\n\t\t\treturn this.getPortFromID(id);\n\t\t}) as DefaultPortModel[];\n\t}\n\n\tserialize(): any {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tname: this.options.name,\n\t\t\tcolor: this.options.color,\n\t\t\tportsInOrder: _.map(this.portsIn, (port) => {\n\t\t\t\treturn port.getID();\n\t\t\t}),\n\t\t\tportsOutOrder: _.map(this.portsOut, (port) => {\n\t\t\t\treturn port.getID();\n\t\t\t})\n\t\t};\n\t}\n\n\tgetInPorts(): DefaultPortModel[] {\n\t\treturn this.portsIn;\n\t}\n\n\tgetOutPorts(): DefaultPortModel[] {\n\t\treturn this.portsOut;\n\t}\n}\n","import * as React from 'react';\nimport { DiagramEngine, PortWidget } from '@projectstorm/react-diagrams-core';\nimport { DefaultPortModel } from './DefaultPortModel';\nimport styled from '@emotion/styled';\n\nexport interface DefaultPortLabelProps {\n\tport: DefaultPortModel;\n\tengine: DiagramEngine;\n}\n\nnamespace S {\n\texport const PortLabel = styled.div`\n\t\tdisplay: flex;\n\t\tmargin-top: 1px;\n\t\talign-items: center;\n\t`;\n\n\texport const Label = styled.div`\n\t\tpadding: 0 5px;\n\t\tflex-grow: 1;\n\t`;\n\n\texport const Port = styled.div`\n\t\twidth: 15px;\n\t\theight: 15px;\n\t\tbackground: rgba(255, 255, 255, 0.1);\n\n\t\t&:hover {\n\t\t\tbackground: rgb(192, 255, 0);\n\t\t}\n\t`;\n}\n\nexport class DefaultPortLabel extends React.Component<DefaultPortLabelProps> {\n\trender() {\n\t\tconst port = (\n\t\t\t<PortWidget engine={this.props.engine} port={this.props.port}>\n\t\t\t\t<S.Port />\n\t\t\t</PortWidget>\n\t\t);\n\t\tconst label = <S.Label>{this.props.port.getOptions().label}</S.Label>;\n\n\t\treturn (\n\t\t\t<S.PortLabel>\n\t\t\t\t{this.props.port.getOptions().in ? port : label}\n\t\t\t\t{this.props.port.getOptions().in ? label : port}\n\t\t\t</S.PortLabel>\n\t\t);\n\t}\n}\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\nimport { DefaultNodeModel } from './DefaultNodeModel';\nimport { DefaultPortLabel } from '../port/DefaultPortLabelWidget';\nimport styled from '@emotion/styled';\n\nnamespace S {\n\texport const Node = styled.div<{ background: string; selected: boolean }>`\n\t\tbackground-color: ${(p) => p.background};\n\t\tborder-radius: 5px;\n\t\tfont-family: sans-serif;\n\t\tcolor: white;\n\t\tborder: solid 2px black;\n\t\toverflow: visible;\n\t\tfont-size: 11px;\n\t\tborder: solid 2px ${(p) => (p.selected ? 'rgb(0,192,255)' : 'black')};\n\t`;\n\n\texport const Title = styled.div`\n\t\tbackground: rgba(0, 0, 0, 0.3);\n\t\tdisplay: flex;\n\t\twhite-space: nowrap;\n\t\tjustify-items: center;\n\t`;\n\n\texport const TitleName = styled.div`\n\t\tflex-grow: 1;\n\t\tpadding: 5px 5px;\n\t`;\n\n\texport const Ports = styled.div`\n\t\tdisplay: flex;\n\t\tbackground-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2));\n\t`;\n\n\texport const PortsContainer = styled.div`\n\t\tflex-grow: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\n\t\t&:first-of-type {\n\t\t\tmargin-right: 10px;\n\t\t}\n\n\t\t&:only-child {\n\t\t\tmargin-right: 0px;\n\t\t}\n\t`;\n}\n\nexport interface DefaultNodeProps {\n\tnode: DefaultNodeModel;\n\tengine: DiagramEngine;\n}\n\n/**\n * Default node that models the DefaultNodeModel. It creates two columns\n * for both all the input ports on the left, and the output ports on the right.\n */\nexport class DefaultNodeWidget extends React.Component<DefaultNodeProps> {\n\tgeneratePort = (port) => {\n\t\treturn <DefaultPortLabel engine={this.props.engine} port={port} key={port.getID()} />;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<S.Node\n\t\t\t\tdata-default-node-name={this.props.node.getOptions().name}\n\t\t\t\tselected={this.props.node.isSelected()}\n\t\t\t\tbackground={this.props.node.getOptions().color}\n\t\t\t>\n\t\t\t\t<S.Title>\n\t\t\t\t\t<S.TitleName>{this.props.node.getOptions().name}</S.TitleName>\n\t\t\t\t</S.Title>\n\t\t\t\t<S.Ports>\n\t\t\t\t\t<S.PortsContainer>{_.map(this.props.node.getInPorts(), this.generatePort)}</S.PortsContainer>\n\t\t\t\t\t<S.PortsContainer>{_.map(this.props.node.getOutPorts(), this.generatePort)}</S.PortsContainer>\n\t\t\t\t</S.Ports>\n\t\t\t</S.Node>\n\t\t);\n\t}\n}\n","import * as React from 'react';\nimport { DefaultNodeModel } from './DefaultNodeModel';\nimport { DefaultNodeWidget } from './DefaultNodeWidget';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\nexport class DefaultNodeFactory extends AbstractReactFactory<DefaultNodeModel, DiagramEngine> {\n\tconstructor() {\n\t\tsuper('default');\n\t}\n\n\tgenerateReactWidget(event): JSX.Element {\n\t\treturn <DefaultNodeWidget engine={this.engine} node={event.model} />;\n\t}\n\n\tgenerateModel(event): DefaultNodeModel {\n\t\treturn new DefaultNodeModel();\n\t}\n}\n","import { DefaultPortModel } from './DefaultPortModel';\nimport { AbstractModelFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\nexport class DefaultPortFactory extends AbstractModelFactory<DefaultPortModel, DiagramEngine> {\n\tconstructor() {\n\t\tsuper('default');\n\t}\n\n\tgenerateModel(): DefaultPortModel {\n\t\treturn new DefaultPortModel({\n\t\t\tname: 'unknown'\n\t\t});\n\t}\n}\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","DefaultLabelModel","LabelModel","constructor","options","super","offsetY","type","setLabel","label","this","deserialize","event","data","serialize","S","Label","DefaultLabelWidget","render","props","model","getOptions","DefaultLabelFactory","AbstractReactFactory","generateReactWidget","generateModel","DefaultLinkModel","LinkModel","width","color","selectedColor","curvyness","calculateControlOffset","port","alignment","PortModelAlignment","RIGHT","LEFT","TOP","getSVGPath","points","length","curve","BezierCurve","setSource","getFirstPoint","getPosition","setTarget","getLastPoint","setSourceControl","clone","setTargetControl","sourcePort","getSourceControl","translate","getSourcePort","targetPort","getTargetControl","getTargetPort","getSVGCurve","addLabel","labelOb","setWidth","fireEvent","setColor","PointTop","DefaultLinkPointWidget","state","selected","point","cx","x","cy","y","r","fill","isSelected","colorSelected","className","onMouseLeave","setState","onMouseEnter","getID","getLink","opacity","DefaultLinkSegmentWidget","Bottom","generateLinkSegment","link","path","ref","forwardRef","Top","strokeLinecap","onSelection","extras","strokeOpacity","strokeWidth","onContextMenu","isLocked","preventDefault","remove","DefaultLinkWidget","refPaths","renderPoints","componentDidUpdate","setRenderedPaths","map","current","componentDidMount","componentWillUnmount","addPointToLink","index","shiftKey","getPoints","diagramEngine","getMaxNumberPointsPerLink","position","getRelativeMousePoint","persist","stopPropagation","forceUpdate","getActionEventBus","fireAction","generatePoint","generateLink","extraProps","id","push","getFactoryForLink","paths","onMouseDown","j","LinkWidget","generateLinePath","i","testName","Keyframes","keyframes","css","Path","p","DefaultLinkFactory","engine","stroke","DefaultPortModel","PortModel","name","in","createLinkModel","setSourcePort","setTargetPort","canLinkToPort","DefaultNodeModel","NodeModel","portsOut","portsIn","doClone","lookupTable","removePort","splice","indexOf","addPort","addInPort","after","addOutPort","portsInOrder","getPortFromID","portsOutOrder","getInPorts","getOutPorts","PortLabel","Port","DefaultPortLabel","PortWidget","Node","background","Title","TitleName","Ports","PortsContainer","DefaultNodeWidget","generatePort","node","DefaultNodeFactory","DefaultPortFactory","AbstractModelFactory"],"sourceRoot":""}